{"version":3,"sources":["components/Templates/ModalPopup/ModalPopup.js","components/Templates/LoadingScreenV2/LogoSlider.js","components/Templates/LoadingScreenV2/LoadingScreenV2.js"],"names":["ModalPopup","props","_this","Object","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","showModal","setHiddenAuto","bind","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","nextProps","setState","clearInterval","setHiddenInterval","_this2","setInterval","_","includes","document","body","style","overflow","_this$props","closeModal","header","footer","className","backdropClassName","zIndex","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_9__","isOpen","size","concat","tag","toggle","Component","defaultProps","LogoSlider","classCallCheck","possibleConstructorReturn","getPrototypeOf","logos","map","Logos","small","logo","keyFrameLogo","keyframes","_templateObject","length","AnimatedContainer","styled","div","_templateObject2","renderLogos","assertThisInitialized","interval","key","index","react_default","src","alt","LoadingScreenV2","overwriteShowWarning","closeLoading","handleChange","prevProps","isLoading","timer","setTimeout","clearTimeout","showLoadingError","showLoading","errorCallback","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_this$props2","isLoadingError","message","noLogos","loadingStyle","react","SpinnerAnimation","LoadingScreenV2_LogoSlider","Button","variant","height","width","onClick"],"mappings":"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","file":"static/js/LoadingScreenV2.92d4e84a.chunk.js","sourcesContent":["/**\r\n * ChangeInitialFormData.js\r\n * This is the green pencil button that appears mainly on\r\n * the compare view which will render the Edit Detail forms\r\n * of each category.\r\n *\r\n * Users will be able to change that form through this component\r\n * and will do a callback to update any changes, eg for compare view.\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport document from 'global/document';\r\nimport _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ModalPopup.scss';\r\n\r\nclass ModalPopup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showModal: props.showModal,\r\n    };\r\n\r\n    this.setHiddenAuto = this.setHiddenAuto.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { showModal } = this.props;\r\n\r\n    if (!showModal) {\r\n      this.setHiddenAuto();\r\n    }\r\n  }\r\n\r\n  // Toggle modal\r\n  componentWillReceiveProps(nextProps) {\r\n    const { showModal } = this.props;\r\n    if (nextProps.showModal !== showModal) {\r\n      this.setState({ showModal: nextProps.showModal });\r\n\r\n      if (!nextProps.showModal) {\r\n        this.setHiddenAuto();\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.setHiddenInterval);\r\n  }\r\n\r\n\r\n  setHiddenAuto() {\r\n    clearInterval(this.setHiddenInterval);\r\n    this.setHiddenInterval = setInterval(() => {\r\n      if (!this.props.showModal && !_.includes(document.body.style.overflow, 'auto')) {\r\n        document.body.style.overflow = 'hidden auto';\r\n        clearInterval(this.setHiddenInterval);\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  render() {\r\n    const { showModal } = this.state;\r\n    const {\r\n      closeModal,\r\n      header,\r\n      body,\r\n      footer,\r\n      className,\r\n      backdropClassName,\r\n      zIndex,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        isOpen={showModal}\r\n        size=\"lg\"\r\n        className={`modal-popup-custom ${className}`}\r\n        backdropClassName={backdropClassName}\r\n        zIndex={zIndex}\r\n      >\r\n        {\r\n          header &&\r\n          <ModalHeader\r\n            tag=\"h3\"\r\n            toggle={closeModal}\r\n          >\r\n            {header}\r\n          </ModalHeader>\r\n        }\r\n        {\r\n          body &&\r\n          <ModalBody>\r\n            {body}\r\n          </ModalBody>\r\n        }\r\n        {\r\n          footer &&\r\n          <ModalFooter>\r\n            {footer}\r\n          </ModalFooter>\r\n        }\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nModalPopup.defaultProps = {\r\n  showModal: false,\r\n  header: null,\r\n  body: null,\r\n  footer: null,\r\n  className: null,\r\n  backdropClassName: null,\r\n  zIndex: 1050,\r\n};\r\n\r\nModalPopup.propTypes = {\r\n  showModal: PropTypes.bool,\r\n  closeModal: PropTypes.func.isRequired,\r\n  header: PropTypes.object,\r\n  body: PropTypes.object,\r\n  footer: PropTypes.object,\r\n  className: PropTypes.string,\r\n  backdropClassName: PropTypes.string,\r\n  zIndex: PropTypes.number,\r\n};\r\n\r\nexport default ModalPopup;\r\n","/**\r\n * LoadingScreen.js\r\n * Loading screen for anywhere use\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nimport Logos from 'assets/images/InsurerLogos';\r\nimport './LoadingScreenV2.scss';\r\n\r\nclass LogoSlider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const logos = _.map(Logos.small, logo => logo);\r\n    const keyFrameLogo = keyframes`\r\n      0%    { transform: translateX(0); }\r\n      100%  { transform: translateX(calc(-84px * ${logos.length})); }\r\n    `;\r\n\r\n    const AnimatedContainer = styled.div`\r\n      animation: ${keyFrameLogo} 5s linear infinite;\r\n    `;\r\n\r\n    this.state = {\r\n      logos: _.map(Logos.small, logo => logo),\r\n      AnimatedContainer,\r\n    };\r\n\r\n    this.renderLogos = this.renderLogos.bind(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  renderLogos(key) {\r\n    const { logos } = this.state;\r\n    return _.map(logos, (logo, index) => (\r\n      <img key={`loading-icon-${key}-${index}`} src={logo} alt={`loading-icon-${index}.svg`} />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    const { AnimatedContainer } = this.state;\r\n\r\n    return (\r\n      <AnimatedContainer\r\n        className=\"logo-container\"\r\n      >\r\n        {this.renderLogos(0)}\r\n        {this.renderLogos(1)}\r\n      </AnimatedContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogoSlider;\r\n","/**\r\n * LoadingScreen.js\r\n * Loading screen for anywhere use\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ModalPopup from 'components/Templates/ModalPopup/ModalPopup';\r\nimport SpinnerAnimation from 'components/Templates/SpinnerAnimation/SpinnerAnimation';\r\nimport Button from 'components/FormsV3/Button/Button';\r\n\r\nimport LogoSlider from './LogoSlider';\r\n\r\nimport './LoadingScreenV2.scss';\r\n\r\nconst timeOutTimer = 30000;\r\n\r\nclass LoadingScreenV2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      overwriteShowWarning: false,\r\n    };\r\n\r\n    this.closeLoading = this.closeLoading.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleChange();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { isLoading } = this.props;\r\n\r\n    if (isLoading !== prevProps.isLoading) {\r\n      this.handleChange();\r\n    }\r\n  }\r\n\r\n  handleChange() {\r\n    const { isLoading } = this.props;\r\n    if (isLoading) {\r\n      this.timer = setTimeout(() => this.setState({ overwriteShowWarning: true }), timeOutTimer);\r\n    }\r\n\r\n    if (!isLoading) {\r\n      clearTimeout(this.timer);\r\n      this.setState({ overwriteShowWarning: false });\r\n    }\r\n  }\r\n\r\n  async closeLoading() {\r\n    const {\r\n      showLoadingError,\r\n      showLoading,\r\n      errorCallback,\r\n    } = this.props;\r\n\r\n    this.setState({ overwriteShowWarning: false }, async () => {\r\n      await showLoadingError(false);\r\n      showLoading(false);\r\n\r\n      if (errorCallback) {\r\n        errorCallback();\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { overwriteShowWarning } = this.state;\r\n    const {\r\n      isLoading,\r\n      isLoadingError,\r\n      message,\r\n      noLogos,\r\n    } = this.props;\r\n\r\n    const loadingStyle = isLoading ? 'loading-screen-active' : '';\r\n\r\n    return (\r\n      <Fragment>\r\n        <div\r\n          className={`loading-screen-v2 ${loadingStyle}`}\r\n        >\r\n          {\r\n            isLoading ?\r\n              <Fragment>\r\n                <SpinnerAnimation />\r\n                {\r\n                  !noLogos &&\r\n                  <div className=\"bottom-container\">\r\n                    <p>Searching from esteemed partners...</p>\r\n                    <LogoSlider />\r\n                  </div>\r\n                }\r\n              </Fragment>\r\n            : null\r\n          }\r\n        </div>\r\n        <ModalPopup\r\n          showModal={overwriteShowWarning || isLoadingError}\r\n          closeModal={this.closeLoading}\r\n          className=\"loading-modal\"\r\n          backdropClassName=\"blue-modal-backdrop\"\r\n          header={<p>An error has occured</p>}\r\n          body={message}\r\n          zIndex={1052}\r\n          footer={\r\n            <Button\r\n              variant=\"medium-flat-green\"\r\n              height={48}\r\n              width={162}\r\n              onClick={this.closeLoading}\r\n            >\r\n              <p>Close</p>\r\n            </Button>\r\n          }\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLoadingScreenV2.defaultProps = {\r\n  noLogos: false,\r\n  errorCallback: null,\r\n};\r\n\r\nLoadingScreenV2.propTypes = {\r\n  isLoading: PropTypes.bool.isRequired,\r\n  isLoadingError: PropTypes.bool.isRequired,\r\n  message: PropTypes.object.isRequired,\r\n  showLoading: PropTypes.func.isRequired,\r\n  showLoadingError: PropTypes.func.isRequired,\r\n  noLogos: PropTypes.bool,\r\n  errorCallback: PropTypes.func,\r\n};\r\n\r\nexport default LoadingScreenV2;\r\n"],"sourceRoot":""}