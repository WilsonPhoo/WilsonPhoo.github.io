{"version":3,"sources":["components/Pet/PetEditDetail.js","components/Pet/PetMain.js","containers/Pet/PetMainContainer.js","components/Pet/PetChoosePlan.js","containers/Pet/PetChoosePlanContainer.js","components/Pet/PetDetail.js","containers/Pet/PetDetailContainer.js","containers/Pet/PetRouteContainer.js","lib/trackingHelper.js","components/Templates/InsurerFormHeader/HeaderDescWithButton.js","containers/Pet/PetCheckoutContainer.js","assets/images/Pet/policypal-pet-insurance-1.svg","assets/images/Pet/policypal-pet-insurance-2.svg","assets/images/Pet/policypal-pet-insurance-3.svg","assets/images/MainFormIcons/Paw.svg"],"names":["PetEditDetail","props","_this","Object","classCallCheck","this","petFields","possibleConstructorReturn","getPrototypeOf","call","state","errorStringData","startDate","slashedStringDateToDate","form_fields","min_date","endDate","max_date","handleSubmit","bind","assertThisInitialized","handleCloseEdit","handleRevert","validateForm","_this$props","storeForm","setCloseCallBack","originalValues","e","_this$state","errorResult","pet_species","type","data","options","start_date","start","end","setState","_this2","isFirstValidate","arguments","length","undefined","_this$props2","setInsurFormState","setSubmit","submitCallback","closePopUp","history","isEmptyResult","_","isEmpty","dateReValidate","error","gaEvent","event_category","event_label","ampTag","pet","FORMSTATES","CHOOSEPLAN","index","push","concat","path","_this3","_this$props3","change","resetForm","keys","forEach","key","_this4","_this$state2","_this$props4","isPopUp","form","react_default","a","createElement","className","onSubmit","reactstrap_es","noGutters","sm","src","Paw","alt","xs","Selection","name","noEmptyTextSelection","map","option","description","sizeInSM","desc","display_name","extraInfo","onClick","preventDefault","setRestrictionPopup","values","restrictions","errorString","DatePickerV2","size","zIndex","currDate","Button","variant","width","height","RestrictionsPopup","ref","node","resPopup","Component","defaultProps","withRouter","reduxForm","destroyOnUnmount","connect","getFormValues","isRevert","editForm","dispatch","reset","setInsuranceFormState","invokeSubmit","PetMain","petPromoGiveAway","FormLanding","img1","Pet1","img2","Pet2","img3","Pet3","imgAlt","promo","react","Pet_PetEditDetail","PetMainContainer","loading","clearData","getPetFields","setFormState","MAIN","window","scrollTo","ReactPixel","track","gaTag","page_title","page_path","location","search","prevProps","loadingEnd","components_Pet_PetMain","insurance","promoGiveaways","callBack","errorMsg","time","setLoading","clearLoading","clearPetData","PetChoosePlan","doAmpTags","planTypeIndex","plansData","premium","plans","default","partner","selectedInsurers","insurerSlug","plan-name","policyTypes","discount","price","net_price","console","log","message","_loop","i","doTag","ChangeInitialFormData","valuesToListen","value","HeaderDescWithButton","logo","Logos","square","logoName","insurerName","insurerDesc","policyDetails","about","benefits","benefit","CompareView","category","currentTab","Enquiry","PetChoosePlanContainer","parsedData","getNewData","nextProps","parseData","DETAILFORM","setSelectedPlanData","petForm","getPetPlans","goBack","isLoggedIn","components_Pet_PetChoosePlan","isFWD","setPlanType","PetDetail","dateField","find","field","petMinDate","petMaxDate","errorArray","fieldsToCheck","pet_illness","pet_birth_date","idtype","id_type","hospital","document","body","scrollHeight","TextInput","placeholderString","pet_medical_record","planDetails","piggyCallback","changePlan","constants","DetailForm","email","family_name","given_name","DropDownV2","dropList","idTypes","nric","toUpper","mobile_number","address","unit_no","postal","isPostCode","addressFields","unitNo","pet_name","pet_microchip_no","renderIllnessForm","PetDetailContainer","profileValues","selectedData","others","logoDesc","planName","planTotal","info","insurer_slug","insurer_name","product_name","policyInfo","planType","toFixed","components_Pet_PetDetail","CHECKOUT","userDetails","selectedPlanData","PetRouteContainer","formIndex","isInitialLoad","resetStoreForm","replace","getPromoGiveaways","resetInsuranceForm","resetCompare","setInitialFormState","renderStepProgress","renderPetForms","changeUserDetails","prevState","isMounted","formState","match","routeResult","routeHandler","isEqual","changeForm","Date","setDate","getDate","dateToStoreString","firstName","surname","contact","postal_code","charged","StepProgressBar","maxWidth","inputList","stateList","stateDescriptions","main","Pet_PetChoosePlanContainer","Pet_PetDetailContainer","SUBMITTED","PetCheckoutContainer","Pet_PetMainContainer","_this$props5","meta","isProduction","Helmet","content","RefreshTimer","refresher","invokeNewTimer","getInsurerLogo","getAddToCartData","params","result","_params$insurer_slug","_params$product_slug","product_slug","_params$values","_params$price","product","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","pick","item","date","isObject","moment","format","isArray","Array","from","c","parseValues","id","product_image","quantity","content_ids","content_name","content_type","contents","currency","Number","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_6__","components_FormsV3_Button_Button__WEBPACK_IMPORTED_MODULE_7__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","petDetailsForm","isAdHoc","adHocData","paramsWording","getCheckoutParamsWording","getSessionParams","headerCoverage","getCheckoutHeaderDataCoverage","petIllness","session_params","medicalRecord","record","title","petFormToUse","sessionParams","petDetailFormToUse","headerData","mainDetails","attributes","compactCheckoutAttributes","end_date","subDetails","getCompactSubDetails","leftDetail","birth_date","rightDetail","pathname","trackData","coverage_level","amountPayable","wording","sessionId","react__WEBPACK_IMPORTED_MODULE_6___default","_components_Templates_Checkout_CheckoutWrapper__WEBPACK_IMPORTED_MODULE_15__","backToDetails","trackingTags","payment","cashback","rewardsID","promoCode","receipt","ownProps","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/pet.22befec4.chunk.js","sourcesContent":["/**\r\n * PetEditDetail.js\r\n * Edit Detail View for Pet\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, getFormValues, reset } from 'redux-form';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nimport Paw from 'assets/images/MainFormIcons/Paw.svg';\r\n\r\nimport Button from 'components/FormsV3/Button/Button';\r\nimport Selection from '../Forms/Selection/Selection';\r\nimport DatePickerV2 from '../Forms/DatePicker/DatePickerV2';\r\n\r\nimport RestrictionsPopup from '../Templates/RestrictionsPopup/RestrictionsPopup';\r\n\r\nimport { invokeSubmit } from '../../actions/editFormActions';\r\nimport { setInsuranceFormState, FORMSTATES } from '../../actions/insuranceActions';\r\nimport { setRestrictionPopup } from '../../actions/restrictionsActions';\r\nimport { validateForm, dateReValidate } from '../../lib/validators';\r\nimport { slashedStringDateToDate } from '../../lib/dateFunctions';\r\nimport { gaEvent, ampTag } from '../../lib/tagFunctions';\r\n\r\nimport './PetMain.scss';\r\n\r\nconst formName = 'pet';\r\n\r\nclass PetEditDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { petFields } = this.props;\r\n\r\n    this.state = {\r\n      errorStringData: {},\r\n      startDate: slashedStringDateToDate(petFields.form_fields[1].min_date),\r\n      endDate: slashedStringDateToDate(petFields.form_fields[1].max_date),\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCloseEdit = this.handleCloseEdit.bind(this);\r\n    this.handleRevert = this.handleRevert.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { storeForm, setCloseCallBack } = this.props;\r\n    this.originalValues = storeForm;\r\n\r\n    if (setCloseCallBack) {\r\n      setCloseCallBack(this.handleRevert);\r\n    }\r\n  }\r\n\r\n  validateForm(e) {\r\n    const { startDate, endDate } = this.state;\r\n    const {\r\n      petFields,\r\n    } = this.props;\r\n\r\n    const fieldsToCheck = ['pet_species', 'start_date'];\r\n    const errorResult = validateForm(e, fieldsToCheck, {\r\n      pet_species: { type: 'ARRAY', data: petFields.form_fields[0].options },\r\n      start_date: { type: 'DATE', start: startDate, end: endDate },\r\n    });\r\n\r\n    this.setState({\r\n      errorStringData: errorResult,\r\n    });\r\n\r\n    return errorResult;\r\n  }\r\n\r\n  handleSubmit(e, isFirstValidate = true) {\r\n    // e.preventDefault();\r\n    // console.log(e);\r\n    const {\r\n      setInsurFormState,\r\n      setSubmit,\r\n      storeForm,\r\n      submitCallback,\r\n      closePopUp,\r\n      history,\r\n    } = this.props;\r\n\r\n    const errorResult = this.validateForm(isFirstValidate ? e : storeForm);\r\n    const isEmptyResult = _.isEmpty(errorResult);\r\n\r\n    if (dateReValidate(\r\n      isEmptyResult,\r\n      isFirstValidate,\r\n      errorResult,\r\n      error => this.setState({ errorStringData: error }),\r\n      () => this.handleSubmit(storeForm, false),\r\n    )) {\r\n      return;\r\n    }\r\n\r\n    if (isEmptyResult) {\r\n      setSubmit();\r\n      this.originalValues = storeForm;\r\n\r\n      if (submitCallback) {\r\n        submitCallback();\r\n      } else {\r\n        gaEvent('Pet - Get Quote', {\r\n          event_category: 'Pet',\r\n          event_label: 'Button - Pet - Get Quote',\r\n        });\r\n        ampTag('PetGetQuoteA', {\r\n          pet: e.pet_species,\r\n        });\r\n      }\r\n\r\n      if (closePopUp) {\r\n        closePopUp();\r\n      }\r\n\r\n      setInsurFormState(FORMSTATES.CHOOSEPLAN.index);\r\n      history.push(`/pet${FORMSTATES.CHOOSEPLAN.path}`);\r\n    }\r\n  }\r\n\r\n  handleRevert() {\r\n    const { change, resetForm } = this.props;\r\n    resetForm();\r\n    Object.keys(this.originalValues).forEach((key) => {\r\n      change(key, this.originalValues[key]);\r\n    });\r\n  }\r\n\r\n  handleCloseEdit() {\r\n    const { closePopUp } = this.props;\r\n    closePopUp(this.handleRevert);\r\n  }\r\n\r\n  render() {\r\n    const { errorStringData, startDate, endDate } = this.state;\r\n    const {\r\n      handleSubmit,\r\n      isPopUp,\r\n      change,\r\n      form,\r\n      petFields,\r\n      storeForm,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"landing-form-container\">\r\n        {\r\n          isPopUp ?\r\n            <p className=\"edit-header\">Edit Pet Insurance Details</p>\r\n          :\r\n            null\r\n        }\r\n        <form onSubmit={handleSubmit(this.handleSubmit)}>\r\n          <Row className=\"input-offset\" noGutters>\r\n            <Col className=\"justify-content-center icon icon-car d-none d-sm-flex\" sm={2}>\r\n              <img src={Paw} alt=\"Paw.svg\" />\r\n            </Col>\r\n            <Col className=\"input-padding-right\" xs={12} sm={5}>\r\n              <Selection\r\n                form={form}\r\n                change={change}\r\n                name=\"pet_species\"\r\n                type=\"text-selection\"\r\n                noEmptyTextSelection\r\n                options={_.map(petFields.form_fields[0].options, option => ({\r\n                  key: option,\r\n                  description: option,\r\n                }))}\r\n                sizeInSM={6}\r\n                desc={petFields.form_fields[0].display_name}\r\n                extraInfo={\r\n                  <p>\r\n                    {'*Please read restrictions on '}\r\n                    <button\r\n                      onClick={(e) => {\r\n                      e.preventDefault();\r\n                      this.props.setRestrictionPopup({\r\n                        values: petFields.restrictions,\r\n                      });\r\n                    }}\r\n                      className=\"green\"\r\n                    >\r\n                      <b>PetCare</b>\r\n                    </button>\r\n                  </p>\r\n                }\r\n                errorString={errorStringData.pet_species}\r\n                validateForm={() => this.validateForm(storeForm)}\r\n              />\r\n            </Col>\r\n            <Col className=\"input-padding-left\" xs={12} sm={5}>\r\n              <DatePickerV2\r\n                form={form}\r\n                change={change}\r\n                name=\"start_date\"\r\n                size=\"medium\"\r\n                zIndex={95}\r\n                desc={petFields.form_fields[1].display_name}\r\n                currDate={startDate}\r\n                startDate={startDate}\r\n                endDate={endDate}\r\n                extraInfo={\r\n                  <p>Coverage lasts <b>one year</b> from ‘Start Date’</p>\r\n                }\r\n                errorString={errorStringData.start_date}\r\n                validateForm={() => this.validateForm(storeForm)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"align-items-center button-container\" noGutters>\r\n            {\r\n              isPopUp ?\r\n                <Col className=\"justify-content-center button\" xs={12}>\r\n                  <Row noGutters>\r\n                    <Col className=\"button-container-inner\" xs={12} sm={6}>\r\n                      <Button\r\n                        className=\"button-left\"\r\n                        variant=\"medium-flat\"\r\n                        width={165}\r\n                        height={72}\r\n                        onClick={() => this.handleCloseEdit()}\r\n                      >\r\n                        <p>Cancel</p>\r\n                      </Button>\r\n                    </Col>\r\n                    <Col className=\"button-container-inner\" xs={12} sm={6}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"medium-flat-green\"\r\n                        width={165}\r\n                        height={72}\r\n                      >\r\n                        <p>Save</p>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              :\r\n                <Col className=\"justify-content-center button\" xs={12}>\r\n                  <Button type=\"submit\" variant=\"medium-flat-green\" width={165} height={72}>\r\n                    <p>Get Quote</p>\r\n                  </Button>\r\n                </Col>\r\n            }\r\n          </Row>\r\n        </form>\r\n        <RestrictionsPopup ref={node => this.resPopup = node} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPetEditDetail.defaultProps = {\r\n  isPopUp: false,\r\n  setCloseCallBack: null,\r\n  storeForm: null,\r\n  closePopUp: null,\r\n  submitCallback: null,\r\n};\r\n\r\nPetEditDetail.propTypes = {\r\n  setRestrictionPopup: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  form: PropTypes.string.isRequired,\r\n  change: PropTypes.func.isRequired,\r\n  isPopUp: PropTypes.bool,\r\n  resetForm: PropTypes.func.isRequired,\r\n  closePopUp: PropTypes.func,\r\n  setInsurFormState: PropTypes.func.isRequired,\r\n  setSubmit: PropTypes.func.isRequired,\r\n  storeForm: PropTypes.object,\r\n  setCloseCallBack: PropTypes.func,\r\n  submitCallback: PropTypes.func,\r\n  petFields: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  storeForm: getFormValues(formName)(state),\r\n  isRevert: state.editForm.isRevert,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  resetForm: () => {\r\n    dispatch(reset(formName));\r\n  },\r\n  setInsurFormState: (state) => {\r\n    dispatch(setInsuranceFormState(state));\r\n  },\r\n  setSubmit: () => {\r\n    dispatch(invokeSubmit());\r\n  },\r\n  setRestrictionPopup: (data) => {\r\n    dispatch(setRestrictionPopup(data));\r\n  },\r\n});\r\n\r\nexport default withRouter(reduxForm({\r\n  form: formName,\r\n  destroyOnUnmount: false,\r\n})(connect(mapStateToProps, mapDispatchToProps)(PetEditDetail)));\r\n","/**\r\n * PetMain.js\r\n * Main Landing view for Pet\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Pet1 from 'assets/images/Pet/policypal-pet-insurance-1.svg';\r\nimport Pet2 from 'assets/images/Pet/policypal-pet-insurance-2.svg';\r\nimport Pet3 from 'assets/images/Pet/policypal-pet-insurance-3.svg';\r\n\r\nimport PetEditDetail from './PetEditDetail';\r\nimport FormLanding from '../Templates/FormLanding/FormLanding';\r\n\r\nclass PetMain extends Component {\r\n  render() {\r\n    const { petFields, petPromoGiveAway } = this.props;\r\n    return (\r\n      <div className=\"pet-container\">\r\n        <FormLanding\r\n          img1={Pet1}\r\n          img2={Pet2}\r\n          img3={Pet3}\r\n          imgAlt=\"PolicyPal Pet Insurance\"\r\n          promo={petPromoGiveAway}\r\n          desc={\r\n            <Fragment>\r\n              <p>Get 5% Cashback </p>\r\n              <p>upon purchase of Pet Insurance!</p>\r\n            </Fragment>\r\n          }\r\n        >\r\n          <PetEditDetail\r\n            petFields={petFields}\r\n          />\r\n        </FormLanding>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPetMain.defaultProps = {\r\n  petPromoGiveAway: null,\r\n};\r\n\r\nPetMain.propTypes = {\r\n  petFields: PropTypes.object.isRequired,\r\n  petPromoGiveAway: PropTypes.object,\r\n};\r\n\r\nexport default PetMain;\r\n","/**\r\n * PetMainContainer.js\r\n * The main container for pet\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport ReactPixel from 'react-facebook-pixel';\r\n\r\nimport PetMain from '../../components/Pet/PetMain';\r\n\r\nimport { setInsuranceFormState, FORMSTATES } from '../../actions/insuranceActions';\r\nimport { getPetFields, clearPetData } from '../../actions/petActions';\r\nimport { setLoading, clearLoading } from '../../actions/loadingScreenActions';\r\nimport { gaTag, ampTag } from '../../lib/tagFunctions';\r\n\r\nclass PetMainContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {\r\n      loading,\r\n      petFields,\r\n      history,\r\n      clearData,\r\n    } = this.props;\r\n\r\n    clearData();\r\n\r\n    if (!petFields) {\r\n      loading(() => history.push('/'));\r\n      this.props.getPetFields();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { setFormState, history } = this.props;\r\n    setFormState(FORMSTATES.MAIN.index);\r\n\r\n    window.scrollTo(0, 0);\r\n\r\n    ReactPixel.track('CustomizeProduct');\r\n\r\n    gaTag({\r\n      page_title: 'Pet',\r\n      page_path: `/pet${history.location.search}`,\r\n    });\r\n    ampTag('PetFormS');\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { petFields, loadingEnd } = this.props;\r\n    if (!prevProps.petFields && petFields) {\r\n      loadingEnd();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { petFields, petPromoGiveAway } = this.props;\r\n\r\n    if (!petFields) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <PetMain\r\n        petFields={petFields}\r\n        petPromoGiveAway={petPromoGiveAway}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPetMainContainer.defaultProps = {\r\n  petFields: null,\r\n  petPromoGiveAway: null,\r\n};\r\n\r\nPetMainContainer.propTypes = {\r\n  petFields: PropTypes.object,\r\n  getPetFields: PropTypes.func.isRequired,\r\n  loading: PropTypes.func.isRequired,\r\n  loadingEnd: PropTypes.func.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  petPromoGiveAway: PropTypes.object,\r\n  clearData: PropTypes.func.isRequired,\r\n  setFormState: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  petFields: state.pet.petFields,\r\n  petPromoGiveAway: state.insurance.promoGiveaways.pet,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getPetFields: () => {\r\n    dispatch(getPetFields());\r\n  },\r\n  loading: (callBack, errorMsg, time) => {\r\n    dispatch(setLoading(callBack, errorMsg, time));\r\n  },\r\n  loadingEnd: () => {\r\n    dispatch(clearLoading());\r\n  },\r\n  clearData: () => {\r\n    dispatch(clearPetData());\r\n  },\r\n  setFormState: (state) => {\r\n    dispatch(setInsuranceFormState(state));\r\n  },\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PetMainContainer));\r\n","/**\r\n * PetChoosePlan.js\r\n * Choose Plan view for Pet\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport _ from 'lodash';\r\nimport React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\n// Import Insurer Logos\r\nimport Logos from 'assets/images/InsurerLogos';\r\n\r\nimport CompareView from '../Templates/CompareView/CompareView';\r\nimport ChangeInitialFormData from '../Templates/ChangeInitialFormData/ChangeInitialFormData';\r\nimport HeaderDescWithButton from '../Templates/InsurerFormHeader/HeaderDescWithButton';\r\nimport Enquiry from '../Templates/Enquiry/Enquiry';\r\n\r\nimport PetEditDetail from './PetEditDetail';\r\n\r\nimport { ampTag } from '../../lib/tagFunctions';\r\n\r\nimport './PetChoosePlan.scss';\r\n\r\nclass PetChoosePlan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.doAmpTags = this.doAmpTags.bind(this);\r\n  }\r\n\r\n  doAmpTags(planTypeIndex = 0) {\r\n    try {\r\n      const { plansData } = this.props;\r\n      const premium = plansData.plans.default.premium[planTypeIndex];\r\n      ampTag('PetBuyNowA', {\r\n        partner: plansData.selectedInsurers[0].insurerSlug,\r\n        'plan-name': plansData.policyTypes[planTypeIndex],\r\n        discount: `${((premium.price || 0) - (premium.net_price || 0)) / (premium.price || 0) * 100}%`,\r\n        price: premium.net_price || 0,\r\n      });\r\n    } catch (error) {\r\n      console.log(`Pet choose plan Buy now Amp tag failed: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      plansData,\r\n      petFields,\r\n      submitCallback,\r\n    } = this.props;\r\n\r\n    try {\r\n      for (let i = 0; i < plansData.plans.default.premium.length; ++i) {\r\n        plansData.plans.default.premium[i].doTag = () => this.doAmpTags(i);\r\n      }\r\n    } catch (error) {\r\n      console.log('Overwrite tags failed');\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Row className=\"inner-form-container\" noGutters>\r\n          <Col xs={12}>\r\n            <ChangeInitialFormData\r\n              form=\"pet\"\r\n              valuesToListen={[\r\n                { value: 'pet_species', desc: 'Pet' },\r\n                { value: 'start_date', desc: 'Start date' },\r\n              ]}\r\n              submitCallback={submitCallback}\r\n            >\r\n              <PetEditDetail isPopUp petFields={petFields} />\r\n            </ChangeInitialFormData>\r\n          </Col>\r\n          <Col className=\"company-product-container\" xs={12}>\r\n            <HeaderDescWithButton\r\n              logo={Logos.square[plansData.selectedInsurers[0].insurerSlug]}\r\n              logoName={`${plansData.selectedInsurers[0].insurerSlug}.svg`}\r\n              insurerName={plansData.selectedInsurers[0].insurerName}\r\n              insurerDesc={plansData.policyDetails.about}\r\n            />\r\n            <Row className=\"content-container\">\r\n              <Col xs={12}>\r\n                <p className=\"why\">{`Why ${plansData.selectedInsurers[0].insurerName}?`}</p>\r\n                <ul>\r\n                  {\r\n                    _.map(plansData.policyDetails.benefits, (benefit, index) => (\r\n                      <li key={`benefit-${index}`}><p>{benefit}</p></li>\r\n                    ))\r\n                  }\r\n                </ul>\r\n              </Col>\r\n              <CompareView\r\n                category=\"pet\"\r\n                key=\"overview\"\r\n                className=\"overview-container-padding\"\r\n                data={plansData}\r\n                currentTab=\"default\"\r\n                editForm={\r\n                  <ChangeInitialFormData\r\n                    form=\"pet\"\r\n                    valuesToListen={[\r\n                      { value: 'brand', desc: 'Brand' },\r\n                      { value: 'model', desc: 'Model' },\r\n                      { value: 'year', desc: 'Year' },\r\n                    ]}\r\n                  >\r\n                    <PetEditDetail isPopUp ref={node => this.editForm = node} />\r\n                  </ChangeInitialFormData>\r\n                }\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Enquiry />\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPetChoosePlan.defaultProps = {\r\n};\r\n\r\nPetChoosePlan.propTypes = {\r\n  plansData: PropTypes.object.isRequired,\r\n  petFields: PropTypes.object.isRequired,\r\n  submitCallback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PetChoosePlan;\r\n","/**\r\n * PetChoosePlanContainer.js\r\n * The choose plan container for pet\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getFormValues } from 'redux-form';\r\nimport PropTypes from 'prop-types';\r\nimport ReactPixel from 'react-facebook-pixel';\r\n\r\nimport PetChoosePlan from '../../components/Pet/PetChoosePlan';\r\n\r\nimport { setSelectedPlanData, getPetPlans, clearPetData } from '../../actions/petActions';\r\nimport { setInsuranceFormState, parseData, FORMSTATES } from '../../actions/insuranceActions';\r\nimport { setPlanType } from '../../actions/compareActions';\r\nimport { setRestrictionPopup } from '../../actions/restrictionsActions';\r\nimport { setLoading, clearLoading } from '../../actions/loadingScreenActions';\r\nimport { gaTag, ampTag } from '../../lib/tagFunctions';\r\n\r\nclass PetChoosePlanContainer extends Component {\r\n  static getDerivedStateFromProps(nextProps) {\r\n    const {\r\n      plansData,\r\n      setFormState,\r\n      loadingEnd,\r\n      history,\r\n    } = nextProps;\r\n\r\n    if (plansData) {\r\n      return {\r\n        parsedData: parseData(plansData, null, null, null, () => {\r\n          setFormState(FORMSTATES.DETAILFORM.index);\r\n          history.push(`/pet${FORMSTATES.DETAILFORM.path}`);\r\n        }, nextProps.setSelectedPlanData, loadingEnd, nextProps.setRestrictionPopup, 0),\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {\r\n      plansData,\r\n    } = this.props;\r\n\r\n    this.state = {\r\n      parsedData: null,\r\n    };\r\n\r\n    this.getNewData = this.getNewData.bind(this);\r\n\r\n    if (!plansData) {\r\n      this.getNewData();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { setFormState } = this.props;\r\n    setFormState(FORMSTATES.CHOOSEPLAN.index);\r\n    ReactPixel.track('Search');\r\n    gaTag({\r\n      page_title: 'Pet - Choose Plan',\r\n      page_path: '/pet/chooseplan',\r\n    });\r\n    ampTag('PetPlanS');\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { plansData, loadingEnd } = this.props;\r\n    if (!prevProps.plansData && plansData) {\r\n      loadingEnd();\r\n    }\r\n  }\r\n\r\n  getNewData() {\r\n    const {\r\n      petForm,\r\n      loading,\r\n      clearData,\r\n      history,\r\n    } = this.props;\r\n\r\n    clearData();\r\n    this.props.getPetPlans(petForm);\r\n    loading(() => {\r\n      clearData();\r\n      history.goBack();\r\n    }, 'No available plans found.', 30000);\r\n  }\r\n\r\n  render() {\r\n    const { parsedData } = this.state;\r\n    const { isLoggedIn, petFields } = this.props;\r\n\r\n    if (!parsedData) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <PetChoosePlan\r\n        petFields={petFields}\r\n        plansData={parsedData}\r\n        isFWD={false}\r\n        isLoggedIn={isLoggedIn}\r\n        submitCallback={this.getNewData}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPetChoosePlanContainer.defaultProps = {\r\n  plansData: null,\r\n};\r\n\r\nPetChoosePlanContainer.propTypes = {\r\n  plansData: PropTypes.array,\r\n  petForm: PropTypes.object.isRequired,\r\n  petFields: PropTypes.object.isRequired,\r\n  setFormState: PropTypes.func.isRequired,\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  getPetPlans: PropTypes.func.isRequired,\r\n  loading: PropTypes.func.isRequired,\r\n  loadingEnd: PropTypes.func.isRequired,\r\n  clearData: PropTypes.func.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  petForm: getFormValues('pet')(state),\r\n  plansData: state.pet.plansData,\r\n  petFields: state.pet.petFields,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getPetPlans: petForm => (\r\n    dispatch(getPetPlans(petForm))\r\n  ),\r\n  setFormState: (state) => {\r\n    dispatch(setInsuranceFormState(state));\r\n  },\r\n  loading: (callBack, errorMsg, time) => {\r\n    dispatch(setLoading(callBack, errorMsg, time));\r\n  },\r\n  loadingEnd: () => {\r\n    dispatch(clearLoading());\r\n  },\r\n  setPlanType: (category, type) => {\r\n    dispatch(setPlanType(category, type));\r\n  },\r\n  setSelectedPlanData: (data) => {\r\n    dispatch(setSelectedPlanData(data));\r\n  },\r\n  setRestrictionPopup: (data) => {\r\n    dispatch(setRestrictionPopup(data));\r\n  },\r\n  clearData: () => {\r\n    dispatch(clearPetData());\r\n  },\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PetChoosePlanContainer));\r\n","/**\r\n * PetDetail.js\r\n * Detail View for Pet\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, getFormValues } from 'redux-form';\r\nimport { Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Import Insurer Logos\r\nimport DetailForm from '../Templates/DetailForm/DetailForm';\r\n\r\nimport TextInput from '../Forms/TextInput/TextInput';\r\nimport DatePickerV2 from '../Forms/DatePicker/DatePickerV2';\r\nimport DropDownV2 from '../Forms/DropDown/DropDownV2';\r\nimport Selection from '../Forms/Selection/Selection';\r\n\r\n// import { getPostal } from '../../actions/insuranceActions';\r\nimport { validateForm, dateReValidate } from '../../lib/validators';\r\nimport { slashedStringDateToDate } from '../../lib/dateFunctions';\r\nimport { gaEvent, ampTag } from '../../lib/tagFunctions';\r\n\r\nimport './PetDetail.scss';\r\n\r\nconst formName = 'pet-detail';\r\n\r\nclass PetDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { petFields } = this.props;\r\n    const dateField = _.find(petFields.form_fields, field => field.name === 'pet_birth_date');\r\n    // console.log(dateField);\r\n    this.state = {\r\n      errorStringData: {},\r\n      petMinDate: slashedStringDateToDate(dateField.min_date),\r\n      petMaxDate: slashedStringDateToDate(dateField.max_date),\r\n      errorArray: [],\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n  }\r\n\r\n  async validateForm(e, isSubmit = false) {\r\n    // console.log(e);\r\n    const { petMinDate, petMaxDate } = this.state;\r\n    const fieldsToCheck = [\r\n      'email',\r\n      'family_name',\r\n      'given_name',\r\n      'id_type',\r\n      'nric',\r\n      'mobile_number',\r\n      'address',\r\n      'unit_no',\r\n      'postal',\r\n      'pet_name',\r\n      'pet_microchip_no',\r\n      'pet_birth_date',\r\n      'pet_illness',\r\n    ];\r\n\r\n    if (e.pet_illness === 'Yes') {\r\n      fieldsToCheck.push('pet_medical_record');\r\n    }\r\n\r\n    const error = validateForm(e, fieldsToCheck, {\r\n      pet_birth_date: { type: 'DATE', start: petMinDate, end: petMaxDate },\r\n      pet_illness: { type: 'ARRAY', data: ['Yes', 'No'] },\r\n    });\r\n\r\n    /* if (isSubmit) {\r\n      const postalResult = await getPostal(e.postal);\r\n      if (!postalResult) {\r\n        error.postal = 'Invalid postal code';\r\n      }\r\n    } */\r\n\r\n    this.setState({\r\n      errorStringData: error,\r\n    });\r\n    let errorArray = [];\r\n    if (!_.isEmpty(error)) {\r\n      errorArray = [<p className=\"error-string\" key=\"error-1\">Fields are not properly filled, please check again.</p>];\r\n    }\r\n\r\n    this.setState({\r\n      errorArray,\r\n    });\r\n\r\n    return error;\r\n  }\r\n\r\n  async handleSubmit(e, isFirstValidate = true) {\r\n    // console.log(e);\r\n    const { submitCallback, storeForm } = this.props;\r\n\r\n    const errorResult = await this.validateForm(isFirstValidate ? e : storeForm, true);\r\n    const isEmptyResult = _.isEmpty(errorResult);\r\n\r\n    if (dateReValidate(\r\n      isEmptyResult,\r\n      isFirstValidate,\r\n      errorResult,\r\n      error => this.setState({ errorStringData: error, errorArray: null }),\r\n      () => this.handleSubmit(storeForm, false),\r\n    )) {\r\n      return;\r\n    }\r\n\r\n    if (isEmptyResult) {\r\n      gaEvent('Pet - DetailForm - Checkout', {\r\n        event_category: 'Pet',\r\n        event_label: 'Pet - DetailForm - Checkout',\r\n      });\r\n      ampTag('PetGoCheckoutA', {\r\n        idtype: e.id_type,\r\n        hospital: e.pet_illness === 'Yes',\r\n      });\r\n\r\n      submitCallback();\r\n    }\r\n    window.scrollTo(0, document.body.scrollHeight);\r\n  }\r\n\r\n  renderIllnessForm() {\r\n    const { errorStringData } = this.state;\r\n    const {\r\n      form,\r\n      change,\r\n      storeForm,\r\n    } = this.props;\r\n\r\n    if (storeForm && storeForm.pet_illness === 'Yes') {\r\n      return (\r\n        <Col xs={12} className=\"illness-input\">\r\n          <TextInput\r\n            form={form}\r\n            change={change}\r\n            name=\"pet_medical_record\"\r\n            placeholderString=\"\"\r\n            size=\"medium\"\r\n            zIndex={87}\r\n            desc=\"If yes, please complete below with Date of Illness, nature of Illness, treatment, and name of vet\"\r\n            errorString={errorStringData.pet_medical_record}\r\n            validateForm={() => this.validateForm(storeForm)}\r\n          />\r\n        </Col>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      errorStringData,\r\n      petMinDate,\r\n      petMaxDate,\r\n      errorArray,\r\n    } = this.state;\r\n    const {\r\n      form,\r\n      change,\r\n      planDetails,\r\n      isLoggedIn,\r\n      piggyCallback,\r\n      changePlan,\r\n      constants,\r\n      storeForm,\r\n    } = this.props;\r\n\r\n    return (\r\n      <DetailForm\r\n        category=\"pet\"\r\n        changePlan={changePlan}\r\n        handleSubmit={this.props.handleSubmit}\r\n        onSubmit={this.handleSubmit}\r\n        change={change}\r\n        form={form}\r\n        planDetails={planDetails}\r\n        isLoggedIn={isLoggedIn}\r\n        piggyCallback={piggyCallback}\r\n        errorArray={errorArray}\r\n      >\r\n        <Row className=\"main-form\" noGutters>\r\n          <Col xs={12}>\r\n            <TextInput\r\n              form={form}\r\n              change={change}\r\n              name=\"email\"\r\n              placeholderString=\"\"\r\n              size=\"medium\"\r\n              zIndex={99}\r\n              desc=\"Email Address\"\r\n              errorString={errorStringData.email}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n          <Col className=\"right-padding\" xs={12} sm={6}>\r\n            <TextInput\r\n              form={form}\r\n              change={change}\r\n              name=\"family_name\"\r\n              placeholderString=\"\"\r\n              size=\"medium\"\r\n              zIndex={98}\r\n              desc=\"Surname\"\r\n              errorString={errorStringData.family_name}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n          <Col className=\"left-padding\" xs={12} sm={6}>\r\n            <TextInput\r\n              form={form}\r\n              change={change}\r\n              name=\"given_name\"\r\n              placeholderString=\"\"\r\n              size=\"medium\"\r\n              zIndex={97}\r\n              desc=\"Name (as shown in ID document)\"\r\n              errorString={errorStringData.given_name}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n          <Col className=\"right-padding\" xs={12} sm={6}>\r\n            <DropDownV2\r\n              form={form}\r\n              change={change}\r\n              name=\"id_type\"\r\n              placeholderString=\"Select ID Type\"\r\n              dropList={constants.idTypes}\r\n              size=\"medium\"\r\n              zIndex={96}\r\n              desc=\"Type of ID\"\r\n              errorString={errorStringData.id_type}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n          <Col className=\"left-padding\" xs={12} sm={6}>\r\n            <TextInput\r\n              form={form}\r\n              change={change}\r\n              name=\"nric\"\r\n              placeholderString=\"\"\r\n              size=\"medium\"\r\n              zIndex={95}\r\n              desc=\"ID Number\"\r\n              errorString={errorStringData.nric}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n              toUpper\r\n            />\r\n          </Col>\r\n          <Col className=\"right-padding\" xs={12} sm={6}>\r\n            <TextInput\r\n              form={form}\r\n              change={change}\r\n              name=\"mobile_number\"\r\n              placeholderString=\"\"\r\n              size=\"medium\"\r\n              zIndex={94}\r\n              desc=\"Mobile Number\"\r\n              errorString={errorStringData.mobile_number}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n          <Col xs={12}>\r\n            <hr className=\"hr-margin\" />\r\n          </Col>\r\n          <Col xs={12} className=\"header\">\r\n            <p>Address</p>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <TextInput\r\n              form={form}\r\n              change={change}\r\n              name=\"address\"\r\n              placeholderString=\"\"\r\n              size=\"medium\"\r\n              zIndex={93}\r\n              desc=\"Address\"\r\n              errorString={errorStringData.address}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n          <Col className=\"right-padding\" xs={12} sm={6}>\r\n            <TextInput\r\n              form={form}\r\n              change={change}\r\n              name=\"unit_no\"\r\n              placeholderString=\"enter NA if no unit\"\r\n              size=\"medium\"\r\n              zIndex={92}\r\n              desc=\"Unit No\"\r\n              errorString={errorStringData.unit_no}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n          <Col className=\"left-padding\" xs={12} sm={6}>\r\n            <TextInput\r\n              form={form}\r\n              change={change}\r\n              name=\"postal\"\r\n              placeholderString=\"\"\r\n              size=\"medium\"\r\n              zIndex={91}\r\n              desc=\"Postcode\"\r\n              errorString={errorStringData.postal}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n              isPostCode\r\n              addressFields={{\r\n                address: 'address',\r\n                unitNo: 'unit_no',\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col xs={12}>\r\n            <hr className=\"hr-margin\" />\r\n          </Col>\r\n          <Col xs={12} className=\"header\">\r\n            <p>{'Pet\\'s details'}</p>\r\n          </Col>\r\n          <Col className=\"right-padding\" xs={12} sm={6}>\r\n            <TextInput\r\n              form={form}\r\n              change={change}\r\n              name=\"pet_name\"\r\n              placeholderString=\"\"\r\n              size=\"medium\"\r\n              zIndex={90}\r\n              desc=\"Name of Pet\"\r\n              errorString={errorStringData.pet_name}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n          <Col className=\"left-padding\" xs={12} sm={6}>\r\n            <TextInput\r\n              form={form}\r\n              change={change}\r\n              name=\"pet_microchip_no\"\r\n              placeholderString=\"\"\r\n              size=\"medium\"\r\n              zIndex={89}\r\n              desc=\"Microchip Number\"\r\n              errorString={errorStringData.pet_microchip_no}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n          <Col className=\"right-padding\" xs={12} sm={6}>\r\n            <DatePickerV2\r\n              form={form}\r\n              change={change}\r\n              name=\"pet_birth_date\"\r\n              size=\"medium\"\r\n              zIndex={88}\r\n              desc=\"Pet's Birthday\"\r\n              startDate={petMinDate}\r\n              endDate={petMaxDate}\r\n              currDate={petMinDate}\r\n              errorString={errorStringData.pet_birth_date}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n          <Col xs={12}>\r\n            <div className=\"input-wrapper-main pet-illness-desc\">\r\n              <p className=\"input-wrapper-desc\">My pet has been to the vet or hospital for other than routine checkups or preventive medicine</p>\r\n            </div>\r\n          </Col>\r\n          <Col xs={12} sm={4}>\r\n            <Selection\r\n              form={form}\r\n              change={change}\r\n              name=\"pet_illness\"\r\n              type=\"radio\"\r\n              options={[\r\n                { key: 'Yes', description: 'Yes' },\r\n                { key: 'No', description: 'No' },\r\n              ]}\r\n              sizeInSM={6}\r\n              desc=\"\"\r\n              errorString={errorStringData.pet_illness}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n              noEmptyTextSelection\r\n            />\r\n          </Col>\r\n          {this.renderIllnessForm()}\r\n          <Col xs={12}>\r\n            <hr className=\"hr-margin\" />\r\n          </Col>\r\n        </Row>\r\n      </DetailForm>\r\n    );\r\n  }\r\n}\r\n\r\nPetDetail.defaultProps = {\r\n  storeForm: null,\r\n};\r\n\r\nPetDetail.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  submitCallback: PropTypes.func.isRequired,\r\n  form: PropTypes.string.isRequired,\r\n  change: PropTypes.func.isRequired,\r\n  planDetails: PropTypes.object.isRequired,\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  piggyCallback: PropTypes.func.isRequired,\r\n  changePlan: PropTypes.func.isRequired,\r\n  constants: PropTypes.object.isRequired,\r\n  storeForm: PropTypes.object,\r\n  petFields: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  storeForm: getFormValues(formName)(state),\r\n  constants: state.insurance.constants,\r\n});\r\n\r\nexport default reduxForm({\r\n  form: formName,\r\n  destroyOnUnmount: false,\r\n})(connect(mapStateToProps)(PetDetail));\r\n","/**\r\n * PetDetailContainer.js\r\n * The detail container for pet\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Import Insurer Logos\r\nimport Logos from 'assets/images/InsurerLogos';\r\nimport PetDetail from '../../components/Pet/PetDetail';\r\nimport { setInsuranceFormState, FORMSTATES } from '../../actions/insuranceActions';\r\nimport { gaTag, gaEvent, ampTag } from '../../lib/tagFunctions';\r\n\r\nclass PetDetailContainer extends Component {\r\n  componentDidMount() {\r\n    const { setFormState } = this.props;\r\n    setFormState(FORMSTATES.DETAILFORM.index);\r\n    gaTag({\r\n      page_title: 'Pet - Detail Form',\r\n      page_path: '/pet/detailform',\r\n    });\r\n    ampTag('PetDetailsS');\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      plansData,\r\n      isLoggedIn,\r\n      setFormState,\r\n      profileValues,\r\n      piggyCallback,\r\n      petFields,\r\n      history,\r\n    } = this.props;\r\n\r\n    if (!plansData) {\r\n      return null;\r\n    }\r\n\r\n    const selectedData = plansData;\r\n\r\n    let planDetails = {\r\n      logo: Logos.others,\r\n      logoDesc: '',\r\n      planName: '',\r\n      planTotal: null,\r\n    };\r\n\r\n    try {\r\n      planDetails = {\r\n        logo: Logos[selectedData.info.insurer_slug],\r\n        logoDesc: `${selectedData.info.insurer_name}.svg`,\r\n        planName: selectedData.info.product_name,\r\n        planTotal: `$${selectedData.policyInfo[selectedData.planType].net_price.toFixed(2)}`,\r\n      };\r\n    } catch (error) {\r\n      console.log('Get plan details failed');\r\n    }\r\n\r\n    return (\r\n      <PetDetail\r\n        petFields={petFields}\r\n        selectedData={selectedData}\r\n        planDetails={planDetails}\r\n        isLoggedIn={isLoggedIn}\r\n        piggyCallback={piggyCallback}\r\n        changePlan={() => {\r\n          history.goBack();\r\n          gaEvent('Pet - DetailForm - ChangePlan', {\r\n            event_category: 'Pet',\r\n            event_label: 'Pet - DetailForm - ChangePlan',\r\n          });\r\n        }}\r\n        profileValues={profileValues}\r\n        submitCallback={() => {\r\n          setFormState(FORMSTATES.CHECKOUT.index);\r\n          history.push(`/pet${FORMSTATES.CHECKOUT.path}`);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPetDetailContainer.defaultProps = {\r\n};\r\n\r\nPetDetailContainer.propTypes = {\r\n  plansData: PropTypes.object.isRequired,\r\n  piggyCallback: PropTypes.func.isRequired,\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  setFormState: PropTypes.func.isRequired,\r\n  profileValues: PropTypes.object.isRequired,\r\n  petFields: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  petFields: state.pet.petFields,\r\n  profileValues: state.userDetails,\r\n  plansData: state.pet.selectedPlanData,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFormState: (state) => {\r\n    dispatch(setInsuranceFormState(state));\r\n  },\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PetDetailContainer));\r\n","/**\r\n * PetRouteContainer.js\r\n * The wrapper container for pet\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport _ from 'lodash';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { connect } from 'react-redux';\r\nimport { change, reset } from 'redux-form';\r\nimport { /* Prompt, */ withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { clearPetData } from '../../actions/petActions';\r\nimport { getPromoGiveaways, resetInsuranceForm, FORMSTATES } from '../../actions/insuranceActions';\r\nimport { resetCompare } from '../../actions/compareActions';\r\nimport { isProduction } from '../../lib/tagFunctions';\r\n\r\nimport StepProgressBar from '../../components/Templates/StepProgressBar/StepProgressBar';\r\nimport RefreshTimer from '../../components/Templates/RefreshTimer/RefreshTimer';\r\n\r\nimport PetMainContainer from './PetMainContainer';\r\nimport PetChoosePlanContainer from './PetChoosePlanContainer';\r\nimport PetDetailContainer from './PetDetailContainer';\r\nimport PetCheckoutContainer from './PetCheckoutContainer';\r\n\r\nimport { dateToStoreString } from '../../lib/dateFunctions';\r\nimport { routeHandler } from '../../lib/helperFunctions';\r\n\r\nconst formName = 'pet';\r\nconst detailFormName = 'pet-detail';\r\n\r\nclass PetRouteContainer extends Component {\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const { formIndex, isMounted } = prevState;\r\n    const { formState, match, history } = nextProps;\r\n\r\n    if (isMounted) {\r\n      const routeResult = routeHandler(formName, formState, formIndex, match, history);\r\n      if (routeResult && routeResult.formIndex !== null) {\r\n        return ({\r\n          formIndex: routeResult.formIndex,\r\n        });\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      formIndex: 0,\r\n      isInitialLoad: true,\r\n    };\r\n\r\n    const {\r\n      resetStoreForm,\r\n      clearData,\r\n      petPromoGiveAway,\r\n      history,\r\n    } = this.props;\r\n\r\n    history.replace(`/pet${history.location.search}`);\r\n\r\n    if (petPromoGiveAway === undefined) {\r\n      this.props.getPromoGiveaways();\r\n    }\r\n\r\n    clearData();\r\n    this.props.resetInsuranceForm();\r\n    this.props.resetCompare();\r\n\r\n    resetStoreForm('pet');\r\n    resetStoreForm('pet-detail');\r\n\r\n    this.setInitialFormState = this.setInitialFormState.bind(this);\r\n    this.renderStepProgress = this.renderStepProgress.bind(this);\r\n    this.renderPetForms = this.renderPetForms.bind(this);\r\n    this.changeUserDetails = this.changeUserDetails.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // window.onbeforeunload = () => true;\r\n    this.setInitialFormState();\r\n    this.setState({\r\n      // eslint-disable-next-line\r\n      isMounted: true,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { isInitialLoad } = this.state;\r\n    const { userDetails } = this.props;\r\n\r\n    if (isInitialLoad && _.isEqual(userDetails, prevProps.userDetails)) {\r\n      this.changeUserDetails();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { clearData, resetStoreForm } = this.props;\r\n    clearData();\r\n    this.props.resetCompare();\r\n    this.props.resetInsuranceForm();\r\n\r\n    resetStoreForm('pet');\r\n    resetStoreForm('pet-detail');\r\n  }\r\n\r\n  setInitialFormState() {\r\n    const { changeForm } = this.props;\r\n\r\n    const startDate = new Date();\r\n    startDate.setDate(startDate.getDate() + 1);\r\n    changeForm(formName, 'start_date', dateToStoreString(startDate));\r\n\r\n    this.changeUserDetails();\r\n  }\r\n\r\n  changeUserDetails() {\r\n    const { isInitialLoad } = this.state;\r\n    const { userDetails, changeForm } = this.props;\r\n\r\n    if (userDetails) {\r\n      changeForm(detailFormName, 'email', userDetails.email);\r\n      changeForm(detailFormName, 'given_name', userDetails.firstName);\r\n      changeForm(detailFormName, 'family_name', userDetails.surname);\r\n      changeForm(detailFormName, 'id_type', userDetails.id_type);\r\n      changeForm(detailFormName, 'nric', userDetails.nric);\r\n      changeForm(detailFormName, 'mobile_number', userDetails.contact);\r\n      changeForm(detailFormName, 'address', userDetails.address);\r\n      changeForm(detailFormName, 'unit_no', userDetails.unit_no);\r\n      changeForm(detailFormName, 'postal', userDetails.postal_code);\r\n\r\n      if (isInitialLoad) {\r\n        this.setState({\r\n          isInitialLoad: false,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderStepProgress() {\r\n    const { formIndex } = this.state;\r\n    const { charged } = this.props;\r\n\r\n    return (\r\n      <StepProgressBar\r\n        maxWidth=\"556px\"\r\n        formState={formIndex}\r\n        inputList={[\r\n          'Choose Plan',\r\n          'Details',\r\n          'Checkout',\r\n        ]}\r\n        form=\"pet\"\r\n        stateList={[\r\n          FORMSTATES.CHOOSEPLAN,\r\n          FORMSTATES.DETAILFORM,\r\n          FORMSTATES.CHECKOUT,\r\n        ]}\r\n        stateDescriptions={[\r\n          { main: '' /* 'Choose your preferred plan' */},\r\n          { main: 'Details' },\r\n          { main: 'Checkout' },\r\n        ]}\r\n        charged={charged}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderPetForms() {\r\n    const { formIndex } = this.state;\r\n    const {\r\n      userDetails,\r\n      charged,\r\n    } = this.props;\r\n\r\n    const isLoggedIn = !_.isEmpty(userDetails);\r\n\r\n    switch (formIndex) {\r\n      case FORMSTATES.CHOOSEPLAN.index:\r\n        return <PetChoosePlanContainer isLoggedIn={isLoggedIn} />;\r\n      case FORMSTATES.DETAILFORM.index:\r\n        return (\r\n          <PetDetailContainer\r\n            isLoggedIn={isLoggedIn}\r\n            piggyCallback={this.changeUserDetails}\r\n          />\r\n        );\r\n      case FORMSTATES.CHECKOUT.index:\r\n      case FORMSTATES.SUBMITTED.index:\r\n        return <PetCheckoutContainer isLoggedIn={isLoggedIn} charged={charged} />;\r\n      default:\r\n        return <PetMainContainer isLoggedIn={isLoggedIn} />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { petPromoGiveAway, constants } = this.props;\r\n\r\n    if (!constants || petPromoGiveAway === undefined) {\r\n      return null;\r\n    }\r\n\r\n    const meta = isProduction ? 'PolicyPal, pet insurance, dog insurance, cat insurance, pet insurance singapore, dog insurance singapore, cat insurance singapore, PetCare' : '';\r\n    return (\r\n      <Fragment>\r\n        <Helmet>\r\n          <meta name=\"keywords\" content={meta} />\r\n          <title>PolicyPal 2.0 - Pet Insurance</title>\r\n          <meta name=\"title\" content=\"PolicyPal 2.0 - Pet Insurance\" />\r\n          <meta name=\"description\" content=\"Browse products for pet insurance.\" />\r\n        </Helmet>\r\n        {/* {\r\n          formState !== FORMSTATES.MAIN ?\r\n            <Prompt\r\n              when={true}\r\n              message=\"Are you sure you want to leave current page?\"\r\n            />\r\n          :\r\n            null\r\n        } */}\r\n        {this.renderStepProgress()}\r\n        {this.renderPetForms()}\r\n        <RefreshTimer ref={(node) => {\r\n            if (!this.refresher) {\r\n              node.invokeNewTimer();\r\n            }\r\n            this.refresher = node;\r\n          }}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPetRouteContainer.defaultProps = {\r\n  userDetails: null,\r\n  charged: null,\r\n  constants: null,\r\n  petPromoGiveAway: undefined,\r\n};\r\n\r\nPetRouteContainer.propTypes = {\r\n  clearData: PropTypes.func.isRequired,\r\n  resetCompare: PropTypes.func.isRequired,\r\n  resetInsuranceForm: PropTypes.func.isRequired,\r\n  changeForm: PropTypes.func.isRequired,\r\n  resetStoreForm: PropTypes.func.isRequired,\r\n  userDetails: PropTypes.object,\r\n  charged: PropTypes.bool,\r\n  constants: PropTypes.object,\r\n  getPromoGiveaways: PropTypes.func.isRequired,\r\n  petPromoGiveAway: PropTypes.object,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  formState: state.insurance.formState,\r\n  constants: state.insurance.constants,\r\n  charged: state.insurance.charged,\r\n  userDetails: state.userDetails.data,\r\n  petPromoGiveAway: state.insurance.promoGiveaways.pet,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeForm: (form, key, value) => (\r\n    dispatch(change(form, key, value))\r\n  ),\r\n  resetInsuranceForm: () => (\r\n    dispatch(resetInsuranceForm())\r\n  ),\r\n  resetStoreForm: form => (\r\n    dispatch(reset(form))\r\n  ),\r\n  resetCompare: () => {\r\n    dispatch(resetCompare());\r\n  },\r\n  clearData: () => {\r\n    dispatch(clearPetData());\r\n  },\r\n  getPromoGiveaways: () => {\r\n    dispatch(getPromoGiveaways('pet'));\r\n  },\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PetRouteContainer));\r\n","import _ from 'lodash';\r\nimport moment from 'moment';\r\n// import { dateToString } from 'lib/dateFunctions';\r\n\r\nconst getInsurerLogo = (insurer_slug) => `https://webassets.policypal.com/insurer_logos/${insurer_slug}.png`;\r\nconst parseValues = (values) => {\r\n  const keys = Object.keys(values);\r\n  let result = {};\r\n\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const key = keys[i];\r\n    const item = values[key];\r\n    \r\n    switch(key) {\r\n      case 'start_date':\r\n      case 'end_date':\r\n      case 'pet_birth_date':\r\n        const date = _.isObject(item) ? item.value : item;\r\n        result[key] = moment(date).format(\"DD/MM/YYYY\");\r\n        break;\r\n      case 'trip_type':\r\n      case 'plan_type':\r\n      case 'num_children':\r\n      case 'num_adult':\r\n        result[key] = item.value;\r\n        break;\r\n      case 'region':\r\n      case 'countries':\r\n        result[key] = _.isArray(item.value) ? Array.from(item.value, c => c.value) : item.value.value;\r\n        break;\r\n      default:\r\n        result[key] = item;\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport const getAddToCartData = (params = {}) => {\r\n  const allowedKeys = [\r\n    'insurer_slug',\r\n    'insurer_name',\r\n    'product_slug',\r\n    'product_name',\r\n    'coverage_level',\r\n  ];\r\n\r\n  let result = {};\r\n  if (Object.keys(params).length > 0) {\r\n    const {\r\n      insurer_slug: insurer_slug = '',\r\n      product_slug: product_slug = '',\r\n      values:       values = {},\r\n      price:        price = '',\r\n    } = params;\r\n\r\n    const product = {\r\n      ..._.pick(params, allowedKeys),\r\n      ...parseValues(values || {}),\r\n      id: `${insurer_slug}__${product_slug}`,\r\n      product_image: getInsurerLogo(insurer_slug),\r\n      quantity: 1,\r\n    }\r\n\r\n    result = {\r\n      content_ids:  [product.id],\r\n      content_name: product.product_name,\r\n      content_type: 'product',\r\n      contents:     [product],\r\n      ...((price) ? {currency: 'SGD', value: Number(price.replace('$', ''))} : {}),\r\n    }\r\n  }\r\n\r\n  return result;\r\n}","/**\r\n * HeaderDescWithButton.js\r\n * Product summary with button\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from 'components/FormsV3/Button/Button';\r\n\r\nimport './HeaderDescWithButton.scss';\r\n\r\nclass HeaderDescWithButton extends Component {\r\n  render() {\r\n    const {\r\n      logo,\r\n      logoName,\r\n      insurerName,\r\n      insurerDesc,\r\n      onClick,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Row className=\"header-desc-with-button-container\" noGutters>\r\n        <Col className=\"insurer-logo-container\">\r\n          <div className=\"company-logo-container\">\r\n            <img className=\"company-logo\" src={logo} alt={logoName} />\r\n          </div>\r\n        </Col>\r\n        <Col className=\"insurer-desc-container\">\r\n          <div className=\"insurer-desc-top\">\r\n            <span className=\"insurer-name\">{insurerName}</span>\r\n          </div>\r\n          <p className=\"desc\">\r\n            {insurerDesc}\r\n          </p>\r\n        </Col>\r\n        {\r\n          onClick ?\r\n            <div className=\"header-button-container\">\r\n              <Button variant=\"medium-flat-green\" width={165} height={72} onClick={onClick}>\r\n                <p>Continue</p>\r\n              </Button>\r\n            </div>\r\n          :\r\n            null\r\n        }\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nHeaderDescWithButton.defaultProps = {\r\n  onClick: null,\r\n};\r\n\r\nHeaderDescWithButton.propTypes = {\r\n  logo: PropTypes.string.isRequired,\r\n  logoName: PropTypes.string.isRequired,\r\n  insurerName: PropTypes.string.isRequired,\r\n  insurerDesc: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default HeaderDescWithButton;\r\n","/**\r\n * PetCheckoutContainer.js\r\n * The checkout container for pet\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getFormValues } from 'redux-form';\r\nimport PropTypes from 'prop-types';\r\nimport ReactPixel from 'react-facebook-pixel';\r\nimport _ from 'lodash';\r\n\r\nimport { getAddToCartData } from 'lib/trackingHelper';\r\nimport { getSessionParams } from '../../actions/petActions';\r\nimport { setInsuranceFormState, FORMSTATES } from '../../actions/insuranceActions';\r\nimport CheckoutWrapper from '../../components/Templates/Checkout/CheckoutWrapper';\r\n\r\nimport {\r\n  compactCheckoutAttributes,\r\n  getCheckoutParamsWording,\r\n  getCheckoutHeaderDataCoverage,\r\n  getCompactSubDetails,\r\n} from '../../lib/helperFunctions';\r\nimport { gaTag, gaEvent, ampTag } from '../../lib/tagFunctions';\r\n\r\nclass PetCheckoutContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {\r\n      petForm,\r\n      petDetailsForm,\r\n      selectedPlanData,\r\n      isAdHoc,\r\n      adHocData,\r\n    } = this.props;\r\n\r\n    const paramsWording = getCheckoutParamsWording(\r\n      isAdHoc,\r\n      adHocData,\r\n      selectedPlanData,\r\n      () => getSessionParams(petForm, petDetailsForm, selectedPlanData),\r\n    );\r\n\r\n    const headerCoverage = getCheckoutHeaderDataCoverage('Pet Insurance', isAdHoc, adHocData, selectedPlanData, paramsWording.params);\r\n\r\n    const petIllness = isAdHoc ? adHocData.data.session_params.pet_illness : petDetailsForm.pet_illness;\r\n    const medicalRecord = isAdHoc ? adHocData.data.session_params.pet_medical_record : petDetailsForm.pet_medical_record;\r\n    const record = petIllness === 'Yes' ?\r\n      [{ title: 'Illness Details', description: medicalRecord }] :\r\n      [];\r\n\r\n    const petFormToUse = isAdHoc ? adHocData.data.session_params : paramsWording.params.sessionParams.session_params;\r\n    const petDetailFormToUse = isAdHoc ? adHocData.data.session_params : paramsWording.params.sessionParams.session_params;\r\n    this.state = {\r\n      headerData: headerCoverage.headerData,\r\n      mainDetails: {\r\n        title: 'Insurance',\r\n        attributes: compactCheckoutAttributes([\r\n          { title: 'Pet Species', description: petFormToUse.pet_species },\r\n          { title: 'Start Date', description: petFormToUse.start_date },\r\n          { title: 'End Date', description: petFormToUse.end_date },\r\n          // { title: 'Coverage', description: headerCoverage.coverage },\r\n        ]),\r\n      },\r\n      subDetails: [getCompactSubDetails({\r\n        key: 'Adult 1',\r\n        leftDetail: {\r\n          title: 'Details',\r\n          attributes: compactCheckoutAttributes([\r\n            { title: 'Email', description: petDetailFormToUse.email },\r\n            { title: 'Last name', description: petDetailFormToUse.family_name },\r\n            { title: 'First name', description: petDetailFormToUse.given_name },\r\n            { title: 'Date of birth', description: petDetailFormToUse.birth_date },\r\n            { title: 'ID type', description: petDetailFormToUse.id_type },\r\n            { title: 'ID number', description: petDetailFormToUse.nric },\r\n            { title: 'Mobile number', description: petDetailFormToUse.mobile_number },\r\n            { title: 'Address', description: petDetailFormToUse.address },\r\n            { title: 'Unit no', description: petDetailFormToUse.unit_no },\r\n            { title: 'Postcode', description: petDetailFormToUse.postal },\r\n          ]),\r\n        },\r\n        rightDetail: {\r\n          title: 'Pet',\r\n          attributes: compactCheckoutAttributes([\r\n            { title: 'Name', description: petDetailFormToUse.pet_name },\r\n            { title: 'Microchip number', description: petDetailFormToUse.pet_microchip_no },\r\n            { title: 'Date of birth', description: petDetailFormToUse.pet_birth_date },\r\n            { title: 'Pet Illness', description: petDetailFormToUse.pet_illness },\r\n            ...record,\r\n          ]),\r\n        },\r\n      })],\r\n      ...paramsWording,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { setFormState, history } = this.props;\r\n    setFormState(FORMSTATES.CHECKOUT.index);\r\n    gaTag({\r\n      page_title: 'Pet - Checkout',\r\n      page_path: '/pet/checkout',\r\n    });\r\n    ampTag('PetCheckoutS');\r\n\r\n    if (history.location.pathname && history.location.pathname === `/pet${FORMSTATES.CHECKOUT.path}`) {\r\n      const { petDetailsForm, petForm, selectedPlanData } = this.props;\r\n      const { params } = this.state;\r\n      const { info, planType } = selectedPlanData;\r\n      const trackData = getAddToCartData({\r\n        ..._.pick(info, ['insurer_slug', 'insurer_name', 'product_slug', 'product_name']),\r\n        values: {\r\n          ..._.pick(petDetailsForm, ['pet_name', 'pet_birth_date', 'pet_illness', 'pet_microchip_no', 'pet_medical_record']),\r\n          ...petForm,\r\n        },\r\n        coverage_level: planType,\r\n        price: `$${params.amountPayable}`,\r\n      });\r\n      ReactPixel.track('AddToCart', trackData);\r\n      ReactPixel.track('InitiateCheckout');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      headerData,\r\n      mainDetails,\r\n      subDetails,\r\n      wording,\r\n      params,\r\n    } = this.state;\r\n\r\n    const {\r\n      isLoggedIn,\r\n      charged,\r\n      setFormState,\r\n      history,\r\n      isAdHoc,\r\n      adHocData,\r\n      sessionId,\r\n    } = this.props;\r\n\r\n    return (\r\n      <CheckoutWrapper\r\n        headerData={headerData}\r\n        mainDetails={mainDetails}\r\n        subDetails={subDetails}\r\n        sessionId={sessionId}\r\n        isLoggedIn={isLoggedIn}\r\n        charged={charged}\r\n        backToDetails={() => {\r\n          history.goBack();\r\n        }}\r\n        wording={wording}\r\n        isAdHoc={isAdHoc}\r\n        adHocData={adHocData}\r\n        params={params}\r\n        category=\"pet\"\r\n        trackingTags={{\r\n          payment: (data) => {\r\n            ReactPixel.track('AddPaymentInfo');\r\n            gaEvent('Pet - CheckoutPage_ProceedPayment', {\r\n              event_category: 'Pet',\r\n              event_label: 'Pet - CheckoutPage_ProceedPayment',\r\n            });\r\n            ampTag('PetProceedPayA', {\r\n              cashback: data.rewardsID !== null,\r\n              promo: data.promoCode !== null && data.promoCode !== '',\r\n            });\r\n          },\r\n          receipt: () => {\r\n            if (!isAdHoc) {\r\n              ReactPixel.track('Purchase', { currency: 'SGD', value: params.amountPayable });\r\n              setFormState(FORMSTATES.SUBMITTED.index);\r\n              history.push(`/pet${FORMSTATES.SUBMITTED.path}`);\r\n            }\r\n            gaTag({\r\n              page_title: 'Pet - Receipt',\r\n              page_path: '/pet/Receipt',\r\n            });\r\n            ampTag('PetConfirmationS');\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPetCheckoutContainer.defaultProps = {\r\n  charged: null,\r\n  sessionId: null,\r\n  adHocData: null,\r\n  isAdHoc: false,\r\n  isLoggedIn: false,\r\n  petForm: null,\r\n  petDetailsForm: null,\r\n  selectedPlanData: null,\r\n};\r\n\r\nPetCheckoutContainer.propTypes = {\r\n  charged: PropTypes.bool,\r\n  sessionId: PropTypes.string,\r\n  isLoggedIn: PropTypes.bool,\r\n  petForm: PropTypes.object,\r\n  petDetailsForm: PropTypes.object,\r\n  selectedPlanData: PropTypes.object,\r\n  adHocData: PropTypes.object,\r\n  isAdHoc: PropTypes.bool,\r\n  setFormState: PropTypes.func.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const sessionId = ownProps.isAdHoc ? ownProps.sessionId : state.insurance.sessionId;\r\n  return ({\r\n    petForm: getFormValues('pet')(state),\r\n    petDetailsForm: getFormValues('pet-detail')(state),\r\n    selectedPlanData: state.pet.selectedPlanData,\r\n    sessionId,\r\n  });\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFormState: (state) => {\r\n    dispatch(setInsuranceFormState(state));\r\n  },\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PetCheckoutContainer));\r\n","module.exports = __webpack_public_path__ + \"static/media/policypal-pet-insurance-1.c3eb496b.svg\";","module.exports = __webpack_public_path__ + \"static/media/policypal-pet-insurance-2.1fce2097.svg\";","module.exports = __webpack_public_path__ + \"static/media/policypal-pet-insurance-3.b7997f16.svg\";","module.exports = __webpack_public_path__ + \"static/media/Paw.f3a9b772.svg\";"],"sourceRoot":""}