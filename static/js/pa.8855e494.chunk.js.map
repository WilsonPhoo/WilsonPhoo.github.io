{"version":3,"sources":["assets/images/PA/PAEssential.svg","assets/images/PA/PAElite.svg","components/PA/PAEditDetail.js","components/PA/PAMain.js","containers/PA/PAMainContainer.js","components/PA/PAChoosePlan.js","containers/PA/PAChoosePlanContainer.js","components/PA/PADetail.js","containers/PA/PADetailContainer.js","containers/PA/PARouteContainer.js","assets/images/MainFormIcons/Avatar.svg","components/Templates/MultiCompareView/MultiCompareInner.js","components/Templates/MultiCompareView/MultiCompareView.js","components/Forms/Spinner/Spinner.js","assets/images/MainFormIcons/Chest.svg","assets/images/forms/plus.svg","assets/images/forms/minus.svg","containers/PA/PACheckoutContainer.js","assets/images/PA/policypal-personal-accident-insurance-1.svg","assets/images/PA/policypal-personal-accident-insurance-2.svg","assets/images/PA/policypal-personal-accident-insurance-3.svg","assets/images/MainFormIcons/Family.svg","assets/images/PA/PABasic.svg"],"names":["module","exports","__webpack_require__","p","PAEditDetail","props","_this","Object","classCallCheck","this","paFields","possibleConstructorReturn","getPrototypeOf","call","paData","remapFormFields","form_fields","state","errorStringData","minDate","slashedStringDateToDate","start_date","min_date","handleSubmit","bind","assertThisInitialized","handleCloseEdit","handleRevert","validateForm","_this$props","storeForm","setCloseCallBack","originalValues","e","_this$state","constants","fieldsToCheck","plan_type","push","family_members","errorResult","type","data","options","num_children","_","range","min","max","my_occupation","occupations","spouse_occupation","start","setState","_this2","isFirstValidate","arguments","length","undefined","_this$props2","closePopUp","setInsurFormState","setSubmit","submitCallback","history","isEmptyResult","isEmpty","dateReValidate","error","gaEvent","event_category","event_label","spouseOccupation","occupation-spouse","children","ampTag","objectSpread","occupation-self","FORMSTATES","CHOOSEPLAN","index","concat","path","_this3","_this$props3","change","resetForm","keys","forEach","key","_this4","_this$props4","form","react_default","a","createElement","reactstrap_es","className","xs","sm","DropDownV2","name","placeholderString","dropList","size","zIndex","desc","errorString","_this5","_this$state2","_this$props5","react","src","Family","alt","Selection","noEmptyTextSelection","map","description","sizeInSM","display_name","Spinner","unit","increment","initial","startDate","storeStringToDate","endDate","Date","setFullYear","getFullYear","setDate","getDate","startDateString","dateToString","endDateString","_this6","_this$state3","_this$props6","isPopUp","onSubmit","noGutters","Avatar","style","marginTop","renderFamily","renderSpouse","Chest","DatePickerV2","renderStartDate","Button","variant","width","height","onClick","RestrictionsPopup","ref","node","resPopup","Component","defaultProps","withRouter","reduxForm","destroyOnUnmount","connect","getFormValues","isRevert","editForm","insurance","dispatch","reset","setInsuranceFormState","invokeSubmit","setRestrictionPopup","PAMain","paPromoGiveAway","FormLanding","img1","PA1","img2","PA2","img3","PA3","imgAlt","promo","PA_PAEditDetail","PAMainContainer","loading","clearData","getPAFields","setFormState","MAIN","window","scrollTo","gaTag","page_title","page_path","location","search","prevProps","loadingEnd","PA_PAMain","promoGiveaways","pa","callBack","errorMsg","time","setLoading","clearLoading","clearPAData","PAChoosePlan","selectedPlanData","planType","discount","info","display","partner","insurer_slug","price","policyInfo","net_price","console","log","message","MultiCompareView","assign","category","initialIndex","planImages","basic","PABasic","essential","PAEssential","elite","PAElite","valuesToListen","value","conditions","values","Myself","Me & My Spouse","Me & My Family","editDetail","trackingTags","getAmpTags","forceFixedOnDesktop","PAChoosePlanContainer","paForm","getPlans","getInsurersList","plansData","validInsurersList","PA_PAChoosePlan","mainForm","parseForm","parsePAForm","setSelectedPlanData","DETAILFORM","loadingFailBackState","goBack","parsedForm","getPAPlans","getValidInsurersList","commonFields","myselfFields","myselfSpouseFields","childFields","PADetail","tabsNames","generateTabsNames","tabs","formNames","prefix","fields","field","errorPersons","errorTabIndex","reduce","result","newResult","displayName","myself","toConsumableArray","getFormFields","spouse","child","substring","findIndex","char","i","comma","validateResults","idtype","id_type","nationality","gender","marital","marital_status","race","occupation","industry","tabView","wrappedInstance","goToIndex","document","body","scrollHeight","isSpouse","isFamily","updatePrefix","_loop","TextInput","industries","_this7","_this8","_this$state4","_this9","_this$state5","_this10","_this$state6","_this$props7","renderEmail","nationalities","idTypes","toUpper","renderCenterPortion","renderOccupationIndustry","renderPostalMobile","renderEducation","_this11","TabView","maxTabWidthPx","isDataFadeOnly","renderForm","_this$props8","planDetails","isLoggedIn","piggyCallback","changePlan","DetailForm","errorArray","renderInner","PADetailContainer","profileValues","selectedData","logo","Logos","others","logoDesc","planName","planTotal","insurer_name","product_name","toFixed","PA_PADetail","CHECKOUT","userDetails","PetRouteContainer","resetStoreForm","formIndex","replace","resetCompare","resetInsuranceForm","getPromoGiveaways","setInitialFormState","renderStepProgress","renderPAForms","changeUserDetails","nextProps","prevState","isMounted","formState","match","routeResult","routeHandler","changeForm","dateToStoreString","surname","firstname","firstName","email","nric","startCase","dateOfBirth","contact","postal_code","charged","StepProgressBar","maxWidth","inputList","stateList","stateDescriptions","main","PA_PAChoosePlanContainer","PA_PADetailContainer","SUBMITTED","PACheckoutContainer","PA_PAMainContainer","meta","isProduction","Helmet","content","RefreshTimer","refresher","invokeNewTimer","resultToMatch","MultiCompareInner","tabIndex","currentTab","policyTypes","handleTabClick","renderTabs","setPlanType","lowerCase","nextState","isEqual","selectedIndex","categoryTab","isCameFromBackButton","currIncomingIndex","tabIndexToUse","setSelectedIndex","isInitial","oldPolicyTypes","policyTypesToUse","theIndex","image","img","tabInfo","currentTabIndex","tab","newTab","scrollPopUpCallback","buttonDesc","tabStyle","isDisableDropdown","big","CompareView","notAccordion","productChangable","ChangeInitialFormData","headerValue","Enquiry","compare","defaultInsurers","selectedInsurers","currentInsurers","parsedData","parseData","trip_type","parsedParams","setSelectedInsurers","getNewData","onInsurerClick","newDefaultInsurers","plan","slice","isLoading","setTimeout","hoveredIndex","insurer","insurerSlug","incomingInsurers","MultiCompareView_MultiCompareInner","mainMsg","array","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","oldValue","handleChange","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleOnInputKeyDown","handleInputChange","formStore","event","isMinus","newVal","Math","preventDefault","keyCode","floor","inputField","Number","isNaN","extraInfo","disableTyping","errorStyle","react__WEBPACK_IMPORTED_MODULE_6___default","_FormInputWrapper_FormInputWrapper__WEBPACK_IMPORTED_MODULE_12__","formParent","role","Minus","onBlur","redux_form__WEBPACK_IMPORTED_MODULE_8__","disabled","component","onKeyDown","Plus","ownProps","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","paDetailsForm","isAdHoc","adHocData","paramsWording","getCheckoutParamsWording","getSessionParams","headerCoverage","getCheckoutHeaderDataCoverage","params","sessionParams","session_params","SpouseAttribute","familyMemberText","num_adult","title","family","numChildren","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","headerData","mainDetails","attributes","compactCheckoutAttributes","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","end_date","subDetails","getSubDetails","isMyself","getCompactSubDetails","leftDetail","family_name","given_name","full_name","birth_date","address","unit_no","postal","mobile_number","rightDetail","familyData","childCount","full_school_education","relationship","wording","sessionId","react__WEBPACK_IMPORTED_MODULE_7___default","_components_Templates_Checkout_CheckoutWrapper__WEBPACK_IMPORTED_MODULE_13__","backToDetails","payment","cashback","rewardsID","promoCode","receipt"],"mappings":"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","file":"static/js/pa.8855e494.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PAEssential.e5d2b632.svg\";","module.exports = __webpack_public_path__ + \"static/media/PAElite.e0164ee6.svg\";","/**\r\n * PAEditDetail.js\r\n * Edit Detail View for PA\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport _ from 'lodash';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, getFormValues, reset } from 'redux-form';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nimport Avatar from 'assets/images/MainFormIcons/Avatar.svg';\r\nimport Family from 'assets/images/MainFormIcons/Family.svg';\r\nimport Chest from 'assets/images/MainFormIcons/Chest.svg';\r\n\r\nimport Button from 'components/FormsV3/Button/Button';\r\nimport Selection from '../Forms/Selection/Selection';\r\nimport Spinner from '../Forms/Spinner/Spinner';\r\nimport DropDownV2 from '../Forms/DropDown/DropDownV2';\r\nimport DatePickerV2 from '../Forms/DatePicker/DatePickerV2';\r\n\r\nimport RestrictionsPopup from '../Templates/RestrictionsPopup/RestrictionsPopup';\r\n\r\nimport { invokeSubmit } from '../../actions/editFormActions';\r\nimport { setInsuranceFormState, FORMSTATES } from '../../actions/insuranceActions';\r\nimport { setRestrictionPopup } from '../../actions/restrictionsActions';\r\nimport { validateForm, dateReValidate } from '../../lib/validators';\r\nimport { storeStringToDate, dateToString, slashedStringDateToDate } from '../../lib/dateFunctions';\r\nimport { remapFormFields } from '../../lib/helperFunctions';\r\nimport { gaEvent, ampTag } from '../../lib/tagFunctions';\r\n\r\nconst formName = 'pa';\r\n\r\nclass PAEditDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { paFields } = this.props;\r\n\r\n    const paData = remapFormFields(paFields.form_fields);\r\n\r\n    this.state = {\r\n      errorStringData: {},\r\n      paData,\r\n      minDate: slashedStringDateToDate(paData.start_date.min_date),\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCloseEdit = this.handleCloseEdit.bind(this);\r\n    this.handleRevert = this.handleRevert.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { storeForm, setCloseCallBack } = this.props;\r\n    this.originalValues = storeForm;\r\n\r\n    if (setCloseCallBack) {\r\n      setCloseCallBack(this.handleRevert);\r\n    }\r\n  }\r\n\r\n  validateForm(e) {\r\n    // e.preventDefault();\r\n    // console.log(e);\r\n    const { paData, minDate } = this.state;\r\n    const {\r\n      constants,\r\n    } = this.props;\r\n\r\n    const fieldsToCheck = [\r\n      'plan_type',\r\n      'my_occupation',\r\n      'start_date',\r\n    ];\r\n\r\n    if (e.plan_type === 'Me & My Spouse') {\r\n      fieldsToCheck.push('spouse_occupation');\r\n    }\r\n\r\n    if (e.plan_type === 'Me & My Family') {\r\n      fieldsToCheck.push('family_members');\r\n      fieldsToCheck.push('num_children');\r\n\r\n      if (e.family_members === '2 Adults') {\r\n        fieldsToCheck.push('spouse_occupation');\r\n      }\r\n    }\r\n\r\n    const errorResult = validateForm(e, fieldsToCheck, {\r\n      plan_type: { type: 'ARRAY', data: paData.plan_type.options },\r\n      family_members: { type: 'ARRAY', data: paData.family_members.options },\r\n      num_children: { type: 'ARRAY', data: _.range(paData.num_children.min, (paData.num_children.max) + 1, 1) },\r\n      my_occupation: { type: 'ARRAY', data: constants.occupations },\r\n      spouse_occupation: { type: 'ARRAY', data: constants.occupations },\r\n      start_date: { type: 'DATE', start: minDate },\r\n    });\r\n\r\n    this.setState({\r\n      errorStringData: errorResult,\r\n    });\r\n\r\n    return errorResult;\r\n  }\r\n\r\n  handleSubmit(e, isFirstValidate = true) {\r\n    // e.preventDefault();\r\n    // console.log(e);\r\n    const {\r\n      closePopUp,\r\n      setInsurFormState,\r\n      setSubmit,\r\n      storeForm,\r\n      submitCallback,\r\n      history,\r\n    } = this.props;\r\n\r\n    const errorResult = this.validateForm(isFirstValidate ? e : storeForm);\r\n    const isEmptyResult = _.isEmpty(errorResult);\r\n\r\n    if (dateReValidate(\r\n      isEmptyResult,\r\n      isFirstValidate,\r\n      errorResult,\r\n      error => this.setState({ errorStringData: error }),\r\n      () => this.handleSubmit(storeForm, false),\r\n    )) {\r\n      return;\r\n    }\r\n\r\n    if (_.isEmpty(errorResult)) {\r\n      setSubmit();\r\n      this.originalValues = storeForm;\r\n\r\n      if (submitCallback) {\r\n        submitCallback();\r\n      } else {\r\n        gaEvent('PersonalAccident - Get Quote', {\r\n          event_category: 'PersonalAccident',\r\n          event_label: 'Button - PersonalAccident - Get Quote',\r\n        });\r\n\r\n        const spouseOccupation =\r\n          e.plan_type === 'Me & My Spouse' ||\r\n            (e.plan_type === 'Me & My Family' && e.family_members === '2 Adults') ?\r\n            { 'occupation-spouse': e.spouse_occupation } : {};\r\n\r\n        const children = e.plan_type === 'Me & My Family' ? { children: e.num_children } : {};\r\n\r\n        ampTag('PAGetQuoteA', {\r\n          type: e.plan_type,\r\n          'occupation-self': e.my_occupation,\r\n          ...spouseOccupation,\r\n          ...children,\r\n        });\r\n      }\r\n\r\n      if (closePopUp) {\r\n        closePopUp();\r\n      }\r\n\r\n      setInsurFormState(FORMSTATES.CHOOSEPLAN.index);\r\n      history.push(`/personal-accident${FORMSTATES.CHOOSEPLAN.path}`);\r\n    }\r\n  }\r\n\r\n  handleRevert() {\r\n    const { change, resetForm } = this.props;\r\n    resetForm();\r\n    Object.keys(this.originalValues).forEach((key) => {\r\n      change(key, this.originalValues[key]);\r\n    });\r\n  }\r\n\r\n  handleCloseEdit() {\r\n    const { closePopUp } = this.props;\r\n    closePopUp(this.handleRevert);\r\n  }\r\n\r\n  renderSpouse() {\r\n    const { errorStringData } = this.state;\r\n    const {\r\n      change,\r\n      form,\r\n      constants,\r\n      storeForm,\r\n    } = this.props;\r\n\r\n    if (\r\n      storeForm &&\r\n      (storeForm.plan_type === 'Me & My Spouse' ||\r\n      (storeForm.plan_type === 'Me & My Family' && storeForm.family_members === '2 Adults'))\r\n    ) {\r\n      return (\r\n        <Col className=\"input-padding-left\" xs={12} sm={5}>\r\n          <DropDownV2\r\n            form={form}\r\n            change={change}\r\n            name=\"spouse_occupation\"\r\n            placeholderString=\"All Occupations\"\r\n            dropList={constants.occupations}\r\n            size=\"medium\"\r\n            zIndex={95}\r\n            desc=\"My spouse works as a\"\r\n            errorString={errorStringData.spouse_occupation}\r\n            validateForm={() => this.validateForm(storeForm)}\r\n          />\r\n        </Col>\r\n      );\r\n    }\r\n\r\n    return <Col className=\"input-padding-left\" xs={12} sm={5} />;\r\n  }\r\n\r\n  renderFamily() {\r\n    const { errorStringData, paData } = this.state;\r\n    const {\r\n      change,\r\n      form,\r\n      storeForm,\r\n    } = this.props;\r\n\r\n    if (storeForm && storeForm.plan_type === 'Me & My Family') {\r\n      return (\r\n        <Fragment>\r\n          <Col className=\"justify-content-center icon icon-car d-none d-sm-flex\" sm={2}>\r\n            <img src={Family} alt=\"Family.svg\" />\r\n          </Col>\r\n          <Col className=\"input-padding-right\" xs={12} sm={5}>\r\n            <Selection\r\n              form={form}\r\n              change={change}\r\n              name=\"family_members\"\r\n              type=\"text-selection\"\r\n              noEmptyTextSelection\r\n              options={_.map(paData.family_members.options, data => ({\r\n                key: data, description: data,\r\n              }))}\r\n              sizeInSM={6}\r\n              zIndex={98}\r\n              desc={paData.family_members.display_name}\r\n              errorString={errorStringData.family_members}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n          <Col className=\"input-padding-left\" xs={12} sm={5}>\r\n            <Spinner\r\n              form={form}\r\n              change={change}\r\n              zIndex={97}\r\n              name=\"num_children\"\r\n              unit=\"Children\"\r\n              min={paData.num_children.min}\r\n              max={paData.num_children.max}\r\n              increment={1}\r\n              initial={paData.num_children.min}\r\n              desc={paData.num_children.display_name || ''}\r\n              errorString={errorStringData.num_children}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  renderStartDate() {\r\n    const { storeForm } = this.props;\r\n\r\n    try {\r\n      if (storeForm && storeForm.start_date) {\r\n        const startDate = storeStringToDate(storeForm.start_date);\r\n        const endDate = new Date(startDate);\r\n        endDate.setFullYear(endDate.getFullYear() + 1);\r\n        endDate.setDate(endDate.getDate() - 1);\r\n\r\n        const startDateString = dateToString(startDate);\r\n        const endDateString = dateToString(endDate);\r\n\r\n        return (\r\n          <Fragment>\r\n            <Col className=\"input-padding-right\" xs={12} sm={5} />\r\n            <Col className=\"justify-content-center icon icon-car d-none d-sm-flex\" sm={2} />\r\n            <Col className=\"input-padding-right pa-start-date\" xs={12} sm={10}>\r\n              <p>\r\n                <span>I will like the plan to start from </span>\r\n                <span><b>{startDateString}</b></span>\r\n                <span> to </span>\r\n                <span><b>{endDateString}</b></span>\r\n              </p>\r\n            </Col>\r\n          </Fragment>\r\n        );\r\n      }\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const { errorStringData, paData, minDate } = this.state;\r\n    const {\r\n      handleSubmit,\r\n      isPopUp,\r\n      change,\r\n      form,\r\n      constants,\r\n      storeForm,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"landing-form-container\">\r\n        {\r\n          isPopUp ?\r\n            <p className=\"edit-header\">Edit Personal Accident Insurance Details</p>\r\n          :\r\n            null\r\n        }\r\n        <form onSubmit={handleSubmit(this.handleSubmit)}>\r\n          <Row className=\"input-offset\" noGutters>\r\n            <Col className=\"justify-content-center icon icon-car d-none d-sm-flex\" sm={2}>\r\n              <img src={Avatar} alt=\"Avatar.svg\" style={{ marginTop: -11 }} />\r\n            </Col>\r\n            <Col xs={12} sm={10}>\r\n              <Selection\r\n                form={form}\r\n                change={change}\r\n                name=\"plan_type\"\r\n                type=\"text-selection\"\r\n                noEmptyTextSelection\r\n                options={_.map(paData.plan_type.options, data => ({\r\n                  key: data, description: data,\r\n                }))}\r\n                sizeInSM={4}\r\n                zIndex={99}\r\n                desc={paData.plan_type.display_name}\r\n                errorString={errorStringData.plan_type}\r\n                validateForm={() => this.validateForm(storeForm)}\r\n              />\r\n            </Col>\r\n            {this.renderFamily()}\r\n            <Col className=\"justify-content-center icon icon-car d-none d-sm-flex\" sm={2} />\r\n            <Col className=\"input-padding-right\" xs={12} sm={5}>\r\n              <DropDownV2\r\n                form={form}\r\n                change={change}\r\n                name=\"my_occupation\"\r\n                placeholderString=\"All Occupations\"\r\n                dropList={constants.occupations}\r\n                size=\"medium\"\r\n                zIndex={96}\r\n                desc=\"I work as\"\r\n                errorString={errorStringData.my_occupation}\r\n                validateForm={() => this.validateForm(storeForm)}\r\n              />\r\n            </Col>\r\n            {this.renderSpouse()}\r\n            <Col className=\"justify-content-center icon icon-car d-none d-sm-flex\" sm={2}>\r\n              <img src={Chest} alt=\"Chest.svg\" style={{ marginTop: -11 }} />\r\n            </Col>\r\n            <Col className=\"input-padding-right\" xs={12} sm={5}>\r\n              <DatePickerV2\r\n                form={form}\r\n                change={change}\r\n                name=\"start_date\"\r\n                errorString={errorStringData.start_date}\r\n                validateForm={() => this.validateForm(storeForm)}\r\n                size=\"medium\"\r\n                zIndex={94}\r\n                startDate={minDate}\r\n                desc=\"Start Date\"\r\n              />\r\n            </Col>\r\n            {this.renderStartDate()}\r\n          </Row>\r\n          <Row className=\"align-items-center button-container\" noGutters>\r\n            {\r\n              isPopUp ?\r\n                <Col className=\"justify-content-center button\" xs={12}>\r\n                  <Row noGutters>\r\n                    <Col className=\"button-container-inner\" xs={12} sm={6}>\r\n                      <Button\r\n                        className=\"button-left\"\r\n                        variant=\"medium-flat\"\r\n                        width={165}\r\n                        height={72}\r\n                        onClick={() => this.handleCloseEdit()}\r\n                      >\r\n                        <p>Cancel</p>\r\n                      </Button>\r\n                    </Col>\r\n                    <Col className=\"button-container-inner\" xs={12} sm={6}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"medium-flat-green\"\r\n                        width={165}\r\n                        height={72}\r\n                      >\r\n                        <p>Save</p>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              :\r\n                <Col className=\"justify-content-center button\" xs={12}>\r\n                  <Button type=\"submit\" variant=\"medium-flat-green\" width={165} height={72}>\r\n                    <p>Get Quote</p>\r\n                  </Button>\r\n                </Col>\r\n            }\r\n          </Row>\r\n        </form>\r\n        <RestrictionsPopup ref={node => this.resPopup = node} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPAEditDetail.defaultProps = {\r\n  isPopUp: false,\r\n  setCloseCallBack: null,\r\n  closePopUp: null,\r\n  submitCallback: null,\r\n  storeForm: null,\r\n};\r\n\r\nPAEditDetail.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  form: PropTypes.string.isRequired,\r\n  change: PropTypes.func.isRequired,\r\n  isPopUp: PropTypes.bool,\r\n  resetForm: PropTypes.func.isRequired,\r\n  closePopUp: PropTypes.func,\r\n  setInsurFormState: PropTypes.func.isRequired,\r\n  setSubmit: PropTypes.func.isRequired,\r\n  submitCallback: PropTypes.func,\r\n  storeForm: PropTypes.object,\r\n  setCloseCallBack: PropTypes.func,\r\n  paFields: PropTypes.object.isRequired,\r\n  constants: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  storeForm: getFormValues(formName)(state),\r\n  isRevert: state.editForm.isRevert,\r\n  constants: state.insurance.constants,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  resetForm: () => {\r\n    dispatch(reset(formName));\r\n  },\r\n  setInsurFormState: (state) => {\r\n    dispatch(setInsuranceFormState(state));\r\n  },\r\n  setSubmit: () => {\r\n    dispatch(invokeSubmit());\r\n  },\r\n  setRestrictionPopup: (data) => {\r\n    dispatch(setRestrictionPopup(data));\r\n  },\r\n});\r\n\r\nexport default withRouter(reduxForm({\r\n  form: formName,\r\n  destroyOnUnmount: false,\r\n})(connect(mapStateToProps, mapDispatchToProps)(PAEditDetail)));\r\n","/**\r\n * PAMain.js\r\n * Main Landing view for PA\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PA1 from 'assets/images/PA/policypal-personal-accident-insurance-1.svg';\r\nimport PA2 from 'assets/images/PA/policypal-personal-accident-insurance-2.svg';\r\nimport PA3 from 'assets/images/PA/policypal-personal-accident-insurance-3.svg';\r\n\r\nimport PAEditDetail from './PAEditDetail';\r\nimport FormLanding from '../Templates/FormLanding/FormLanding';\r\n\r\nimport './PA.scss';\r\n\r\nclass PAMain extends Component {\r\n  render() {\r\n    const { paFields, paPromoGiveAway } = this.props;\r\n\r\n    return (\r\n      <div className=\"pa-main-container\">\r\n        <FormLanding\r\n          img1={PA1}\r\n          img2={PA2}\r\n          img3={PA3}\r\n          imgAlt=\"PolicyPal Personal Accident Insurance\"\r\n          promo={paPromoGiveAway}\r\n          desc={\r\n            <Fragment>\r\n              <p>Get 5% Cashback upon purchase of</p>\r\n              <p>Personal Accident Insurance!</p>\r\n            </Fragment>\r\n          }\r\n        >\r\n          <PAEditDetail\r\n            paFields={paFields}\r\n          />\r\n        </FormLanding>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPAMain.defaultProps = {\r\n  paPromoGiveAway: null,\r\n};\r\n\r\nPAMain.propTypes = {\r\n  paFields: PropTypes.object.isRequired,\r\n  paPromoGiveAway: PropTypes.object,\r\n};\r\n\r\nexport default PAMain;\r\n","/**\r\n * PAMainContainer.js\r\n * The Main container for PA\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport PAMain from '../../components/PA/PAMain';\r\n\r\nimport { setInsuranceFormState, FORMSTATES } from '../../actions/insuranceActions';\r\nimport { getPAFields, clearPAData } from '../../actions/paActions';\r\nimport { setLoading, clearLoading } from '../../actions/loadingScreenActions';\r\nimport { gaTag, ampTag } from '../../lib/tagFunctions';\r\n\r\nclass PAMainContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {\r\n      loading,\r\n      paFields,\r\n      history,\r\n      clearData,\r\n    } = this.props;\r\n\r\n    clearData();\r\n\r\n    if (!paFields) {\r\n      loading(() => history.push('/'));\r\n      this.props.getPAFields();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { setFormState, history } = this.props;\r\n    setFormState(FORMSTATES.MAIN.index);\r\n    window.scrollTo(0, 0);\r\n\r\n    gaTag({\r\n      page_title: 'PersonalAccident',\r\n      page_path: `/personal-accident${history.location.search}`,\r\n    });\r\n    ampTag('PAFormS');\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { paFields, loadingEnd } = this.props;\r\n    if (!prevProps.paFields && paFields) {\r\n      loadingEnd();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { paFields, paPromoGiveAway } = this.props;\r\n\r\n    if (!paFields) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <PAMain\r\n        paFields={paFields}\r\n        paPromoGiveAway={paPromoGiveAway}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPAMainContainer.defaultProps = {\r\n  paFields: null,\r\n  paPromoGiveAway: null,\r\n};\r\n\r\nPAMainContainer.propTypes = {\r\n  paPromoGiveAway: PropTypes.object,\r\n  paFields: PropTypes.object,\r\n  getPAFields: PropTypes.func.isRequired,\r\n  loading: PropTypes.func.isRequired,\r\n  loadingEnd: PropTypes.func.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  clearData: PropTypes.func.isRequired,\r\n  setFormState: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  paPromoGiveAway: state.insurance.promoGiveaways.pa,\r\n  paFields: state.pa.paFields,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getPAFields: () => {\r\n    dispatch(getPAFields());\r\n  },\r\n  loading: (callBack, errorMsg, time) => {\r\n    dispatch(setLoading(callBack, errorMsg, time));\r\n  },\r\n  loadingEnd: () => {\r\n    dispatch(clearLoading());\r\n  },\r\n  clearData: () => {\r\n    dispatch(clearPAData());\r\n  },\r\n  setFormState: (state) => {\r\n    dispatch(setInsuranceFormState(state));\r\n  },\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PAMainContainer));\r\n","/**\r\n * PAChoosePlan.js\r\n * Choose Plan view for PA\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Import Insurer Logos\r\nimport PABasic from 'assets/images/PA/PABasic.svg';\r\nimport PAEssential from 'assets/images/PA/PAEssential.svg';\r\nimport PAElite from 'assets/images/PA/PAElite.svg';\r\n\r\nimport MultiCompareView from '../Templates/MultiCompareView/MultiCompareView';\r\n\r\nimport PAEditDetail from './PAEditDetail';\r\n\r\nimport { gaEvent, ampTag } from '../../lib/tagFunctions';\r\n\r\nclass PAChoosePlan extends Component {\r\n  getAmpTags(selectedPlanData, planType) {\r\n    try {\r\n      let discount = null;\r\n      _.map(selectedPlanData.info.discount, (data) => {\r\n        discount = data.display;\r\n      });\r\n      if (_.isEmpty(discount)) {\r\n        discount = '0%';\r\n      }\r\n\r\n      return ({\r\n        type: planType,\r\n        partner: selectedPlanData.info.insurer_slug,\r\n        price: selectedPlanData.policyInfo[planType].net_price,\r\n        discount,\r\n      });\r\n    } catch (error) {\r\n      console.log(`Travel choose plan Buy now Amp tag failed: ${error.message}`);\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  render() {\r\n    const { paFields } = this.props;\r\n\r\n    return (\r\n      <div className=\"pa-compare-view\">\r\n        <MultiCompareView\r\n          {...this.props}\r\n          category=\"pa\"\r\n          form=\"pa\"\r\n          initialIndex={1}\r\n          planImages={{\r\n            basic: PABasic,\r\n            essential: PAEssential,\r\n            elite: PAElite,\r\n          }}\r\n          editForm={{\r\n            valuesToListen: [\r\n              { value: 'plan_type', desc: 'For' },\r\n              { value: 'family_members', desc: 'Members' },\r\n              { value: 'num_children', desc: 'Children' },\r\n              { value: 'start_date', desc: 'Start date' },\r\n              { value: 'my_occupation', desc: 'My occupation' },\r\n              { value: 'spouse_occupation', desc: 'Spouse\\'s occupation' },\r\n            ],\r\n            conditions: {\r\n              key: 'plan_type',\r\n              values: {\r\n                Myself: ['plan_type', 'start_date', 'my_occupation'],\r\n                'Me & My Spouse': ['plan_type', 'start_date', 'my_occupation', 'spouse_occupation'],\r\n                'Me & My Family': ['plan_type', 'start_date', 'num_children', 'family_members', 'my_occupation'],\r\n              },\r\n            },\r\n            editDetail: <PAEditDetail isPopUp paFields={paFields} />,\r\n          }}\r\n          trackingTags={{\r\n            basic: (selectedPlanData) => {\r\n              gaEvent('PersonalAccident - BuyNowBasic', {\r\n                event_category: 'PersonalAccident',\r\n                event_label: 'Button - PersonalAccident - BuyNowBasic',\r\n              });\r\n              ampTag('PABuyNowA', this.getAmpTags(selectedPlanData, 'basic'));\r\n            },\r\n            essential: (selectedPlanData) => {\r\n              gaEvent('PersonalAccident - BuyNowEssential', {\r\n                event_category: 'PersonalAccident',\r\n                event_label: 'Button - PersonalAccident - BuyNowEssential',\r\n              });\r\n              ampTag('PABuyNowA', this.getAmpTags(selectedPlanData, 'essential'));\r\n            },\r\n            elite: (selectedPlanData) => {\r\n              gaEvent('PersonalAccident - BuyNowElite', {\r\n                event_category: 'PersonalAccident',\r\n                event_label: 'Button - PersonalAccident - BuyNowElite',\r\n              });\r\n              ampTag('PABuyNowA', this.getAmpTags(selectedPlanData, 'elite'));\r\n            },\r\n          }}\r\n          forceFixedOnDesktop\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPAChoosePlan.defaultProps = {\r\n};\r\n\r\nPAChoosePlan.propTypes = {\r\n  paFields: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PAChoosePlan;\r\n","/**\r\n * PAChoosePlanContainer.js\r\n * Choose Plan Container for PA\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getFormValues } from 'redux-form';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { setInsuranceFormState, FORMSTATES } from '../../actions/insuranceActions';\r\nimport { parsePAForm, getPAPlans, getValidInsurersList, clearPAData, setSelectedPlanData } from '../../actions/paActions';\r\n\r\nimport PAChoosePlan from '../../components/PA/PAChoosePlan';\r\nimport { gaTag, ampTag } from '../../lib/tagFunctions';\r\n\r\n// const defaultInsurers = ['msig', 'etiqa', 'tokio_marine'];\r\n\r\nclass PAChoosePlanContainer extends Component {\r\n  componentDidMount() {\r\n    const { setFormState } = this.props;\r\n    setFormState(FORMSTATES.CHOOSEPLAN.index);\r\n\r\n    gaTag({\r\n      page_title: 'PersonalAccident - Choose Plan',\r\n      page_path: '/personal-accident/chooseplan',\r\n    });\r\n    ampTag('PAResultsS');\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      paForm,\r\n      getPlans,\r\n      getInsurersList,\r\n      clearData,\r\n      setFormState,\r\n      plansData,\r\n      validInsurersList,\r\n      paFields,\r\n      history,\r\n    } = this.props;\r\n\r\n    if (!paFields) {\r\n      return null;\r\n    }\r\n    return (\r\n      <PAChoosePlan\r\n        paFields={paFields}\r\n        mainForm={paForm}\r\n        parseForm={parsePAForm}\r\n        getPlans={getPlans}\r\n        getInsurersList={getInsurersList}\r\n        clearData={clearData}\r\n        setSelectedPlanData={this.props.setSelectedPlanData}\r\n        setFormState={() => {\r\n          setFormState(FORMSTATES.DETAILFORM.index);\r\n          history.push(`/personal-accident${FORMSTATES.DETAILFORM.path}`);\r\n        }}\r\n        loadingFailBackState={() => {\r\n          history.goBack();\r\n        }}\r\n        plansData={plansData}\r\n        validInsurersList={validInsurersList}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPAChoosePlanContainer.defaultProps = {\r\n  plansData: null,\r\n  validInsurersList: null,\r\n};\r\n\r\nPAChoosePlanContainer.propTypes = {\r\n  paForm: PropTypes.object.isRequired,\r\n  getPlans: PropTypes.func.isRequired,\r\n  getInsurersList: PropTypes.func.isRequired,\r\n  clearData: PropTypes.func.isRequired,\r\n  setSelectedPlanData: PropTypes.func.isRequired,\r\n  setFormState: PropTypes.func.isRequired,\r\n  plansData: PropTypes.array,\r\n  validInsurersList: PropTypes.array,\r\n  paFields: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  paFields: state.pa.paFields,\r\n  paForm: getFormValues('pa')(state),\r\n  plansData: state.pa.plansData,\r\n  validInsurersList: state.pa.validInsurersList,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFormState: (state) => {\r\n    dispatch(setInsuranceFormState(state));\r\n  },\r\n  getPlans: (parsedForm) => {\r\n    dispatch(getPAPlans(parsedForm));\r\n  },\r\n  getInsurersList: (parsedForm) => {\r\n    dispatch(getValidInsurersList(parsedForm));\r\n  },\r\n  clearData: () => {\r\n    dispatch(clearPAData());\r\n  },\r\n  setSelectedPlanData: (data) => {\r\n    dispatch(setSelectedPlanData(data));\r\n  },\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PAChoosePlanContainer));\r\n","/**\r\n * PADetail.js\r\n * Detail View for PA\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport _ from 'lodash';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, getFormValues } from 'redux-form';\r\nimport { Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Import Insurer Logos\r\nimport DetailForm from '../Templates/DetailForm/DetailForm';\r\nimport TabView from '../Templates/TabView/TabView';\r\n\r\nimport TextInput from '../Forms/TextInput/TextInput';\r\nimport DatePickerV2 from '../Forms/DatePicker/DatePickerV2';\r\nimport DropDownV2 from '../Forms/DropDown/DropDownV2';\r\nimport Selection from '../Forms/Selection/Selection';\r\n\r\nimport { validateForm, dateReValidate } from '../../lib/validators';\r\nimport { gaEvent, ampTag } from '../../lib/tagFunctions';\r\n// import { getPostal } from '../../actions/insuranceActions';\r\n\r\nconst commonFields = [\r\n  'name',\r\n  'nationality',\r\n  'id_type',\r\n  'nric',\r\n  'birth_date',\r\n  'gender',\r\n];\r\n\r\nconst myselfFields = [\r\n  'email',\r\n  'postal',\r\n  'mobile_number',\r\n  'race',\r\n  'marital_status',\r\n];\r\n\r\nconst myselfSpouseFields = [\r\n  'occupation',\r\n  'industry',\r\n];\r\n\r\nconst childFields = [\r\n  'education',\r\n];\r\n\r\nconst formName = 'pa-detail';\r\n\r\nclass PADetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const tabsNames = this.generateTabsNames();\r\n\r\n    this.state = {\r\n      errorStringData: {},\r\n      errorString: null,\r\n      tabs: tabsNames.tabs,\r\n      formNames: tabsNames.formNames,\r\n      prefix: '',\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n  }\r\n\r\n  getFormFields(prefix, fields) {\r\n    return _.map(fields, field => (`${prefix}${field}`));\r\n  }\r\n\r\n  async validateForm(e/* , isSubmit = false */) {\r\n    // console.log(e);\r\n    const { formNames } = this.state;\r\n\r\n    const errorPersons = [];\r\n    let errorString = null;\r\n    let errorTabIndex = -1;\r\n\r\n    const errorResult = _.reduce(formNames, (result, name, index) => {\r\n      let newResult = {};\r\n      let displayName = '';\r\n      if (name === '') {\r\n        const myself = [\r\n          ...this.getFormFields(name, commonFields),\r\n          ...this.getFormFields(name, myselfFields),\r\n          ...this.getFormFields(name, myselfSpouseFields),\r\n        ];\r\n\r\n        newResult = validateForm(e, myself);\r\n        displayName = 'Myself';\r\n      } else if (name === 'spouse-') {\r\n        const spouse = [\r\n          ...this.getFormFields(name, commonFields),\r\n          ...this.getFormFields(name, myselfSpouseFields),\r\n        ];\r\n\r\n        newResult = validateForm(e, spouse);\r\n        displayName = 'Spouse';\r\n      } else {\r\n        const child = [\r\n          ...this.getFormFields(name, commonFields),\r\n          ...this.getFormFields(name, childFields),\r\n        ];\r\n\r\n        newResult = validateForm(e, child);\r\n        displayName = `Child ${name.substring(_.findIndex(name, char => char === '_') + 1, name.length - 1)}`;\r\n      }\r\n\r\n      if (!_.isEmpty(newResult)) {\r\n        errorPersons.push(displayName);\r\n        if (errorTabIndex === -1) {\r\n          errorTabIndex = index;\r\n        }\r\n      }\r\n\r\n      return { ...result, ...newResult };\r\n    }, {});\r\n\r\n    /* if (isSubmit) {\r\n      const postalResult = await getPostal(e.postal);\r\n      if (!postalResult) {\r\n        errorResult.postal = 'Invalid postal code';\r\n\r\n        if (errorTabIndex === -1) {\r\n          errorTabIndex = 0;\r\n        }\r\n\r\n        if (!_.find(errorPersons, person => person === 'Myself')) {\r\n          errorPersons.push('Myself');\r\n        }\r\n      }\r\n    } */\r\n\r\n    this.setState({\r\n      errorStringData: errorResult,\r\n    });\r\n\r\n    if (errorPersons.length > 0) {\r\n      errorString = 'Errors found in form(s): ';\r\n      for (let i = 0; i < errorPersons.length; ++i) {\r\n        const comma = i !== errorPersons.length - 1 ? ', ' : '';\r\n        errorString = `${errorString}${errorPersons[i]}${comma}`;\r\n      }\r\n\r\n      this.setState({\r\n        errorString: [<p className=\"error-string\" key=\"error-1\">{errorString}</p>],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errorString: null,\r\n      });\r\n    }\r\n\r\n    return { errorResult, errorTabIndex };\r\n  }\r\n\r\n  async handleSubmit(e, isFirstValidate = true) {\r\n    // console.log(e);\r\n    const { submitCallback, storeForm } = this.props;\r\n\r\n    const validateResults = await this.validateForm(isFirstValidate ? e : storeForm, true);\r\n    const isEmptyResult = _.isEmpty(validateResults.errorResult);\r\n\r\n    if (dateReValidate(\r\n      isEmptyResult,\r\n      isFirstValidate,\r\n      validateResults.errorResult,\r\n      error => this.setState({ errorStringData: error, errorString: null }),\r\n      () => this.handleSubmit(storeForm, false),\r\n    )) {\r\n      return;\r\n    }\r\n\r\n    if (isEmptyResult) {\r\n      gaEvent('PersonalAccident - DetailForm - Checkout', {\r\n        event_category: 'PersonalAccident',\r\n        event_label: 'PersonalAccident - DetailForm - Checkout',\r\n      });\r\n      ampTag('PACheckoutA', {\r\n        idtype: e.id_type,\r\n        nationality: e.nationality,\r\n        gender: e.gender,\r\n        marital: e.marital_status,\r\n        race: e.race,\r\n        occupation: e.occupation,\r\n        industry: e.industry,\r\n      });\r\n\r\n      submitCallback();\r\n    } else if (this.tabView && validateResults.errorTabIndex !== -1) {\r\n      this.tabView.wrappedInstance.goToIndex(validateResults.errorTabIndex);\r\n    }\r\n\r\n    window.scrollTo(0, document.body.scrollHeight);\r\n  }\r\n\r\n  updatePrefix(name) {\r\n    this.setState({\r\n      prefix: name,\r\n    });\r\n  }\r\n\r\n  generateTabsNames() {\r\n    const { paForm } = this.props;\r\n    const tabs = [];\r\n    const formNames = [''];\r\n\r\n    const isSpouse = paForm.plan_type === 'Me & My Spouse';\r\n    const isFamily = paForm.plan_type === 'Me & My Family';\r\n\r\n    tabs.push({\r\n      desc: 'Me',\r\n      onClick: () => { this.updatePrefix(''); },\r\n    });\r\n\r\n    if (isSpouse || (isFamily && paForm.family_members === '2 Adults')) {\r\n      const name = 'spouse-';\r\n      tabs.push({\r\n        desc: 'Spouse',\r\n        onClick: () => { this.updatePrefix(name); },\r\n      });\r\n      formNames.push(name);\r\n    }\r\n\r\n    if (isFamily) {\r\n      for (let i = 0; i < paForm.num_children; ++i) {\r\n        const name = `fam-child_${i + 1}-`;\r\n        tabs.push({\r\n          desc: `Child ${i + 1}`,\r\n          onClick: () => { this.updatePrefix(name); },\r\n        });\r\n        formNames.push(name);\r\n      }\r\n    }\r\n\r\n    return {\r\n      tabs: tabs.length > 1 ? tabs : null,\r\n      formNames,\r\n    };\r\n  }\r\n\r\n  renderEmail() {\r\n    const { errorStringData, prefix } = this.state;\r\n    const {\r\n      form,\r\n      change,\r\n      storeForm,\r\n    } = this.props;\r\n\r\n    if (prefix === '') {\r\n      return (\r\n        <Col xs={12}>\r\n          <TextInput\r\n            form={form}\r\n            change={change}\r\n            name={`${prefix}email`}\r\n            placeholderString=\"\"\r\n            size=\"medium\"\r\n            zIndex={99}\r\n            desc=\"Email Address\"\r\n            errorString={errorStringData[`${prefix}email`]}\r\n            validateForm={() => this.validateForm(storeForm)}\r\n          />\r\n        </Col>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  renderOccupationIndustry() {\r\n    const { errorStringData, prefix } = this.state;\r\n    const {\r\n      form,\r\n      change,\r\n      constants,\r\n      storeForm,\r\n    } = this.props;\r\n\r\n    if (prefix === '' || prefix === 'spouse-') {\r\n      return (\r\n        <Fragment>\r\n          <Col className=\"right-padding\" xs={12} sm={6}>\r\n            <DropDownV2\r\n              form={form}\r\n              change={change}\r\n              name={`${prefix}occupation`}\r\n              placeholderString=\"Select occupation\"\r\n              dropList={constants.occupations}\r\n              size=\"medium\"\r\n              zIndex={92}\r\n              desc=\"Occupation\"\r\n              errorString={errorStringData[`${prefix}occupation`]}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n          <Col className=\"left-padding\" xs={12} sm={6}>\r\n            <DropDownV2\r\n              form={form}\r\n              change={change}\r\n              name={`${prefix}industry`}\r\n              placeholderString=\"Select industry\"\r\n              dropList={constants.industries}\r\n              size=\"medium\"\r\n              zIndex={91}\r\n              desc=\"Industry\"\r\n              errorString={errorStringData[`${prefix}industry`]}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  renderPostalMobile() {\r\n    const { errorStringData, prefix } = this.state;\r\n    const {\r\n      form,\r\n      change,\r\n      storeForm,\r\n    } = this.props;\r\n\r\n    if (prefix === '') {\r\n      return (\r\n        <Fragment>\r\n          <Col className=\"right-padding\" xs={12} sm={6}>\r\n            <TextInput\r\n              form={form}\r\n              change={change}\r\n              name={`${prefix}postal`}\r\n              placeholderString=\"\"\r\n              size=\"medium\"\r\n              zIndex={90}\r\n              desc=\"Postal Code\"\r\n              errorString={errorStringData[`${prefix}postal`]}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n          <Col className=\"left-padding\" xs={12} sm={6}>\r\n            <TextInput\r\n              form={form}\r\n              change={change}\r\n              name={`${prefix}mobile_number`}\r\n              placeholderString=\"\"\r\n              size=\"medium\"\r\n              zIndex={89}\r\n              desc=\"Mobile Number\"\r\n              errorString={errorStringData[`${prefix}mobile_number`]}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  renderEducation() {\r\n    const { errorStringData, prefix } = this.state;\r\n    const {\r\n      form,\r\n      change,\r\n      storeForm,\r\n    } = this.props;\r\n\r\n    if (prefix !== '' && prefix !== 'spouse-') {\r\n      return (\r\n        <Col className=\"right-padding\" xs={12} sm={6}>\r\n          <Selection\r\n            form={form}\r\n            change={change}\r\n            name={`${prefix}education`}\r\n            type=\"text-selection\"\r\n            noEmptyTextSelection\r\n            options={[\r\n              { key: 'Yes', description: 'Yes' },\r\n              { key: 'No', description: 'No' },\r\n            ]}\r\n            sizeInSM={6}\r\n            desc=\"Full school education\"\r\n            errorString={errorStringData[`${prefix}education`]}\r\n            validateForm={() => this.validateForm(storeForm)}\r\n          />\r\n        </Col>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  renderCenterPortion() {\r\n    const { errorStringData, prefix } = this.state;\r\n    const {\r\n      form,\r\n      change,\r\n      constants,\r\n      storeForm,\r\n    } = this.props;\r\n\r\n    if (prefix === '') {\r\n      return (\r\n        <Fragment>\r\n          <Col className=\"right-padding\" xs={12} sm={6}>\r\n            <DropDownV2\r\n              form={form}\r\n              change={change}\r\n              name={`${prefix}race`}\r\n              placeholderString=\"Select race\"\r\n              dropList={constants.race}\r\n              size=\"medium\"\r\n              zIndex={94}\r\n              desc=\"Race\"\r\n              errorString={errorStringData[`${prefix}race`]}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n          <Col className=\"left-padding\" xs={12} sm={6}>\r\n            <Selection\r\n              form={form}\r\n              change={change}\r\n              name={`${prefix}gender`}\r\n              type=\"text-selection\"\r\n              noEmptyTextSelection\r\n              options={[\r\n                { key: 'Male', description: 'Male' },\r\n                { key: 'Female', description: 'Female' },\r\n              ]}\r\n              sizeInSM={6}\r\n              desc=\"Gender\"\r\n              errorString={errorStringData[`${prefix}gender`]}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n          <Col className=\"right-padding\" xs={12} sm={6}>\r\n            <DatePickerV2\r\n              form={form}\r\n              change={change}\r\n              name={`${prefix}birth_date`}\r\n              size=\"medium\"\r\n              zIndex={93}\r\n              desc=\"Date of birth\"\r\n              errorString={errorStringData[`${prefix}birth_date`]}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n              endDate={new Date()}\r\n            />\r\n          </Col>\r\n          <Col className=\"left-padding\" xs={12} sm={6}>\r\n            <Selection\r\n              form={form}\r\n              change={change}\r\n              name={`${prefix}marital_status`}\r\n              type=\"text-selection\"\r\n              noEmptyTextSelection\r\n              options={[\r\n                { key: 'Single', description: 'Single' },\r\n                { key: 'Married', description: 'Married' },\r\n              ]}\r\n              sizeInSM={6}\r\n              desc=\"Marital Status\"\r\n              errorString={errorStringData[`${prefix}marital_status`]}\r\n              validateForm={() => this.validateForm(storeForm)}\r\n            />\r\n          </Col>\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Col className=\"right-padding\" xs={12} sm={6}>\r\n          <DatePickerV2\r\n            form={form}\r\n            change={change}\r\n            name={`${prefix}birth_date`}\r\n            size=\"medium\"\r\n            zIndex={93}\r\n            desc=\"Date of birth\"\r\n            errorString={errorStringData[`${prefix}birth_date`]}\r\n            validateForm={() => this.validateForm(storeForm)}\r\n            endDate={new Date()}\r\n          />\r\n        </Col>\r\n        <Col className=\"left-padding\" xs={12} sm={6}>\r\n          <Selection\r\n            form={form}\r\n            change={change}\r\n            name={`${prefix}gender`}\r\n            type=\"text-selection\"\r\n            noEmptyTextSelection\r\n            options={[\r\n              { key: 'Male', description: 'Male' },\r\n              { key: 'Female', description: 'Female' },\r\n            ]}\r\n            sizeInSM={6}\r\n            desc=\"Gender\"\r\n            errorString={errorStringData[`${prefix}gender`]}\r\n            validateForm={() => this.validateForm(storeForm)}\r\n          />\r\n        </Col>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  renderForm() {\r\n    const { errorStringData, prefix } = this.state;\r\n    const {\r\n      form,\r\n      change,\r\n      constants,\r\n      storeForm,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Row className=\"main-form\" noGutters>\r\n        {this.renderEmail()}\r\n        <Col className=\"right-padding\" xs={12} sm={6}>\r\n          <TextInput\r\n            form={form}\r\n            change={change}\r\n            name={`${prefix}name`}\r\n            placeholderString=\"\"\r\n            size=\"medium\"\r\n            zIndex={98}\r\n            desc=\"Full Name\"\r\n            errorString={errorStringData[`${prefix}name`]}\r\n            validateForm={() => this.validateForm(storeForm)}\r\n          />\r\n        </Col>\r\n        <Col className=\"left-padding\" xs={12} sm={6}>\r\n          <DropDownV2\r\n            form={form}\r\n            change={change}\r\n            name={`${prefix}nationality`}\r\n            placeholderString=\"Select nationality\"\r\n            dropList={constants.nationalities}\r\n            size=\"medium\"\r\n            zIndex={97}\r\n            desc=\"Nationality\"\r\n            errorString={errorStringData[`${prefix}nationality`]}\r\n            validateForm={() => this.validateForm(storeForm)}\r\n          />\r\n        </Col>\r\n        <Col className=\"right-padding\" xs={12} sm={6}>\r\n          <DropDownV2\r\n            form={form}\r\n            change={change}\r\n            name={`${prefix}id_type`}\r\n            placeholderString=\"Select ID Type\"\r\n            dropList={constants.idTypes}\r\n            size=\"medium\"\r\n            zIndex={96}\r\n            desc=\"Type of ID\"\r\n            errorString={errorStringData[`${prefix}id_type`]}\r\n            validateForm={() => this.validateForm(storeForm)}\r\n          />\r\n        </Col>\r\n        <Col className=\"left-padding\" xs={12} sm={6}>\r\n          <TextInput\r\n            form={form}\r\n            change={change}\r\n            name={`${prefix}nric`}\r\n            placeholderString=\"\"\r\n            size=\"medium\"\r\n            zIndex={95}\r\n            desc=\"ID Number\"\r\n            errorString={errorStringData[`${prefix}nric`]}\r\n            validateForm={() => this.validateForm(storeForm)}\r\n            toUpper\r\n          />\r\n        </Col>\r\n        {this.renderCenterPortion()}\r\n        {this.renderOccupationIndustry()}\r\n        {this.renderPostalMobile()}\r\n        {this.renderEducation()}\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  renderInner() {\r\n    const { tabs } = this.state;\r\n\r\n    if (!tabs) {\r\n      return this.renderForm();\r\n    }\r\n\r\n    return (\r\n      <TabView\r\n        maxTabWidthPx={128}\r\n        ref={node => this.tabView = node}\r\n        className=\"tabview-margin-top\"\r\n        tabs={tabs}\r\n        isDataFadeOnly\r\n        name=\"pa-detail-tab\"\r\n      >\r\n        {this.renderForm()}\r\n      </TabView>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errorString } = this.state;\r\n    const {\r\n      form,\r\n      change,\r\n      planDetails,\r\n      isLoggedIn,\r\n      piggyCallback,\r\n      changePlan,\r\n    } = this.props;\r\n\r\n    return (\r\n      <DetailForm\r\n        category=\"pa\"\r\n        changePlan={changePlan}\r\n        handleSubmit={this.props.handleSubmit}\r\n        onSubmit={this.handleSubmit}\r\n        change={change}\r\n        form={form}\r\n        planDetails={planDetails}\r\n        isLoggedIn={isLoggedIn}\r\n        piggyCallback={piggyCallback}\r\n        errorArray={errorString}\r\n      >\r\n        {this.renderInner()}\r\n      </DetailForm>\r\n    );\r\n  }\r\n}\r\n\r\nPADetail.defaultProps = {\r\n  storeForm: null,\r\n};\r\n\r\nPADetail.propTypes = {\r\n  paForm: PropTypes.object.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  submitCallback: PropTypes.func.isRequired,\r\n  form: PropTypes.string.isRequired,\r\n  change: PropTypes.func.isRequired,\r\n  planDetails: PropTypes.object.isRequired,\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  piggyCallback: PropTypes.func.isRequired,\r\n  changePlan: PropTypes.func.isRequired,\r\n  constants: PropTypes.object.isRequired,\r\n  storeForm: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  storeForm: getFormValues(formName)(state),\r\n  constants: state.insurance.constants,\r\n});\r\n\r\nexport default reduxForm({\r\n  form: formName,\r\n  destroyOnUnmount: false,\r\n})(connect(mapStateToProps)(PADetail));\r\n","/**\r\n * PADetailContainer.js\r\n * The Detail container for PA\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getFormValues } from 'redux-form';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Import Insurer Logos\r\nimport Logos from 'assets/images/InsurerLogos';\r\n\r\nimport PADetail from '../../components/PA/PADetail';\r\nimport { setInsuranceFormState, FORMSTATES } from '../../actions/insuranceActions';\r\nimport { gaTag, gaEvent, ampTag } from '../../lib/tagFunctions';\r\n\r\nclass PADetailContainer extends Component {\r\n  componentDidMount() {\r\n    const { setFormState } = this.props;\r\n    setFormState(FORMSTATES.DETAILFORM.index);\r\n    gaTag({\r\n      page_title: 'PersonalAccident - Detail Form',\r\n      page_path: '/personal-accident/detailform',\r\n    });\r\n    ampTag('PADetailsS');\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      plansData,\r\n      isLoggedIn,\r\n      setFormState,\r\n      profileValues,\r\n      piggyCallback,\r\n      paForm,\r\n      history,\r\n    } = this.props;\r\n\r\n    const selectedData = plansData;\r\n\r\n    let planDetails = {\r\n      logo: Logos.others,\r\n      logoDesc: '',\r\n      planName: '',\r\n      planTotal: null,\r\n    };\r\n\r\n    try {\r\n      planDetails = {\r\n        logo: Logos[selectedData.info.insurer_slug],\r\n        logoDesc: `${selectedData.info.insurer_name}.svg`,\r\n        planName: selectedData.info.product_name,\r\n        planTotal: `$${selectedData.policyInfo[selectedData.planType].net_price.toFixed(2)}`,\r\n      };\r\n    } catch (error) {\r\n      console.log('Get plan details failed');\r\n    }\r\n\r\n    return (\r\n      <PADetail\r\n        paForm={paForm}\r\n        selectedData={selectedData}\r\n        planDetails={planDetails}\r\n        isLoggedIn={isLoggedIn}\r\n        piggyCallback={piggyCallback}\r\n        changePlan={() => {\r\n          history.goBack();\r\n          gaEvent('PersonalAccident - DetailForm - ChangePlan', {\r\n            event_category: 'PersonalAccident',\r\n            event_label: 'PersonalAccident - DetailForm - ChangePlan',\r\n          });\r\n        }}\r\n        profileValues={profileValues}\r\n        submitCallback={() => {\r\n          setFormState(FORMSTATES.CHECKOUT.index);\r\n          history.push(`/personal-accident${FORMSTATES.CHECKOUT.path}`);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPADetailContainer.defaultProps = {\r\n};\r\n\r\nPADetailContainer.propTypes = {\r\n  plansData: PropTypes.object.isRequired,\r\n  piggyCallback: PropTypes.func.isRequired,\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  setFormState: PropTypes.func.isRequired,\r\n  profileValues: PropTypes.object.isRequired,\r\n  paForm: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  paForm: getFormValues('pa')(state),\r\n  profileValues: state.userDetails,\r\n  plansData: state.pa.selectedPlanData,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFormState: (state) => {\r\n    dispatch(setInsuranceFormState(state));\r\n  },\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PADetailContainer));\r\n","/**\r\n * PARouteContainer.js\r\n * The wrapper container for PA\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport _ from 'lodash';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { connect } from 'react-redux';\r\nimport { change, reset } from 'redux-form';\r\nimport { /* Prompt, */ withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { resetCompare } from '../../actions/compareActions';\r\nimport { getPromoGiveaways, resetInsuranceForm, FORMSTATES } from '../../actions/insuranceActions';\r\nimport { clearPAData } from '../../actions/paActions';\r\nimport { isProduction } from '../../lib/tagFunctions';\r\n\r\nimport StepProgressBar from '../../components/Templates/StepProgressBar/StepProgressBar';\r\nimport RefreshTimer from '../../components/Templates/RefreshTimer/RefreshTimer';\r\n\r\nimport PAMainContainer from './PAMainContainer';\r\nimport PAChoosePlanContainer from './PAChoosePlanContainer';\r\nimport PADetailContainer from './PADetailContainer';\r\nimport PACheckoutContainer from './PACheckoutContainer';\r\n\r\nimport { dateToStoreString } from '../../lib/dateFunctions';\r\nimport { routeHandler } from '../../lib/helperFunctions';\r\n\r\nconst form = 'pa';\r\nconst detailFormName = 'pa-detail';\r\n\r\nclass PetRouteContainer extends Component {\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const { formIndex, isMounted } = prevState;\r\n    const { formState, match, history } = nextProps;\r\n\r\n    if (isMounted) {\r\n      const routeResult = routeHandler('personal-accident', formState, formIndex, match, history);\r\n      if (routeResult && routeResult.formIndex !== null) {\r\n        return ({\r\n          formIndex: routeResult.formIndex,\r\n        });\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {\r\n      resetStoreForm,\r\n      paPromoGiveAway,\r\n      clearData,\r\n      history,\r\n    } = this.props;\r\n\r\n    this.state = {\r\n      formIndex: 0,\r\n    };\r\n\r\n    history.replace(`/personal-accident${history.location.search}`);\r\n\r\n    clearData();\r\n    this.props.resetCompare();\r\n    this.props.resetInsuranceForm();\r\n\r\n    resetStoreForm('pa');\r\n    resetStoreForm('pa-detail');\r\n\r\n    if (paPromoGiveAway === undefined) {\r\n      this.props.getPromoGiveaways();\r\n    }\r\n\r\n    this.setInitialFormState = this.setInitialFormState.bind(this);\r\n    this.renderStepProgress = this.renderStepProgress.bind(this);\r\n    this.renderPAForms = this.renderPAForms.bind(this);\r\n    this.changeUserDetails = this.changeUserDetails.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // window.addEventListener('beforeunload', this.handleLeavePage);\r\n    this.setInitialFormState();\r\n    this.setState({\r\n      // eslint-disable-next-line\r\n      isMounted: true,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { clearData, resetStoreForm } = this.props;\r\n    clearData();\r\n    this.props.resetCompare();\r\n    this.props.resetInsuranceForm();\r\n\r\n    resetStoreForm('pa');\r\n    resetStoreForm('pa-detail');\r\n  }\r\n\r\n  setInitialFormState() {\r\n    const { changeForm } = this.props;\r\n\r\n    const startDate = new Date();\r\n    startDate.setDate(startDate.getDate() + 1);\r\n\r\n    changeForm(form, 'my_occupation', 'Accountant');\r\n    changeForm(form, 'start_date', dateToStoreString(startDate));\r\n\r\n    this.changeUserDetails();\r\n  }\r\n\r\n  changeUserDetails() {\r\n    const { userDetails, changeForm } = this.props;\r\n\r\n    if (userDetails) {\r\n      const surname = userDetails && userDetails.surname ? userDetails.surname : '';\r\n      const firstname = userDetails && userDetails.firstName ? ` ${userDetails.firstName}` : '';\r\n\r\n      changeForm(detailFormName, 'email', userDetails.email);\r\n      changeForm(detailFormName, 'name', `${surname}${firstname}`);\r\n      changeForm(detailFormName, 'nationality', userDetails.nationality);\r\n      changeForm(detailFormName, 'id_type', userDetails.id_type);\r\n      changeForm(detailFormName, 'nric', userDetails.nric);\r\n      changeForm(detailFormName, 'race', userDetails.race);\r\n      changeForm(detailFormName, 'gender', _.startCase(userDetails.gender));\r\n      changeForm(detailFormName, 'birth_date', userDetails.dateOfBirth);\r\n      changeForm(detailFormName, 'marital_status', _.startCase(userDetails.marital_status));\r\n      changeForm(detailFormName, 'occupation', userDetails.occupation);\r\n      changeForm(detailFormName, 'mobile_number', userDetails.contact);\r\n      changeForm(detailFormName, 'postal', userDetails.postal_code);\r\n    }\r\n  }\r\n\r\n  renderStepProgress() {\r\n    const { formIndex } = this.state;\r\n    const { charged } = this.props;\r\n    return (\r\n      <StepProgressBar\r\n        maxWidth=\"556px\"\r\n        formState={formIndex}\r\n        inputList={[\r\n          'Choose Plan',\r\n          'Details',\r\n          'Checkout',\r\n        ]}\r\n        form=\"pa\"\r\n        stateList={[\r\n          FORMSTATES.CHOOSEPLAN,\r\n          FORMSTATES.DETAILFORM,\r\n          FORMSTATES.CHECKOUT,\r\n        ]}\r\n        stateDescriptions={[\r\n          { main: ''/* , 'Choose your Plan', sub: 'Compare price plans from multiple companies' */ },\r\n          { main: 'Details' },\r\n          { main: 'Checkout' },\r\n        ]}\r\n        charged={charged}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderPAForms() {\r\n    const { formIndex } = this.state;\r\n    const {\r\n      userDetails,\r\n      charged,\r\n    } = this.props;\r\n\r\n    const isLoggedIn = !_.isEmpty(userDetails);\r\n\r\n\r\n    switch (formIndex) {\r\n      case FORMSTATES.CHOOSEPLAN.index:\r\n        return <PAChoosePlanContainer isLoggedIn={isLoggedIn} />;\r\n      case FORMSTATES.DETAILFORM.index:\r\n        return (\r\n          <PADetailContainer\r\n            isLoggedIn={isLoggedIn}\r\n            piggyCallback={this.changeUserDetails}\r\n          />\r\n        );\r\n      case FORMSTATES.CHECKOUT.index:\r\n      case FORMSTATES.SUBMITTED.index:\r\n        return <PACheckoutContainer isLoggedIn={isLoggedIn} charged={charged} />;\r\n      default:\r\n        return <PAMainContainer isLoggedIn={isLoggedIn} />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { paPromoGiveAway, constants } = this.props;\r\n\r\n    if (!constants || paPromoGiveAway === undefined) {\r\n      return null;\r\n    }\r\n\r\n    const meta = isProduction ? 'PolicyPal, personal accident insurance, singapore personal accident Insurance, PA insurance, accident insurance, accident insurance singapore, personal accident' : '';\r\n    return (\r\n      <Fragment>\r\n        <Helmet>\r\n          <meta name=\"keywords\" content={meta} />\r\n          <title>PolicyPal 2.0 - Personal Accident Insurance</title>\r\n          <meta name=\"title\" content=\"PolicyPal 2.0 - Personal Accident Insurance\" />\r\n          <meta name=\"description\" content=\"Browse products for personal accident insurance.\" />\r\n        </Helmet>\r\n        {/* {\r\n          formState !== FORMSTATES.MAIN ?\r\n            <Prompt\r\n              when={true}\r\n              message=\"Are you sure you want to leave current page?\"\r\n            />\r\n          :\r\n            null\r\n        } */}\r\n        {this.renderStepProgress()}\r\n        {this.renderPAForms()}\r\n        <RefreshTimer ref={(node) => {\r\n            if (!this.refresher) {\r\n              node.invokeNewTimer();\r\n            }\r\n            this.refresher = node;\r\n          }}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPetRouteContainer.defaultProps = {\r\n  userDetails: null,\r\n  charged: null,\r\n  paPromoGiveAway: undefined,\r\n  constants: null,\r\n};\r\n\r\nPetRouteContainer.propTypes = {\r\n  clearData: PropTypes.func.isRequired,\r\n  resetCompare: PropTypes.func.isRequired,\r\n  getPromoGiveaways: PropTypes.func.isRequired,\r\n  resetInsuranceForm: PropTypes.func.isRequired,\r\n  changeForm: PropTypes.func.isRequired,\r\n  resetStoreForm: PropTypes.func.isRequired,\r\n  userDetails: PropTypes.object,\r\n  formState: PropTypes.number.isRequired,\r\n  charged: PropTypes.bool,\r\n  paPromoGiveAway: PropTypes.object,\r\n  constants: PropTypes.object,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  paPromoGiveAway: state.insurance.promoGiveaways.pa,\r\n  formState: state.insurance.formState,\r\n  constants: state.insurance.constants,\r\n  charged: state.insurance.charged,\r\n  userDetails: state.userDetails.data,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeForm: (form, key, value) => (\r\n    dispatch(change(form, key, value))\r\n  ),\r\n  resetInsuranceForm: () => (\r\n    dispatch(resetInsuranceForm())\r\n  ),\r\n  resetStoreForm: form => (\r\n    dispatch(reset(form))\r\n  ),\r\n  getPromoGiveaways: () => {\r\n    dispatch(getPromoGiveaways('pa'));\r\n  },\r\n  resetCompare: () => {\r\n    dispatch(resetCompare());\r\n  },\r\n  clearData: () => {\r\n    dispatch(clearPAData());\r\n  },\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PetRouteContainer));\r\n","module.exports = __webpack_public_path__ + \"static/media/Avatar.95378d46.svg\";","/**\r\n * MultiCompareInner.js\r\n * Multi Compare view with different insurers\r\n * Contains the main policy type tab view logic\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport _ from 'lodash';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Row } from 'reactstrap';\r\n\r\nimport TabView from '../../Templates/TabView/TabView';\r\nimport CompareView from '../../Templates/CompareView/CompareView';\r\nimport ChangeInitialFormData from '../../Templates/ChangeInitialFormData/ChangeInitialFormData';\r\n\r\nimport Enquiry from '../../Templates/Enquiry/Enquiry';\r\n\r\nimport { setPlanType, setSelectedIndex } from '../../../actions/compareActions';\r\n\r\n// The default tabs array\r\nconst resultToMatch = ['basic', 'essential', 'elite', 'default'];\r\n\r\nclass MultiCompareInner extends Component {\r\n  /**\r\n   * Lifecycle Method - getDerivedStateFromProps\r\n   */\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    // Goes here first before did mount\r\n    // Get new policy available policy types\r\n    if (nextProps.data.policyTypes !== prevState.policyTypes) {\r\n      return ({\r\n        policyTypes: nextProps.data.policyTypes,\r\n      });\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Lifecycle Method - constructor\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { data } = this.props;\r\n    // tabIndex - The current tab index in effect\r\n    // currentTab - The name of the current tab\r\n    // tabs - The tabs array data\r\n    // policyTypes - The possible policy types to display\r\n    this.state = {\r\n      tabIndex: 0,\r\n      currentTab: null,\r\n      tabs: null,\r\n      policyTypes: data.policyTypes,\r\n    };\r\n\r\n    this.handleTabClick = this.handleTabClick.bind(this);\r\n    this.renderTabs = this.renderTabs.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Lifecycle Method - componentDidMount\r\n   */\r\n  componentDidMount() {\r\n    // Render inital tabs\r\n    const tabs = this.renderTabs(null, true);\r\n    // Set initial plan type\r\n    this.props.setPlanType(_.lowerCase(tabs.currentTab));\r\n  }\r\n\r\n  /**\r\n   * Lifecycle Method - shouldComponentUpdate\r\n   */\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    const { policyTypes, tabs, currentTab } = this.state;\r\n    const { data } = this.props;\r\n\r\n    // Render new tabs if policy types are changed\r\n    if (!_.isEqual(policyTypes, nextState.policyTypes)) {\r\n      this.renderTabs(nextState.policyTypes);\r\n    }\r\n\r\n    // Update only when tabs or data are updated\r\n    return tabs !== nextState.tabs ||\r\n          currentTab !== nextState.currentTab ||\r\n          data !== nextProps.data;\r\n  }\r\n\r\n  /**\r\n   * Lifecycle Method - componentDidUpdate\r\n   */\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { tabs, tabIndex } = this.state;\r\n    const { selectedIndex, initialIndex } = this.props;\r\n\r\n    // If new tabs\r\n    if (tabs !== prevState.tabs) {\r\n      if (this.categoryTab && this.categoryTab.wrappedInstance) {\r\n        // If using back previous selected index and not the same state as local index\r\n        const isCameFromBackButton = selectedIndex && selectedIndex !== tabIndex;\r\n        // If this is the first time user enter compare view\r\n        const isFirstTime = selectedIndex === null && initialIndex;\r\n\r\n        if (isCameFromBackButton || isFirstTime) {\r\n          const currIncomingIndex = isCameFromBackButton ? selectedIndex : initialIndex;\r\n          // Check if previous selected index is still within range\r\n          const tabIndexToUse = currIncomingIndex < tabs.length ? currIncomingIndex : 0;\r\n          // Go to the tab and set new state;\r\n          this.categoryTab.wrappedInstance.goToIndex(tabIndexToUse, true);\r\n          this.setState({ tabIndex: tabIndexToUse });\r\n\r\n          // Set index to store\r\n          this.props.setSelectedIndex(tabIndexToUse);\r\n          return;\r\n        }\r\n\r\n        // This happens when tabs are not the same when changing form within\r\n        // compare view. It will try to go to the last selected plan type\r\n        this.categoryTab.wrappedInstance.goToIndex(tabIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When clicked on main tabs\r\n   *\r\n   * @param {string} type - Selected plan type\r\n   * @param {number} index - Tab index\r\n   */\r\n  handleTabClick(type, index) {\r\n    // Set current plan type\r\n    this.setState({\r\n      currentTab: type,\r\n    });\r\n\r\n    this.props.setPlanType(type);\r\n    this.props.setSelectedIndex(index);\r\n  }\r\n\r\n  /**\r\n   * Render Main tabs\r\n   *\r\n   * @param {array} policyTypes - The avaliable policy types\r\n   * @param {bool} isInitial - If is initial first time load\r\n   */\r\n  renderTabs(policyTypes = null, isInitial = false) {\r\n    const { policyTypes: oldPolicyTypes, currentTab } = this.state;\r\n    const { planImages } = this.props;\r\n\r\n    // Use new policy types if avaliable\r\n    const policyTypesToUse = policyTypes || oldPolicyTypes;\r\n\r\n    // The tab index\r\n    let index = 0;\r\n\r\n    // Match possible policy types to default types,\r\n    // with positioning in consideration\r\n    const tabs = _.reduce(resultToMatch, (result, type) => {\r\n      if (_.findIndex(policyTypesToUse, planType => planType === type) !== -1) {\r\n        const theIndex = index;\r\n        const image = planImages ? planImages[type] : null;\r\n        // Set desc, image, and onClick for the tab\r\n        result.push({\r\n          desc: _.startCase(type),\r\n          img: image,\r\n          onClick: () => {\r\n            this.handleTabClick(type, theIndex);\r\n          },\r\n        });\r\n        index += 1;\r\n      }\r\n      return result;\r\n    }, []);\r\n\r\n    // Default currenTab name is from first item\r\n    let tabInfo = { currentTab: _.lowerCase(tabs[0].desc) };\r\n\r\n    // If tabs is changed while navigating in compare view\r\n    if (!isInitial) {\r\n      // Try to find if the old tab name still exists in new one\r\n      const currentTabIndex = _.findIndex(tabs, tab => _.lowerCase(tab.desc) === currentTab);\r\n      // Use 0 if no longer exists\r\n      const tabIndexToUse = currentTabIndex !== -1 ? currentTabIndex : 0;\r\n      // New tab\r\n      const newTab = _.lowerCase(tabs[tabIndexToUse].desc);\r\n      // Set new tab info\r\n      tabInfo = {\r\n        tabIndex: tabIndexToUse,\r\n        currentTab: newTab,\r\n      };\r\n\r\n      // Set store data\r\n      this.props.setPlanType(newTab);\r\n      this.props.setSelectedIndex(tabIndexToUse);\r\n    }\r\n\r\n    // Return tabs\r\n    const result = {\r\n      ...tabInfo,\r\n      tabs,\r\n    };\r\n\r\n    this.setState(result);\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Render\r\n   */\r\n  render() {\r\n    const {\r\n      currentTab,\r\n      tabs,\r\n    } = this.state;\r\n\r\n    const {\r\n      data,\r\n      scrollPopUpCallback,\r\n      submitCallback,\r\n      editForm,\r\n      form,\r\n      buttonDesc,\r\n      forceFixedOnDesktop,\r\n      category,\r\n    } = this.props;\r\n\r\n    // console.log(plansData);\r\n    if (!data || !tabs || !currentTab) {\r\n      return null;\r\n    }\r\n\r\n    const tabStyle = currentTab === 'default' ? 'inner-form-no-tabs' : '';\r\n\r\n    return (\r\n      <Fragment>\r\n        <Row className={`inner-form-container ${tabStyle} inner-form-extra-padding`} noGutters>\r\n          <TabView\r\n            tabs={tabs}\r\n            isDataFadeOnly\r\n            isDisableDropdown\r\n            big\r\n            name={`${form}-tab`}\r\n            ref={node => this.categoryTab = node}\r\n          >\r\n            {[<CompareView\r\n              category={category}\r\n              key=\"overview\"\r\n              className=\"overview-container-padding\"\r\n              notAccordion\r\n              data={data}\r\n              currentTab={currentTab}\r\n              scrollPopUpCallback={scrollPopUpCallback}\r\n              productChangable\r\n              editForm={\r\n                <ChangeInitialFormData\r\n                  submitCallback={submitCallback}\r\n                  form={form}\r\n                  headerValue={editForm.headerValue}\r\n                  valuesToListen={editForm.valuesToListen}\r\n                  conditions={editForm.conditions}\r\n                >\r\n                  {editForm.editDetail}\r\n                </ChangeInitialFormData>\r\n              }\r\n              buttonDesc={buttonDesc}\r\n              forceFixedOnDesktop={forceFixedOnDesktop}\r\n            />]}\r\n          </TabView>\r\n          <Enquiry />\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nMultiCompareInner.defaultProps = {\r\n  initialIndex: 0,\r\n  selectedIndex: null,\r\n  data: null,\r\n  planImages: null,\r\n  buttonDesc: null,\r\n  forceFixedOnDesktop: false,\r\n  category: null,\r\n};\r\n\r\nMultiCompareInner.propTypes = {\r\n  initialIndex: PropTypes.number,\r\n  selectedIndex: PropTypes.number,\r\n  setSelectedIndex: PropTypes.func.isRequired,\r\n  setPlanType: PropTypes.func.isRequired,\r\n  data: PropTypes.object,\r\n  planImages: PropTypes.object,\r\n  scrollPopUpCallback: PropTypes.func.isRequired,\r\n  submitCallback: PropTypes.func.isRequired,\r\n  editForm: PropTypes.object.isRequired,\r\n  form: PropTypes.string.isRequired,\r\n  buttonDesc: PropTypes.string,\r\n  forceFixedOnDesktop: PropTypes.bool,\r\n  category: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedIndex: state.compare.selectedIndex,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setSelectedIndex: (index) => {\r\n    dispatch(setSelectedIndex(index));\r\n  },\r\n  setPlanType: (type) => {\r\n    dispatch(setPlanType(type));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MultiCompareInner);\r\n","/**\r\n * MultiCompareView.js\r\n * Multi Compare view with different insurers\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { parseData } from '../../../actions/insuranceActions';\r\nimport { setSelectedInsurers } from '../../../actions/compareActions';\r\nimport { setLoading, clearLoading } from '../../../actions/loadingScreenActions';\r\nimport { setRestrictionPopup } from '../../../actions/restrictionsActions';\r\nimport MultiCompareInner from './MultiCompareInner';\r\n\r\nclass MultiCompareView extends Component {\r\n  /**\r\n   * Lifecycle Method - getDerivedStateFromProps\r\n   */\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    try {\r\n      const {\r\n        currentInsurers,\r\n      } = prevState;\r\n\r\n      const {\r\n        plansData,\r\n        validInsurersList,\r\n        setFormState,\r\n        loadingEnd,\r\n        mainForm,\r\n        setSelectedPlanData,\r\n        trackingTags,\r\n      } = nextProps;\r\n\r\n      if (plansData && plansData[0] === 'INVALID') {\r\n        return null;\r\n      }\r\n\r\n      // If plansData and validInsurersList are retrieved, parse data for display\r\n      if (validInsurersList && plansData) {\r\n        let newDefaultInsurers = currentInsurers || {};\r\n        if (!currentInsurers && plansData) {\r\n          newDefaultInsurers = _.map(plansData, plan => plan.info.insurer_slug);\r\n          newDefaultInsurers = newDefaultInsurers.slice(0, 3);\r\n          nextProps.setSelectedInsurers(newDefaultInsurers);\r\n        }\r\n\r\n        return {\r\n          parsedData: parseData(\r\n            plansData,\r\n            validInsurersList,\r\n            newDefaultInsurers,\r\n            mainForm.trip_type,\r\n            () => {\r\n              setFormState();\r\n            },\r\n            setSelectedPlanData,\r\n            loadingEnd,\r\n            nextProps.setRestrictionPopup,\r\n            null,\r\n            trackingTags,\r\n          ),\r\n          currentInsurers: newDefaultInsurers,\r\n        };\r\n      }\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Lifecycle Method - constructor\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {\r\n      mainForm,\r\n      parseForm,\r\n      getPlans,\r\n      getInsurersList,\r\n      loading,\r\n      defaultInsurers,\r\n      plansData,\r\n      validInsurersList,\r\n      selectedInsurers,\r\n      setSelectedPlanData,\r\n      loadingEnd,\r\n      setFormState,\r\n      loadingFailBackState,\r\n      clearData,\r\n      trackingTags,\r\n    } = this.props;\r\n\r\n    try {\r\n      // If fresh init\r\n      if (!plansData || !validInsurersList) {\r\n        // Initally, get the params from mainform and default insurers\r\n        const parsedParams = parseForm(mainForm, defaultInsurers);\r\n\r\n        // Set loading\r\n        loading(() => {\r\n          clearData();\r\n          loadingFailBackState();\r\n        }, 'No available plans found.', 30000, '');\r\n\r\n        // Get plans and valid insurers list\r\n        getPlans(parsedParams);\r\n        getInsurersList(parsedParams);\r\n\r\n        // Set initial default insurers\r\n        this.props.setSelectedInsurers(defaultInsurers);\r\n\r\n        // currentInsurers: Current selected list of insurers\r\n        // parsedData: The parsed data to display\r\n        // hoveredIndex: The current hovered index on the insurer selection dropdown, default is 0\r\n        this.state = {\r\n          currentInsurers: defaultInsurers,\r\n          parsedData: null,\r\n        };\r\n      } else {\r\n        // Set existing selected insurers and get old parsed data\r\n        // (Will reach this condition when using the back button)\r\n        this.state = {\r\n          currentInsurers: selectedInsurers,\r\n          parsedData: parseData(\r\n            plansData,\r\n            validInsurersList,\r\n            selectedInsurers,\r\n            mainForm.trip_type,\r\n            () => setFormState(),\r\n            setSelectedPlanData,\r\n            loadingEnd,\r\n            this.props.setRestrictionPopup,\r\n            null,\r\n            trackingTags,\r\n          ),\r\n        };\r\n      }\r\n    } catch (error) {\r\n      // eslint-disable-next-line\r\n    }\r\n\r\n    this.getNewData = this.getNewData.bind(this);\r\n    this.onInsurerClick = this.onInsurerClick.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {\r\n      plansData,\r\n      loadingEnd,\r\n      loading,\r\n      clearData,\r\n      loadingFailBackState,\r\n    } = this.props;\r\n\r\n    if (plansData && plansData[0] === 'INVALID') {\r\n      loadingEnd();\r\n      if (!this.isLoading) {\r\n        this.isLoading = true;\r\n        setTimeout(() =>\r\n          loading(() => {\r\n            clearData();\r\n            loadingFailBackState();\r\n            this.isLoading = false;\r\n          }, 'No available plans found.', 50, ''), 500);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Lifecycle Method - shouldComponentUpdate\r\n   */\r\n  /* shouldComponentUpdate(nextProps, nextState) {\r\n    const { parsedData } = this.state;\r\n\r\n    // Render only is new or policyTypes changed\r\n    return !(parsedData && nextState.parsedData) ||\r\n          !_.isEqual(parsedData.policyTypes, nextState.parsedData.policyTypes);\r\n  } */\r\n\r\n  /**\r\n   * Handle selection on insurer list\r\n   *\r\n   * @param {object} data - The insurer list item data\r\n   */\r\n  onInsurerClick(data, hoveredIndex) {\r\n    // parsedData: The parsed data to display\r\n    const { parsedData } = this.state;\r\n\r\n    // Remap current insurers as sometimes when change form data, the insurers\r\n    // can be less than 3.\r\n    // console.log(parsedData.selectedInsurers, hoveredIndex);\r\n    const currentInsurers = _.reduce(parsedData.selectedInsurers, (result, insurer) => {\r\n      if (insurer) {\r\n        result.push(insurer.insurerSlug);\r\n      }\r\n      return result;\r\n    }, []);\r\n\r\n    // Change insurer of current selected position\r\n    currentInsurers[hoveredIndex] = data.insurer_slug;\r\n\r\n    // Set current insurers\r\n    this.setState({\r\n      currentInsurers,\r\n    });\r\n\r\n    // Set current insurers in store\r\n    this.props.setSelectedInsurers(currentInsurers);\r\n\r\n    // Get new compare data based on the new selected insurers\r\n    this.getNewData(currentInsurers);\r\n  }\r\n\r\n  /**\r\n   * Get new compare data.\r\n   * Used when changing insurers or changing form fields.\r\n   *\r\n   * @param {array} incomingInsurers - selected insurers\r\n   */\r\n  getNewData(incomingInsurers = null) {\r\n    const { currentInsurers } = this.state;\r\n    const {\r\n      loading,\r\n      getPlans,\r\n      getInsurersList,\r\n      clearData,\r\n      mainForm,\r\n      parseForm,\r\n      loadingFailBackState,\r\n    } = this.props;\r\n\r\n    // If init, use default, else the current array\r\n    const insurerToUse = incomingInsurers || currentInsurers;\r\n    // Parse the form for params\r\n    const parsedParams = parseForm(mainForm, insurerToUse);\r\n    // Clear data in store first, so it will detect as fresh props from store\r\n    clearData();\r\n    // Set loading screen\r\n    loading(() => {\r\n      clearData();\r\n      loadingFailBackState();\r\n    }, 'No available plans found.', 30000, '');\r\n    // Get plans and insurer lists\r\n    getPlans(parsedParams);\r\n    getInsurersList(parsedParams);\r\n  }\r\n\r\n  /**\r\n   * Render\r\n   */\r\n  render() {\r\n    try {\r\n      const { parsedData } = this.state;\r\n      const {\r\n        editForm,\r\n        form,\r\n        planImages,\r\n        initialIndex,\r\n        buttonDesc,\r\n        forceFixedOnDesktop,\r\n        category,\r\n      } = this.props;\r\n\r\n      // Do not render if no data\r\n      if (!parsedData) {\r\n        return null;\r\n      }\r\n\r\n      // console.log(parsedData);\r\n      return (\r\n        <MultiCompareInner\r\n          category={category}\r\n          initialIndex={initialIndex}\r\n          planImages={planImages}\r\n          data={parsedData}\r\n          form={form}\r\n          editForm={editForm}\r\n          scrollPopUpCallback={this.onInsurerClick}\r\n          submitCallback={this.getNewData}\r\n          buttonDesc={buttonDesc}\r\n          forceFixedOnDesktop={forceFixedOnDesktop}\r\n        />\r\n      );\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nMultiCompareView.defaultProps = {\r\n  initialIndex: 0,\r\n  plansData: null,\r\n  validInsurersList: null,\r\n  selectedInsurers: null,\r\n  trackingTags: null,\r\n  planImages: null,\r\n  defaultInsurers: null,\r\n  buttonDesc: null,\r\n  forceFixedOnDesktop: false,\r\n  category: null,\r\n};\r\n\r\nMultiCompareView.propTypes = {\r\n  setSelectedInsurers: PropTypes.func.isRequired,\r\n  mainForm: PropTypes.object.isRequired,\r\n  parseForm: PropTypes.func.isRequired,\r\n  getPlans: PropTypes.func.isRequired,\r\n  getInsurersList: PropTypes.func.isRequired,\r\n  clearData: PropTypes.func.isRequired,\r\n  loading: PropTypes.func.isRequired,\r\n  defaultInsurers: PropTypes.array,\r\n  editForm: PropTypes.object.isRequired,\r\n  form: PropTypes.string.isRequired,\r\n  planImages: PropTypes.object,\r\n  initialIndex: PropTypes.number,\r\n  plansData: PropTypes.array,\r\n  validInsurersList: PropTypes.array,\r\n  selectedInsurers: PropTypes.array,\r\n  setSelectedPlanData: PropTypes.func.isRequired,\r\n  loadingEnd: PropTypes.func.isRequired,\r\n  setFormState: PropTypes.func.isRequired,\r\n  setRestrictionPopup: PropTypes.func.isRequired,\r\n  loadingFailBackState: PropTypes.func.isRequired,\r\n  trackingTags: PropTypes.object,\r\n  buttonDesc: PropTypes.string,\r\n  forceFixedOnDesktop: PropTypes.bool,\r\n  category: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedInsurers: state.compare.selectedInsurers,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loading: (callBack, errorMsg, time, mainMsg) => {\r\n    dispatch(setLoading(callBack, errorMsg, time, mainMsg));\r\n  },\r\n  loadingEnd: () => {\r\n    dispatch(clearLoading());\r\n  },\r\n  setRestrictionPopup: (data) => {\r\n    dispatch(setRestrictionPopup(data));\r\n  },\r\n  setSelectedInsurers: (array) => {\r\n    dispatch(setSelectedInsurers(array));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MultiCompareView);\r\n","/**\r\n * Spinner.js\r\n * Custom Spinner\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, getFormValues } from 'redux-form';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Plus from 'assets/images/forms/plus.svg';\r\nimport Minus from 'assets/images/forms/minus.svg';\r\n\r\nimport FormInputWrapper from '../FormInputWrapper/FormInputWrapper';\r\n\r\nimport './Spinner.scss';\r\n\r\n/**\r\n * Custom Button class\r\n */\r\nclass Spinner extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { initial } = this.props;\r\n\r\n    this.state = {\r\n      oldValue: initial,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleOnInputKeyDown = this.handleOnInputKeyDown.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      name,\r\n      formStore,\r\n      change,\r\n      initial,\r\n    } = this.props;\r\n\r\n    if (!(formStore && formStore[name])) {\r\n      change(name, initial);\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      oldValue: formStore[name],\r\n    });\r\n  }\r\n\r\n  handleChange(event, isMinus) {\r\n    const { oldValue } = this.state;\r\n    const {\r\n      max,\r\n      min,\r\n      name,\r\n      increment,\r\n      change,\r\n    } = this.props;\r\n\r\n    const newVal = isMinus ? Math.max(oldValue - increment, min) :\r\n      Math.min(oldValue + increment, max);\r\n\r\n    this.setState({\r\n      oldValue: newVal,\r\n    });\r\n\r\n    change(name, newVal);\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleOnInputKeyDown(event) {\r\n    if (event.keyCode === 13) {\r\n      this.handleInputChange();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  handleInputChange() {\r\n    const { oldValue } = this.state;\r\n\r\n    const {\r\n      min,\r\n      max,\r\n      name,\r\n      change,\r\n    } = this.props;\r\n\r\n    const newVal = Math.floor(this.inputField.value);\r\n    if (!Number.isNaN(newVal) && min <= newVal && newVal <= max) {\r\n      change(name, newVal);\r\n    } else {\r\n      change(name, oldValue);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      unit,\r\n      desc,\r\n      extraInfo,\r\n      errorString,\r\n      disableTyping,\r\n    } = this.props;\r\n\r\n    const errorStyle = errorString ? 'error' : '';\r\n\r\n    return (\r\n      <FormInputWrapper\r\n        desc={desc}\r\n        ref={node => (this.formParent = node)}\r\n        extraInfo={extraInfo}\r\n        errorString={errorString}\r\n      >\r\n        <div\r\n          className={`spinner-container ${errorStyle}`}\r\n          tabIndex={0}\r\n          role=\"button\"\r\n        >\r\n          <button\r\n            onClick={event => this.handleChange(event, true)}\r\n            tabIndex={-1}\r\n          >\r\n            <img src={Minus} alt=\"minus.svg\" />\r\n          </button>\r\n          <div\r\n            className=\"inner-container\"\r\n            onBlur={this.handleInputChange}\r\n          >\r\n            <Field\r\n              disabled={disableTyping}\r\n              name={name}\r\n              component=\"input\"\r\n              size=\"3\"\r\n              tabIndex={-1}\r\n              onKeyDown={event => this.handleOnInputKeyDown(event)}\r\n              ref={node => (this.inputField = node)}\r\n            />\r\n            <div className=\"unit-container\">\r\n              <p>{unit}</p>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={event => this.handleChange(event, false)}\r\n            tabIndex={-1}\r\n          >\r\n            <img src={Plus} alt=\"plus.svg\" />\r\n          </button>\r\n        </div>\r\n      </FormInputWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nSpinner.defaultProps = {\r\n  unit: '',\r\n  desc: null,\r\n  formStore: null,\r\n  extraInfo: null,\r\n  errorString: null,\r\n  disableTyping: false,\r\n};\r\n\r\n\r\nSpinner.propTypes = {\r\n  initial: PropTypes.number.isRequired,\r\n  max: PropTypes.number.isRequired,\r\n  min: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  increment: PropTypes.number.isRequired,\r\n  change: PropTypes.func.isRequired,\r\n  unit: PropTypes.string,\r\n  desc: PropTypes.string,\r\n  formStore: PropTypes.object,\r\n  extraInfo: PropTypes.object,\r\n  errorString: PropTypes.string,\r\n  disableTyping: PropTypes.bool,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  formStore: (getFormValues(ownProps.form)(state)),\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Spinner);\r\n","module.exports = __webpack_public_path__ + \"static/media/Chest.8227fdb0.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.4bbd1648.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus.ac7f9d33.svg\";","/**\r\n * PACheckoutContainer.js\r\n * Checkout Container for PA\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getFormValues } from 'redux-form';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getSessionParams } from '../../actions/paActions';\r\nimport { setInsuranceFormState, FORMSTATES } from '../../actions/insuranceActions';\r\nimport CheckoutWrapper from '../../components/Templates/Checkout/CheckoutWrapper';\r\nimport { gaTag, gaEvent, ampTag } from '../../lib/tagFunctions';\r\n\r\nimport {\r\n  compactCheckoutAttributes,\r\n  getCheckoutParamsWording,\r\n  getCheckoutHeaderDataCoverage,\r\n  getCompactSubDetails,\r\n} from '../../lib/helperFunctions';\r\n\r\nclass PACheckoutContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {\r\n      paForm,\r\n      paDetailsForm,\r\n      selectedPlanData,\r\n      isAdHoc,\r\n      adHocData,\r\n    } = this.props;\r\n\r\n    const paramsWording = getCheckoutParamsWording(\r\n      isAdHoc,\r\n      adHocData,\r\n      selectedPlanData,\r\n      () => getSessionParams(paForm, paDetailsForm, selectedPlanData),\r\n    );\r\n\r\n    const headerCoverage = getCheckoutHeaderDataCoverage('Personal Accident Insurance', isAdHoc, adHocData, selectedPlanData, paramsWording.params);\r\n    const sessionParams = isAdHoc ? adHocData.data.session_params : paramsWording.params.sessionParams.session_params;\r\n    const isSpouse = sessionParams.num_adult === '2';\r\n    let SpouseAttribute = [];\r\n    let familyMemberText = isAdHoc ? null : '1 Adult';\r\n    if (isSpouse) {\r\n      SpouseAttribute = [\r\n        { title: 'My spouse\\'s occupation', description: sessionParams.family[0].occupation },\r\n      ];\r\n      familyMemberText = '2 Adults';\r\n    }\r\n\r\n    const numChildren = isAdHoc ? null : '0';\r\n\r\n    this.state = {\r\n      headerData: headerCoverage.headerData,\r\n      mainDetails: {\r\n        title: 'Insurance',\r\n        attributes: compactCheckoutAttributes([\r\n          { title: 'Plan type', description: sessionParams.plan_type },\r\n          { title: 'Family members', description: sessionParams.family_members || familyMemberText },\r\n          { title: 'Number of children', description: sessionParams.num_children || numChildren },\r\n          { title: 'My occupation', description: sessionParams.occupation },\r\n          ...SpouseAttribute,\r\n          { title: 'Start Date', description: sessionParams.start_date },\r\n          { title: 'End Date', description: sessionParams.end_date },\r\n          // { title: 'Coverage', description: headerCoverage.coverage },\r\n        ]),\r\n      },\r\n      subDetails: this.getSubDetails(paramsWording.params.sessionParams),\r\n      ...paramsWording,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { setFormState } = this.props;\r\n    setFormState(FORMSTATES.CHECKOUT.index);\r\n\r\n    gaTag({\r\n      page_title: 'PersonalAccident - Checkout',\r\n      page_path: '/personal-accident/checkout',\r\n    });\r\n    ampTag('PAReviewS');\r\n  }\r\n\r\n  getSubDetails(sessionParams) {\r\n    const isMyself = sessionParams.session_params.plan_type === 'Myself';\r\n\r\n    const myself = getCompactSubDetails({\r\n      key: 'Myself',\r\n      leftDetail: {\r\n        title: 'Details',\r\n        attributes: compactCheckoutAttributes([\r\n          { title: 'Email', description: sessionParams.session_params.email },\r\n          { title: 'Family Name', description: sessionParams.session_params.family_name },\r\n          { title: 'Given Name', description: sessionParams.session_params.given_name },\r\n          { title: 'Full Name', description: sessionParams.session_params.full_name },\r\n          { title: 'Nationality', description: sessionParams.session_params.nationality },\r\n          { title: 'ID type', description: sessionParams.session_params.id_type },\r\n          { title: 'ID number', description: sessionParams.session_params.nric },\r\n          { title: 'Race', description: sessionParams.session_params.race },\r\n          { title: 'Gender', description: sessionParams.session_params.gender },\r\n          { title: 'Date of birth', description: sessionParams.session_params.birth_date },\r\n          { title: 'Marital Status', description: sessionParams.session_params.marital_status },\r\n          { title: 'Address', description: sessionParams.session_params.address },\r\n          { title: 'Unit no', description: sessionParams.session_params.unit_no },\r\n          { title: 'Postal', description: sessionParams.session_params.postal },\r\n          { title: 'Mobile number', description: sessionParams.session_params.mobile_number },\r\n        ]),\r\n      },\r\n      rightDetail: {\r\n        title: 'Work Details',\r\n        attributes: compactCheckoutAttributes([\r\n          { title: 'Occupation', description: sessionParams.session_params.occupation },\r\n          { title: 'Industry', description: sessionParams.session_params.industry },\r\n        ]),\r\n      },\r\n    });\r\n\r\n    const familyData = [];\r\n    if (!isMyself && sessionParams.session_params.family) {\r\n      let childCount = 1;\r\n      for (let i = 0; i < sessionParams.session_params.family.length; ++i) {\r\n        const isSpouse = i === 0 && sessionParams.session_params.num_adult === '2';\r\n        const data = sessionParams.session_params.family[i];\r\n\r\n        let rightDetail = null;\r\n        if (isSpouse) {\r\n          childCount = 0;\r\n          rightDetail = {\r\n            title: 'Work Details',\r\n            attributes: compactCheckoutAttributes([\r\n              { title: 'Occupation', description: data.occupation },\r\n              { title: 'Industry', description: data.industry },\r\n            ]),\r\n          };\r\n        } else {\r\n          rightDetail = {\r\n            title: 'Education Details',\r\n            attributes: compactCheckoutAttributes([\r\n              { title: 'Full school education', description: data.full_school_education },\r\n            ]),\r\n          };\r\n        }\r\n\r\n        const key = isSpouse ? 'Spouse' : `Children ${childCount + i}`;\r\n\r\n        familyData.push(getCompactSubDetails({\r\n          key,\r\n          leftDetail: {\r\n            title: 'Details',\r\n            attributes: compactCheckoutAttributes([\r\n              { title: 'Full Name', description: data.full_name },\r\n              { title: 'Nationality', description: data.nationality },\r\n              { title: 'ID type', description: data.id_type },\r\n              { title: 'ID number', description: data.nric },\r\n              { title: 'Relationship', description: data.relationship },\r\n              { title: 'Gender', description: data.gender },\r\n              { title: 'Date of birth', description: data.birth_date },\r\n            ]),\r\n          },\r\n          rightDetail,\r\n        }));\r\n      }\r\n    }\r\n\r\n    return [myself, ...familyData];\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      headerData,\r\n      mainDetails,\r\n      subDetails,\r\n      wording,\r\n      params,\r\n    } = this.state;\r\n\r\n    const {\r\n      isLoggedIn,\r\n      charged,\r\n      history,\r\n      isAdHoc,\r\n      adHocData,\r\n      sessionId,\r\n      setFormState,\r\n    } = this.props;\r\n\r\n    return (\r\n      <CheckoutWrapper\r\n        headerData={headerData}\r\n        mainDetails={mainDetails}\r\n        subDetails={subDetails}\r\n        sessionId={sessionId}\r\n        isLoggedIn={isLoggedIn}\r\n        charged={charged}\r\n        backToDetails={() => {\r\n          history.goBack();\r\n        }}\r\n        wording={wording}\r\n        isAdHoc={isAdHoc}\r\n        adHocData={adHocData}\r\n        params={params}\r\n        category=\"pa\"\r\n        trackingTags={{\r\n          payment: (data) => {\r\n            gaEvent('PersonalAccident - CheckoutPage_ProceedPayment', {\r\n              event_category: 'PersonalAccident',\r\n              event_label: 'PersonalAccident - CheckoutPage_ProceedPayment',\r\n            });\r\n            ampTag('PAProceedPayA', {\r\n              cashback: data.rewardsID !== null,\r\n              promo: data.promoCode !== null && data.promoCode !== '',\r\n            });\r\n          },\r\n          receipt: () => {\r\n            if (!isAdHoc) {\r\n              setFormState(FORMSTATES.SUBMITTED.index);\r\n              history.push(`/personal-accident${FORMSTATES.SUBMITTED.path}`);\r\n            }\r\n            gaTag({\r\n              page_title: 'PersonalAccident - Receipt',\r\n              page_path: '/personal-accident/Receipt',\r\n            });\r\n            ampTag('PAConfirmationS');\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPACheckoutContainer.defaultProps = {\r\n  charged: null,\r\n  sessionId: null,\r\n  adHocData: null,\r\n  isAdHoc: false,\r\n  paForm: null,\r\n  paDetailsForm: null,\r\n  selectedPlanData: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nPACheckoutContainer.propTypes = {\r\n  charged: PropTypes.bool,\r\n  sessionId: PropTypes.string,\r\n  isLoggedIn: PropTypes.bool,\r\n  paForm: PropTypes.object,\r\n  paDetailsForm: PropTypes.object,\r\n  selectedPlanData: PropTypes.object,\r\n  adHocData: PropTypes.object,\r\n  isAdHoc: PropTypes.bool,\r\n  history: PropTypes.object.isRequired,\r\n  setFormState: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const sessionId = ownProps.isAdHoc ? ownProps.sessionId : state.insurance.sessionId;\r\n\r\n  return ({\r\n    paForm: getFormValues('pa')(state),\r\n    paDetailsForm: getFormValues('pa-detail')(state),\r\n    selectedPlanData: state.pa.selectedPlanData,\r\n    sessionId,\r\n  });\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFormState: (state) => {\r\n    dispatch(setInsuranceFormState(state));\r\n  },\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PACheckoutContainer));\r\n","module.exports = __webpack_public_path__ + \"static/media/policypal-personal-accident-insurance-1.c65d56ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/policypal-personal-accident-insurance-2.d5f2f405.svg\";","module.exports = __webpack_public_path__ + \"static/media/policypal-personal-accident-insurance-3.5fb02a71.svg\";","module.exports = __webpack_public_path__ + \"static/media/Family.00371c03.svg\";","module.exports = __webpack_public_path__ + \"static/media/PABasic.e508a104.svg\";"],"sourceRoot":""}