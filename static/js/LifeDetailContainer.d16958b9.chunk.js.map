{"version":3,"sources":["components/Life/LifeDetail.js","containers/Life/LifeDetailContainer.js","assets/images/forms/arrow.svg","components/Forms/FormInputWrapper/FormInputWrapper.js","assets/images/forms/magnifyGlass.svg","assets/images/common/CheckoutComplete.svg","components/Templates/CheckoutPopup/CheckoutComplete.js","components/Templates/RedirectPopup/RedirectPopupForm.js","components/Templates/RedirectPopup/RedirectPopup.js"],"names":["LifeDetail","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","sessionId","errorStringData","errorArray","handleSubmit","bind","assertThisInitialized","validateForm","nextProps","prevState","_this2","loadingEnd","setTimeout","checkoutComplete","openCheckoutComplete","ampTag","e","error","setState","_","isEmpty","react_default","a","createElement","className","key","checkOutOthers","fbTag","Product","Click_Text","gaEvent","event_category","event_label","_this3","isFirstValidate","arguments","length","undefined","_this$props","storeForm","noSynergy","errorResult","isEmptyResult","dateReValidate","checkout","popup","openPopupWithJSX","getSynergyJSX","window","scrollTo","document","body","scrollHeight","_this4","_this$state","_this$props2","form","change","planDetails","isLoggedIn","piggyCallback","changePlan","react","DetailForm","category","onSubmit","checkoutButtonDesc","reactstrap_es","noGutters","xs","TextInput","name","placeholderString","size","zIndex","desc","errorString","email","sm","DatePickerV2","birth_date","endDate","Date","mobile_number","PopupWithText","ref","node","showCancelButton","CheckoutComplete","isQuoteOnly","isSellLeads","wrappedComponentRef","Component","defaultProps","reduxForm","destroyOnUnmount","connect","getFormValues","constants","insurance","dispatch","clearLoading","LifeDetailContainer","submitCallback","lifeRedirect","setFormState","FORMSTATES","DETAILFORM","index","gaTag","page_title","page_path","selectedPlanData","loading","info","deep_link","integration_type","RedirectPop","openRedirectPopup","lifeForm","lifeDetailForm","postToRedirect","result","insurer_slug","redirectButton","firstChild","removeChild","range","createRange","appendChild","createContextualFragment","form_html","$","concat","form_id","get","submit","_this$props3","plansData","profileValues","lifeFields","history","selectedData","logo","Logos","others","logoDesc","planName","planTotal","insurer_name","product_name","policyInfo","planType","net_price","toFixed","console","log","Life_LifeDetail","goBack","RedirectPopup","noEmail","onConfirm","withRouter","life","userDetails","getAnonymousSession","params","setInsuranceFormState","callBack","errorMsg","time","setLoading","propsFromState","propsFromDispatch","ownProps","objectSpread","detailForm","getSessionParams","module","exports","__webpack_require__","p","FormInputWrapper","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","setErrorString","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","clearErrorString","refValue","message","extraInfo","react__WEBPACK_IMPORTED_MODULE_6___default","children","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","animateStyle","userName","popupRef","openPopup","upperText","react__WEBPACK_IMPORTED_MODULE_6__","midText","buttonText","callback","components_FormsV3_Button_Button__WEBPACK_IMPORTED_MODULE_9__","variant","width","height","onClick","togglePopup","push","closePopup","_this$props4","extraText","_Popup_Popup__WEBPACK_IMPORTED_MODULE_10__","hideCloseButton","r","src","CheckoutCompleteSVG","alt","renderUpperText","renderMidText","renderButton","withRef","RedirectPopupForm","disclaimer","Selection","type","options","description","sizeInSM","Button","Popup","RedirectPopup_RedirectPopupForm","closPopup"],"mappings":"2YAiCMA,cAeJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,UAAW,KACXC,gBAAiB,GACjBC,WAAY,IAGdV,EAAKW,aAAeX,EAAKW,aAAaC,KAAlBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACpBA,EAAKc,aAAed,EAAKc,aAAaF,KAAlBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAVHA,6FAdae,EAAWC,GAAW,IAElDR,EACEO,EADFP,UAGF,OAAIA,IAAcQ,EAAUR,UAClB,CACNA,aAIG,mEAgBY,IAAAS,EAAAd,KACXK,EAAcL,KAAKI,MAAnBC,UACAU,EAAef,KAAKJ,MAApBmB,WAEJV,IACFU,IACAC,WAAW,WACTF,EAAKG,iBAAiBC,uBACtBC,YAAO,sBACN,2CAIMC,GACX,IAOMC,EAAQV,YAAaS,EAPL,CACpB,QACA,OACA,aACA,kBAKFpB,KAAKsB,SAAS,CACZhB,gBAAiBe,IAEnB,IAAId,EAAa,GASjB,OARKgB,IAAEC,QAAQH,KACbd,EAAa,CAACkB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,IAAI,WAAhC,yDAGhB7B,KAAKsB,SAAS,CACZf,eAGKc,mCAGAD,GAAG,IACFU,EAAmB9B,KAAKJ,MAAxBkC,eAERC,YAAM,kDAAmD,CAAEC,QAAS,OAAQC,WAAY,aACxFC,YAAQ,+BAAgC,CACtCC,eAAgB,OAChBC,YAAa,iCAGfN,EAAeV,wCAGJA,GAA2B,IAAAiB,EAAArC,KAAxBsC,IAAwBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAAAG,EACL1C,KAAKJ,MAA9B+C,EAD8BD,EAC9BC,UAAWC,EADmBF,EACnBE,UACbC,EAAc7C,KAAKW,aAAa2B,EAAkBlB,EAAIuB,GACtDG,EAAgBvB,IAAEC,QAAQqB,GAE5BE,YACFD,EACAR,EACAO,EACA,SAAAxB,GAAK,OAAIgB,EAAKf,SAAS,CAAEhB,gBAAiBe,EAAOd,WAAY,QAC7D,kBAAM8B,EAAK7B,aAAamC,GAAW,OAKjCG,IACEF,EACF5C,KAAKgD,SAAS5B,IAEdD,YAAO,iBACPA,YAAO,eACPnB,KAAKiD,MAAMC,iBAAiBC,eAAiB,EAAM,WACjDhC,YAAO,iBACPH,WAAW,WACTqB,EAAKW,SAAS5B,IACb,SAITgC,IAAOC,SAAS,EAAGC,IAASC,KAAKC,gDAG1B,IAAAC,EAAAzD,KAAA0D,EACiC1D,KAAKI,MAArCE,EADDoD,EACCpD,gBAAiBC,EADlBmD,EACkBnD,WADlBoD,EAUH3D,KAAKJ,MAPPgE,EAHKD,EAGLC,KACAC,EAJKF,EAILE,OACAC,EALKH,EAKLG,YACAC,EANKJ,EAMLI,WACAC,EAPKL,EAOLK,cACAC,EARKN,EAQLM,WACAtB,EATKgB,EASLhB,UAIF,OACElB,EAAAC,EAAAC,cAACuC,EAAA,SAAD,KACEzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACEC,SAAS,OACTH,WAAYA,EACZzD,aAAcR,KAAKJ,MAAMY,aACzB6D,SAAUrE,KAAKQ,aACfqD,OAAQA,EACRD,KAAMA,EACNE,YAAaA,EACbC,WAAYA,EACZC,cAAeA,EACfzD,WAAYA,EACZ+D,mBAAmB,WAEnB7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAK3C,UAAU,YAAY4C,WAAS,GAClC/C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAKE,GAAI,IACPhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACEd,KAAMA,EACNC,OAAQA,EACRc,KAAK,QACLC,kBAAkB,GAClBC,KAAK,SACLC,OAAQ,GACRC,KAAK,gBACLC,YAAa1E,EAAgB2E,MAC7BtE,aAAc,kBAAM8C,EAAK9C,aAAagC,OAG1ClB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAK3C,UAAU,gBAAgB6C,GAAI,GAAIS,GAAI,GACzCzD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACEd,KAAMA,EACNC,OAAQA,EACRc,KAAK,OACLC,kBAAkB,GAClBC,KAAK,SACLC,OAAQ,GACRC,KAAK,YACLC,YAAa1E,EAAgBqE,KAC7BhE,aAAc,kBAAM8C,EAAK9C,aAAagC,OAG1ClB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAK3C,UAAU,eAAe6C,GAAI,GAAIS,GAAI,GACxCzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CACEvB,KAAMA,EACNC,OAAQA,EACRc,KAAK,aACLE,KAAK,SACLC,OAAQ,GACRC,KAAK,gBACLC,YAAa1E,EAAgB8E,WAC7BzE,aAAc,kBAAM8C,EAAK9C,aAAagC,IACtC0C,QAAS,IAAIC,QAGjB7D,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAK3C,UAAU,gBAAgB6C,GAAI,GAAIS,GAAI,GACzCzD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACEd,KAAMA,EACNC,OAAQA,EACRc,KAAK,gBACLC,kBAAkB,GAClBC,KAAK,SACLC,OAAQ,GACRC,KAAK,gBACLC,YAAa1E,EAAgBiF,cAC7B5E,aAAc,kBAAM8C,EAAK9C,aAAagC,SAK9ClB,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CACEC,IAAK,SAAAC,GAAI,OAAIjC,EAAKR,MAAQyC,GAC1BC,kBAAgB,IAElBlE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CACEC,aAAW,EACXC,aAAW,EACXC,oBAAqB,SAAAL,GAAI,OAAIjC,EAAKxC,iBAAmByE,aAxMtCM,aA+MzBrG,EAAWsG,aAAe,CACxBtD,UAAW,KACXC,WAAW,GAiBb,IAWesD,cAAU,CACvBtC,KAhPe,cAiPfuC,kBAAkB,GAFLD,CAGZE,kBAdqB,SAAAhG,GAAK,MAAK,CAChCuC,UAAW0D,YArOI,cAqOJA,CAAwBjG,GACnCkG,UAAWlG,EAAMmG,UAAUD,YAGF,SAAAE,GAAQ,MAAK,CACtCzF,WAAY,WACVyF,EAASC,kBAOVL,CAA6CzG,qBCtP1C+G,cACJ,SAAAA,EAAY9G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0G,IACjB7G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4G,GAAAvG,KAAAH,KAAMJ,KAED+G,eAAiB9G,EAAK8G,eAAelG,KAApBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACtBA,EAAK+G,aAAe/G,EAAK+G,aAAanG,KAAlBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAJHA,oFASjBgH,EADyB7G,KAAKJ,MAAtBiH,cACKC,IAAWC,WAAWC,OAEnCjF,YAAM,sCAAuC,CAAEC,QAAS,SACxDiF,YAAM,CACJC,WAAY,qBACZC,UAAW,qBAEbhG,YAAO,uDAGMC,GAAG,IAAAsB,EACsC1C,KAAKJ,MAAnDwH,EADQ1E,EACR0E,iBAAkBtF,EADVY,EACUZ,eAAgBuF,EAD1B3E,EAC0B2E,QAE1C,GAAyD,YAArDD,EAAiBE,KAAKC,UAAUC,iBAGlC,OAFAxH,KAAKyH,YAAYC,yBACjBvG,YAAO,iBAITkG,IACAvF,EAAeV,2KASXpB,KAAKJ,MAJP+H,aACAC,mBACAR,sBACAC,wBAKmBQ,YAAeF,EAAUC,EAAgBR,UAC9D,GADMU,SACqC,aAAvCV,EAAiBE,KAAKS,aAA6B,CACrD,KAAO/H,KAAKgI,eAAeC,YACzBjI,KAAKgI,eAAeE,YAAYlI,KAAKgI,eAAeC,YAEhDE,EAAQ7E,IAAS8E,cACvBpI,KAAKgI,eAAeK,YAAYF,EAAMG,yBAAyBR,EAAOS,YAEtEvH,WAAW,kBAAMwH,IAAC,IAAAC,OAAKX,EAAOY,UAAWC,IAAI,GAAGC,UAAU,KAC1DzH,YAAO,mJAIF,IAAAL,EAAAd,KAAA6I,EAUH7I,KAAKJ,MARPkJ,EAFKD,EAELC,UACA/E,EAHK8E,EAGL9E,WACAgF,EAJKF,EAILE,cACA/E,EALK6E,EAKL7E,cACAgF,EANKH,EAMLG,WACA3I,EAPKwI,EAOLxI,UACA+G,EARKyB,EAQLzB,iBACA6B,EATKJ,EASLI,QAGF,IAAKH,EACH,OAAO,KAGT,IAAMI,EAAeJ,EACflG,EAAmD,aAAvCwE,EAAiBE,KAAKS,aAEpCjE,EAAc,CAChBqF,KAAMC,IAAMC,OACZC,SAAU,GACVC,SAAU,GACVC,UAAW,MAGb,IACE1F,EAAc,CACZqF,KAAMC,IAAMF,EAAa5B,KAAKS,cAC9BuB,SAAQ,GAAAb,OAAKS,EAAa5B,KAAKmC,aAAvB,QACRF,SAAUL,EAAa5B,KAAKoC,aAC5BF,UAAS,IAAAf,OAAMS,EAAaS,WAAWT,EAAaU,UAAUC,UAAUC,QAAQ,KAElF,MAAOzI,GACP0I,QAAQC,IAAI,2BAGd,OACEvI,EAAAC,EAAAC,cAACuC,EAAA,SAAD,KACEzC,EAAAC,EAAAC,cAACsI,EAAD,CACEjB,WAAYA,EACZE,aAAcA,EACdpF,YAAaA,EACbC,WAAYA,EACZ1D,UAAWA,EACX2D,cAAeA,EACflC,eAAgB9B,KAAK2G,eACrB1C,WAAY,WACVgF,EAAQiB,SACRnI,YAAM,oDAAqD,CAAEC,QAAS,OAAQC,WAAY,eAC1FC,YAAQ,iCAAkC,CACxCC,eAAgB,OAChBC,YAAa,oCAGjB2G,cAAeA,EAEfnG,UAAWA,IAEbnB,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CACE1E,IAAK,SAAAC,GAAI,OAAI5E,EAAK2G,YAAc/B,GAChC0E,SAAO,EACPC,UAAW,WACTvJ,EAAK8F,kBAGTnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkB6D,IAAK,SAAAC,GAAI,OAAI5E,EAAKkH,eAAiBtC,aA1H1CM,aAgIlCU,EAAoBT,aAAe,CACjC5F,UAAW,KACXyI,UAAW,KACXlB,eAAgB,MAuDH0C,sBAAWlE,kBAnCF,SAAAhG,GAAK,MAAK,CAChCuH,SAAUtB,YAAc,OAAdA,CAAsBjG,GAChCwH,eAAgBvB,YAAc,cAAdA,CAA6BjG,GAC7C4I,WAAY5I,EAAMmK,KAAKvB,WACvBD,cAAe3I,EAAMoK,YACrB1B,UAAW1I,EAAMmK,KAAKnD,iBACtB/G,UAAWD,EAAMmG,UAAUlG,UAC3B+G,iBAAkBhH,EAAMmK,KAAKnD,mBAGJ,SAAAZ,GAAQ,MAAK,CACtCiE,oBAAqB,SAACC,GACpBlE,EAASiE,YAAoBC,GAAQ,KAEvC7D,aAAc,SAACzG,GACboG,EAASmE,YAAsBvK,KAEjCiH,QAAS,SAACuD,EAAUC,EAAUC,GAC5BtE,EAASuE,YAAWH,EAAUC,EAAUC,OAIzB,SAACE,EAAgBC,EAAmBC,GAApC,OAAApL,OAAAqL,EAAA,EAAArL,CAAA,GACdoL,EACAF,EACAC,EAHc,CAIjBnJ,eAAgB,SAACsJ,GACfH,EAAkBR,oBAAoBY,YACpCL,EAAerD,SACfyD,EACAJ,EAAelC,YACd,OAImB1C,CAAyDM,yBCrNnF4E,EAAAC,QAAiBC,EAAAC,EAAuB,yICelCC,sBAsBJ,SAAAA,EAAY9L,GAAO,IAAAC,EAAA,OAAAC,OAAA6L,EAAA,EAAA7L,CAAAE,KAAA0L,IACjB7L,EAAAC,OAAA8L,EAAA,EAAA9L,CAAAE,KAAAF,OAAA+L,EAAA,EAAA/L,CAAA4L,GAAAvL,KAAAH,KAAMJ,KAEDQ,MAAQ,CACX4E,YAAa,MAGfnF,EAAKiM,eAAiBjM,EAAKiM,eAAerL,KAApBX,OAAAiM,EAAA,EAAAjM,QAAAiM,EAAA,EAAAjM,CAAAD,KACtBA,EAAKmM,iBAAmBnM,EAAKmM,iBAAiBvL,KAAtBX,OAAAiM,EAAA,EAAAjM,QAAAiM,EAAA,EAAAjM,CAAAD,KARPA,6FArBae,EAAWC,GACzC,OAAIA,EAAUmE,cAAgBpE,EAAUoE,YAC/B,CACLA,YAAapE,EAAUoE,YACvBiH,SAAUrL,EAAUqL,UAIpBrL,EAAUD,cAAgBE,EAAUmE,aAAenE,EAAUoL,WAAarL,EAAUqL,UACtFrL,EAAUD,eACH,CACLqE,YAAa,OAGV,6DAkBMkH,GACblM,KAAKsB,SAAS,CACZ0D,YAAakH,+CAKflM,KAAKsB,SAAS,CACZ0D,YAAa,wCAIR,IAELA,EACEhF,KAAKI,MADP4E,YAFKtC,EAQH1C,KAAKJ,MAFPmF,EANKrC,EAMLqC,KACAoH,EAPKzJ,EAOLyJ,UAGF,OACEC,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,0CAEF,OAATmD,EACEqH,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,sBAAsBmD,GAEnC,KAEH/E,KAAKJ,MAAMyM,SAEI,OAAdF,EACEC,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,wBACZuK,GAGH,KAGc,OAAhBnH,EACEoH,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,4BACVoD,GAGH,aA9EmBgB,cAqF/B0F,EAAiBzF,aAAe,CAC9BlB,KAAM,KACNoH,UAAW,MASET,2BC/GfJ,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uNCiBlC7F,sBACJ,SAAAA,EAAYhG,GAAO,IAAAC,EAAA,OAAAC,OAAA6L,EAAA,EAAA7L,CAAAE,KAAA4F,IACjB/F,EAAAC,OAAAwM,EAAA,EAAAxM,CAAAE,KAAAF,OAAAyM,EAAA,EAAAzM,CAAA8F,GAAAzF,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXoM,aAAc,IAGhB3M,EAAKqB,qBAAuBrB,EAAKqB,qBAAqBT,KAA1BX,OAAAiM,EAAA,EAAAjM,QAAAiM,EAAA,EAAAjM,CAAAD,KAPXA,sFAUmB,IAAAiB,EAAAd,KAAjByM,EAAiBlK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KAC9BvC,KAAKsB,SAAS,CACZkL,aAAc,YACdC,aAGFzL,WAAW,WACTF,EAAK4L,SAASC,aACb,8CAGa,IACRF,EAAazM,KAAKI,MAAlBqM,SADQ/J,EAEmB1C,KAAKJ,MAAhCiG,EAFQnD,EAERmD,YAAa+G,EAFLlK,EAEKkK,UAErB,OAAK/G,EAUHuG,EAAA1K,EAAAC,cAAA,SAAIiL,GAAa,WARfR,EAAA1K,EAAAC,cAACkL,EAAA,SAAD,KACET,EAAA1K,EAAAC,cAAA,+BACAyK,EAAA1K,EAAAC,cAAA,SAAGyK,EAAA1K,EAAAC,cAAA,0BAAuByK,EAAA1K,EAAAC,cAAA,QAAMC,UAAU,cAAc6K,6CAUhD,IAAA9I,EACmB3D,KAAKJ,MAA9BiG,EADMlC,EACNkC,YAAaiH,EADPnJ,EACOmJ,QAKrB,OAAKjH,EAUW,OAAZiH,EAEAV,EAAA1K,EAAAC,cAACkL,EAAA,SAAD,KACET,EAAA1K,EAAAC,cAAA,SAAImL,IAMRV,EAAA1K,EAAAC,cAACkL,EAAA,SAAD,KACET,EAAA1K,EAAAC,cAAA,gDACAyK,EAAA1K,EAAAC,cAAA,SAxBY,iIAKZyK,EAAA1K,EAAAC,cAACkL,EAAA,SAAD,KACET,EAAA1K,EAAAC,cAAA,mDACAyK,EAAA1K,EAAAC,cAAA,wBACAyK,EAAA1K,EAAAC,cAAA,SAAI,0GAqBG,IAAAU,EAAArC,KAAA6I,EAMT7I,KAAKJ,MAJPqJ,EAFWJ,EAEXI,QACApD,EAHWgD,EAGXhD,YACAkH,EAJWlE,EAIXkE,WACAC,EALWnE,EAKXmE,SAGF,OAAKnH,EA0BHuG,EAAA1K,EAAAC,cAACsL,EAAA,EAAD,CACErL,UAAU,kBACVsL,QAAQ,oBACRC,MAAO,IACPC,OAAQ,GACRC,QAAS,WACP,GAAIL,EAGF,OAFAA,SACA3K,EAAKqK,SAASY,aAAY,GAG5BrE,EAAQsE,KAAK,OAGfnB,EAAA1K,EAAAC,cAAA,SAAIoL,GAAc,OAtClBX,EAAA1K,EAAAC,cAACkL,EAAA,SAAD,KACET,EAAA1K,EAAAC,cAACsL,EAAA,EAAD,CACErL,UAAU,kBACVsL,QAAQ,cACRC,MAAO,IACPC,OAAQ,GACRC,QAAS,kBAAMpE,EAAQsE,KAAK,mBAE5BnB,EAAA1K,EAAAC,cAAA,0BAEFyK,EAAA1K,EAAAC,cAACsL,EAAA,EAAD,CACErL,UAAU,kBACVsL,QAAQ,oBACRC,MAAO,IACPC,OAAQ,GACRC,QAAS,kBAAMhL,EAAKqK,SAASc,eAE7BpB,EAAA1K,EAAAC,cAAA,uDA0BD,IAAA8B,EAAAzD,KACCwM,EAAiBxM,KAAKI,MAAtBoM,aADDiB,EAE4BzN,KAAKJ,MAAhCkG,EAFD2H,EAEC3H,YAAalE,EAFd6L,EAEc7L,UAEf8L,EAAa5H,EAAmB,gGAAL,GAEjC,OACEsG,EAAA1K,EAAAC,cAACgM,EAAA,EAAD,CACE/L,UAAWA,EACXgM,iBAAe,EAACnI,IAAK,SAACoI,GAAQpK,EAAKiJ,SAAWmB,IAE9CzB,EAAA1K,EAAAC,cAACkL,EAAA,SAAD,KACET,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,mBACbwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAW4K,EAAcsB,IAAKC,IAAqBC,IAAI,yBAC5D5B,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,mCACZ5B,KAAKiO,mBAER7B,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,iBACZ5B,KAAKkO,iBAER9B,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,oBACZ5B,KAAKmO,gBAER/B,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,cAAawK,EAAA1K,EAAAC,cAAA,SAAI+L,cApJb1H,cA4J/BJ,EAAiBK,aAAe,CAC9BJ,aAAa,EACbC,aAAa,EACb8G,UAAW,KACXE,QAAS,KACTC,WAAY,KACZC,SAAU,KACVpL,UAAW,IAcE0I,gBAAW1E,EAAkB,CAAEwI,SAAS,yPC9KjDC,cACJ,SAAAA,EAAYzO,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqO,IACjBxO,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuO,GAAAlO,KAAAH,KAAMJ,KAEDQ,MAAQ,CACX4E,YAAa,MAGfnF,EAAKW,aAAeX,EAAKW,aAAaC,KAAlBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAPHA,4EAUNuB,GAAG,IAAAsB,EAC2B1C,KAAKJ,MAAtCyK,EADM3H,EACN2H,UAAWjG,EADL1B,EACK0B,SAAUgG,EADf1H,EACe0H,QACvBnF,EAAQmF,EAAU,GAAK,CAAC,SAExBvH,EAAclC,YAAaS,EAAD,GAAAqH,OAAQxD,EAAR,CAAe,gBAE1CmF,IAAWvH,EAAYoC,MAOxB1D,IAAEC,QAAQJ,EAAEkN,YACdtO,KAAKsB,SAAS,CACZ0D,YAAa,0CAKZzD,IAAEC,QAAQqB,IAQf7C,KAAKsB,SAAS,CACZ0D,YAAa,OAGfqF,EAAUvK,OAAAqL,EAAA,EAAArL,CAAA,GAAKsB,EAAN,CAASgD,eAXhBpE,KAAKsB,SAAS,CACZ0D,YAAa,+BAffhF,KAAKsB,SAAS,CACZ0D,YAAa,oDA2BV,IACCA,EAAgBhF,KAAKI,MAArB4E,YADDrB,EAOH3D,KAAKJ,MAJPY,EAHKmD,EAGLnD,aACAoD,EAJKD,EAILC,KACAC,EALKF,EAKLE,OACAuG,EANKzG,EAMLyG,QAGF,OACE3I,EAAAC,EAAAC,cAAA,QAAM0C,SAAU7D,EAAaR,KAAKQ,eAChCiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAKC,WAAS,GAEV4F,EACE,KAEA3I,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAKE,GAAI,IACPhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACEd,KAAMA,EACNC,OAAQA,EACRc,KAAK,QACLC,kBAAkB,GAClBC,KAAK,SACLC,OAAQ,GACRC,KAAK,mBAIbtD,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAKE,GAAI,IACPhD,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CACE3K,KAAMA,EACNC,OAAQA,EACRc,KAAK,aACL6J,KAAK,WACLC,QAAS,CACP,CAAE5M,IAAK,aAAc6M,YAAa,8HAEpCC,SAAU,GACV5J,KAAK,MAIPC,EACEvD,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAKE,GAAI,IACPhD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBoD,IAG/B,OAIRvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACiN,EAAA,EAAD,CACEJ,KAAK,SACL5M,UAAU,kBACVsL,QAAQ,oBACRC,MAAO,IACPC,OAAQ,IAER3L,EAAAC,EAAAC,cAAA,8BA1GoBqE,aAkHhCqI,EAAkBpI,aAAe,CAC/B7B,SAAU,KACVgG,SAAS,GAYIlE,kBAAU,CACvBtC,KAAM,iBADOsC,CAEZmI,YCvIGlE,sBACJ,SAAAA,EAAYvK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmK,IACjBtK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqK,GAAAhK,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXgE,SAAU,MAGZvE,EAAK6H,kBAAoB7H,EAAK6H,kBAAkBjH,KAAvBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAPRA,iFAUDuE,GAChBpE,KAAKsB,SAAS,CACZ8C,aAEFpD,WAAWhB,KAAK0M,SAASC,UAAW,sCAG7B,IAAA7L,EAAAd,KACCoE,EAAapE,KAAKI,MAAlBgE,SADD1B,EAEwB1C,KAAKJ,MAA5ByK,EAFD3H,EAEC2H,UAAWD,EAFZ1H,EAEY0H,QAEnB,OACE3I,EAAAC,EAAAC,cAACkN,EAAA,EAAD,CAAOpJ,IAAK,SAACoI,GAAQ/M,EAAK4L,SAAWmB,IACnCpM,EAAAC,EAAAC,cAACuC,EAAA,SAAD,KACEzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAI,wKAENF,EAAAC,EAAAC,cAACmN,EAAD,CACE1E,QAASA,EACT2E,UAAW,kBAAMjO,EAAK4L,SAASc,cAC/BnD,UAAWA,EACXjG,SAAUA,cAjCI4B,cA0C5BmE,EAAclE,aAAe,CAC3BmE,SAAS,GAQID","file":"static/js/LifeDetailContainer.d16958b9.chunk.js","sourcesContent":["/**\r\n * LifeDetail.js\r\n * Detail view for Life\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport document from 'global/document';\r\nimport window from 'global/window';\r\nimport _ from 'lodash';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, getFormValues } from 'redux-form';\r\nimport { Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Import Insurer Logos\r\nimport DetailForm from '../Templates/DetailForm/DetailForm';\r\n\r\nimport TextInput from '../Forms/TextInput/TextInput';\r\nimport DatePickerV2 from '../Forms/DatePicker/DatePickerV2';\r\nimport CheckoutComplete from '../Templates/CheckoutPopup/CheckoutComplete';\r\nimport PopupWithText from '../Templates/PopupWithText/PopupWithText';\r\n\r\nimport { getSynergyJSX } from '../../actions/insuranceActions';\r\nimport { validateForm, dateReValidate } from '../../lib/validators';\r\nimport { clearLoading } from '../../actions/loadingScreenActions';\r\nimport { fbTag, gaEvent, ampTag } from '../../lib/tagFunctions';\r\n\r\n// import './PetDetail.scss';\r\n\r\nconst formName = 'life-detail';\r\n\r\nclass LifeDetail extends Component {\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const {\r\n      sessionId,\r\n    } = nextProps;\r\n\r\n    if (sessionId !== prevState.sessionId) {\r\n      return ({\r\n        sessionId,\r\n      });\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      sessionId: null,\r\n      errorStringData: {},\r\n      errorArray: [],\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { sessionId } = this.state;\r\n    const { loadingEnd } = this.props;\r\n\r\n    if (sessionId) {\r\n      loadingEnd();\r\n      setTimeout(() => {\r\n        this.checkoutComplete.openCheckoutComplete();\r\n        ampTag('LifeConfirmationS');\r\n      }, 300);\r\n    }\r\n  }\r\n\r\n  validateForm(e) {\r\n    const fieldsToCheck = [\r\n      'email',\r\n      'name',\r\n      'birth_date',\r\n      'mobile_number',\r\n    ];\r\n\r\n    const error = validateForm(e, fieldsToCheck);\r\n\r\n    this.setState({\r\n      errorStringData: error,\r\n    });\r\n    let errorArray = [];\r\n    if (!_.isEmpty(error)) {\r\n      errorArray = [<p className=\"error-string\" key=\"error-1\">Fields are not properly filled, please check again.</p>];\r\n    }\r\n\r\n    this.setState({\r\n      errorArray,\r\n    });\r\n\r\n    return error;\r\n  }\r\n\r\n  checkout(e) {\r\n    const { checkOutOthers } = this.props;\r\n\r\n    fbTag('PPS2 - ButtonClick - Life - DetailForm_Checkout', { Product: 'Life', Click_Text: 'Checkout' });\r\n    gaEvent('Life - DetailForm - Checkout', {\r\n      event_category: 'Life',\r\n      event_label: 'Life - DetailForm - Checkout',\r\n    });\r\n\r\n    checkOutOthers(e);\r\n  }\r\n\r\n  handleSubmit(e, isFirstValidate = true) {\r\n    const { storeForm, noSynergy } = this.props;\r\n    const errorResult = this.validateForm(isFirstValidate ? e : storeForm);\r\n    const isEmptyResult = _.isEmpty(errorResult);\r\n\r\n    if (dateReValidate(\r\n      isEmptyResult,\r\n      isFirstValidate,\r\n      errorResult,\r\n      error => this.setState({ errorStringData: error, errorArray: null }),\r\n      () => this.handleSubmit(storeForm, false),\r\n    )) {\r\n      return;\r\n    }\r\n\r\n    if (isEmptyResult) {\r\n      if (noSynergy) {\r\n        this.checkout(e);\r\n      } else {\r\n        ampTag('LifeConfirm1A');\r\n        ampTag('LifeNoticeS');\r\n        this.popup.openPopupWithJSX(getSynergyJSX(), true, () => {\r\n          ampTag('LifeConfirm2A');\r\n          setTimeout(() => {\r\n            this.checkout(e);\r\n          }, 350);\r\n        });\r\n      }\r\n    }\r\n    window.scrollTo(0, document.body.scrollHeight);\r\n  }\r\n\r\n  render() {\r\n    const { errorStringData, errorArray } = this.state;\r\n    const {\r\n      form,\r\n      change,\r\n      planDetails,\r\n      isLoggedIn,\r\n      piggyCallback,\r\n      changePlan,\r\n      storeForm,\r\n    } = this.props;\r\n\r\n    // console.log(petMinDate, petMaxDate);\r\n    return (\r\n      <Fragment>\r\n        <DetailForm\r\n          category=\"life\"\r\n          changePlan={changePlan}\r\n          handleSubmit={this.props.handleSubmit}\r\n          onSubmit={this.handleSubmit}\r\n          change={change}\r\n          form={form}\r\n          planDetails={planDetails}\r\n          isLoggedIn={isLoggedIn}\r\n          piggyCallback={piggyCallback}\r\n          errorArray={errorArray}\r\n          checkoutButtonDesc=\"Confirm\"\r\n        >\r\n          <Row className=\"main-form\" noGutters>\r\n            <Col xs={12}>\r\n              <TextInput\r\n                form={form}\r\n                change={change}\r\n                name=\"email\"\r\n                placeholderString=\"\"\r\n                size=\"medium\"\r\n                zIndex={99}\r\n                desc=\"Email Address\"\r\n                errorString={errorStringData.email}\r\n                validateForm={() => this.validateForm(storeForm)}\r\n              />\r\n            </Col>\r\n            <Col className=\"right-padding\" xs={12} sm={6}>\r\n              <TextInput\r\n                form={form}\r\n                change={change}\r\n                name=\"name\"\r\n                placeholderString=\"\"\r\n                size=\"medium\"\r\n                zIndex={98}\r\n                desc=\"Full Name\"\r\n                errorString={errorStringData.name}\r\n                validateForm={() => this.validateForm(storeForm)}\r\n              />\r\n            </Col>\r\n            <Col className=\"left-padding\" xs={12} sm={6}>\r\n              <DatePickerV2\r\n                form={form}\r\n                change={change}\r\n                name=\"birth_date\"\r\n                size=\"medium\"\r\n                zIndex={97}\r\n                desc=\"Date of Birth\"\r\n                errorString={errorStringData.birth_date}\r\n                validateForm={() => this.validateForm(storeForm)}\r\n                endDate={new Date()}\r\n              />\r\n            </Col>\r\n            <Col className=\"right-padding\" xs={12} sm={6}>\r\n              <TextInput\r\n                form={form}\r\n                change={change}\r\n                name=\"mobile_number\"\r\n                placeholderString=\"\"\r\n                size=\"medium\"\r\n                zIndex={96}\r\n                desc=\"Mobile Number\"\r\n                errorString={errorStringData.mobile_number}\r\n                validateForm={() => this.validateForm(storeForm)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </DetailForm>\r\n        <PopupWithText\r\n          ref={node => this.popup = node}\r\n          showCancelButton\r\n        />\r\n        <CheckoutComplete\r\n          isQuoteOnly\r\n          isSellLeads\r\n          wrappedComponentRef={node => this.checkoutComplete = node}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLifeDetail.defaultProps = {\r\n  storeForm: null,\r\n  noSynergy: false,\r\n};\r\n\r\nLifeDetail.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  checkOutOthers: PropTypes.func.isRequired,\r\n  form: PropTypes.string.isRequired,\r\n  change: PropTypes.func.isRequired,\r\n  planDetails: PropTypes.object.isRequired,\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  piggyCallback: PropTypes.func.isRequired,\r\n  changePlan: PropTypes.func.isRequired,\r\n  storeForm: PropTypes.object,\r\n  loadingEnd: PropTypes.func.isRequired,\r\n  noSynergy: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  storeForm: getFormValues(formName)(state),\r\n  constants: state.insurance.constants,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadingEnd: () => {\r\n    dispatch(clearLoading());\r\n  },\r\n});\r\n\r\nexport default reduxForm({\r\n  form: formName,\r\n  destroyOnUnmount: false,\r\n})(connect(mapStateToProps, mapDispatchToProps)(LifeDetail));\r\n","/**\r\n * LifeDetailContainer.js\r\n * Detail Container for Life\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport $ from 'jquery';\r\nimport document from 'global/document';\r\nimport window from 'global/window';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getFormValues } from 'redux-form';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Import Insurer Logos\r\nimport Logos from 'assets/images/InsurerLogos';\r\n\r\nimport LifeDetail from '../../components/Life/LifeDetail';\r\nimport RedirectPopup from '../../components/Templates/RedirectPopup/RedirectPopup';\r\n\r\nimport { setLoading } from '../../actions/loadingScreenActions';\r\nimport { getAnonymousSession, setInsuranceFormState, FORMSTATES } from '../../actions/insuranceActions';\r\nimport { getSessionParams, postToRedirect } from '../../actions/lifeActions';\r\nimport { fbTag, gaTag, gaEvent, ampTag } from '../../lib/tagFunctions';\r\n\r\nclass LifeDetailContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.submitCallback = this.submitCallback.bind(this);\r\n    this.lifeRedirect = this.lifeRedirect.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { setFormState } = this.props;\r\n    setFormState(FORMSTATES.DETAILFORM.index);\r\n\r\n    fbTag('PPS2 - Pageview - Life - DetailForm', { Product: 'Life' });\r\n    gaTag({\r\n      page_title: 'Life - Detail Form',\r\n      page_path: '/life/detailform',\r\n    });\r\n    ampTag('LifeDetailsS');\r\n  }\r\n\r\n  submitCallback(e) {\r\n    const { selectedPlanData, checkOutOthers, loading } = this.props;\r\n    // console.log(selectedPlanData);\r\n    if (selectedPlanData.info.deep_link.integration_type === 'webview') {\r\n      this.RedirectPop.openRedirectPopup();\r\n      ampTag('LifeRedirectS');\r\n      return;\r\n    }\r\n\r\n    loading();\r\n    checkOutOthers(e);\r\n  }\r\n\r\n  async lifeRedirect() {\r\n    const {\r\n      lifeForm,\r\n      lifeDetailForm,\r\n      selectedPlanData,\r\n      loading,\r\n    } = this.props;\r\n\r\n    loading();\r\n\r\n    const result = await postToRedirect(lifeForm, lifeDetailForm, selectedPlanData);\r\n    if (selectedPlanData.info.insurer_slug === 'singlife') {\r\n      while (this.redirectButton.firstChild) {\r\n        this.redirectButton.removeChild(this.redirectButton.firstChild);\r\n      }\r\n      const range = document.createRange();\r\n      this.redirectButton.appendChild(range.createContextualFragment(result.form_html));\r\n\r\n      setTimeout(() => $(`#${result.form_id}`).get(0).submit(), 300);\r\n      ampTag('LifeConfirmA');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      plansData,\r\n      isLoggedIn,\r\n      profileValues,\r\n      piggyCallback,\r\n      lifeFields,\r\n      sessionId,\r\n      selectedPlanData,\r\n      history,\r\n    } = this.props;\r\n\r\n    if (!plansData) {\r\n      return null;\r\n    }\r\n\r\n    const selectedData = plansData;\r\n    const noSynergy = selectedPlanData.info.insurer_slug === 'singlife';\r\n\r\n    let planDetails = {\r\n      logo: Logos.others,\r\n      logoDesc: '',\r\n      planName: '',\r\n      planTotal: null,\r\n    };\r\n\r\n    try {\r\n      planDetails = {\r\n        logo: Logos[selectedData.info.insurer_slug],\r\n        logoDesc: `${selectedData.info.insurer_name}.svg`,\r\n        planName: selectedData.info.product_name,\r\n        planTotal: `$${selectedData.policyInfo[selectedData.planType].net_price.toFixed(2)}`,\r\n      };\r\n    } catch (error) {\r\n      console.log('Get plan details failed');\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <LifeDetail\r\n          lifeFields={lifeFields}\r\n          selectedData={selectedData}\r\n          planDetails={planDetails}\r\n          isLoggedIn={isLoggedIn}\r\n          sessionId={sessionId}\r\n          piggyCallback={piggyCallback}\r\n          checkOutOthers={this.submitCallback}\r\n          changePlan={() => {\r\n            history.goBack();\r\n            fbTag('PPS2 - ButtonClick - Life - DetailForm_ChangePlan', { Product: 'Life', Click_Text: 'ChangePlan' });\r\n            gaEvent('Life - DetailForm - ChangePlan', {\r\n              event_category: 'Life',\r\n              event_label: 'Life - DetailForm - ChangePlan',\r\n             });\r\n          }}\r\n          profileValues={profileValues}\r\n          // submitCallback={() => { setFormState(FORMSTATES.CHECKOUT); }}\r\n          noSynergy={noSynergy}\r\n        />\r\n        <RedirectPopup\r\n          ref={node => this.RedirectPop = node}\r\n          noEmail\r\n          onConfirm={() => {\r\n            this.lifeRedirect();\r\n          }}\r\n        />\r\n        <div className=\"redirect-button\" ref={node => this.redirectButton = node} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLifeDetailContainer.defaultProps = {\r\n  sessionId: null,\r\n  plansData: null,\r\n  lifeDetailForm: null,\r\n};\r\n\r\nLifeDetailContainer.propTypes = {\r\n  plansData: PropTypes.object,\r\n  piggyCallback: PropTypes.func.isRequired,\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  setFormState: PropTypes.func.isRequired,\r\n  profileValues: PropTypes.object.isRequired,\r\n  lifeFields: PropTypes.object.isRequired,\r\n  sessionId: PropTypes.string,\r\n  checkOutOthers: PropTypes.func.isRequired,\r\n  selectedPlanData: PropTypes.object.isRequired,\r\n  loading: PropTypes.func.isRequired,\r\n  lifeForm: PropTypes.object.isRequired,\r\n  lifeDetailForm: PropTypes.object,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  lifeForm: getFormValues('life')(state),\r\n  lifeDetailForm: getFormValues('life-detail')(state),\r\n  lifeFields: state.life.lifeFields,\r\n  profileValues: state.userDetails,\r\n  plansData: state.life.selectedPlanData,\r\n  sessionId: state.insurance.sessionId,\r\n  selectedPlanData: state.life.selectedPlanData,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getAnonymousSession: (params) => {\r\n    dispatch(getAnonymousSession(params, true));\r\n  },\r\n  setFormState: (state) => {\r\n    dispatch(setInsuranceFormState(state));\r\n  },\r\n  loading: (callBack, errorMsg, time) => {\r\n    dispatch(setLoading(callBack, errorMsg, time));\r\n  },\r\n});\r\n\r\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => ({\r\n  ...ownProps,\r\n  ...propsFromState,\r\n  ...propsFromDispatch,\r\n  checkOutOthers: (detailForm) => {\r\n    propsFromDispatch.getAnonymousSession(getSessionParams(\r\n      propsFromState.lifeForm,\r\n      detailForm,\r\n      propsFromState.plansData,\r\n    ), true);\r\n  },\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps, mergeProps)(LifeDetailContainer));\r\n","module.exports = __webpack_public_path__ + \"static/media/arrow.6b6008ba.svg\";","/**\r\n * FormInputWrapper.js\r\n * Custom form dropdown menu with input\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './FormInputWrapper.scss';\r\n\r\n/**\r\n * Custom Form Dropdown class\r\n */\r\nclass FormInputWrapper extends Component {\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (prevState.errorString !== nextProps.errorString) {\r\n      return {\r\n        errorString: nextProps.errorString,\r\n        refValue: nextProps.refValue,\r\n      };\r\n    }\r\n\r\n    if (nextProps.validateForm && prevState.errorString && prevState.refValue !== nextProps.refValue) {\r\n      nextProps.validateForm();\r\n      return {\r\n        errorString: null,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {object} props Component props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errorString: null,\r\n    };\r\n\r\n    this.setErrorString = this.setErrorString.bind(this);\r\n    this.clearErrorString = this.clearErrorString.bind(this);\r\n  }\r\n\r\n  setErrorString(message) {\r\n    this.setState({\r\n      errorString: message,\r\n    });\r\n  }\r\n\r\n  clearErrorString() {\r\n    this.setState({\r\n      errorString: null,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      errorString,\r\n    } = this.state;\r\n\r\n    const {\r\n      desc,\r\n      extraInfo,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"input-wrapper-main input-wrapper-error\">\r\n        {\r\n          desc !== null ?\r\n            <p className=\"input-wrapper-desc\">{desc}</p>\r\n          :\r\n            null\r\n        }\r\n        {this.props.children}\r\n        {\r\n          extraInfo !== null ?\r\n            <div className=\"extra-info-container\">\r\n              {extraInfo}\r\n            </div>\r\n          :\r\n            null\r\n        }\r\n        {\r\n          errorString !== null ?\r\n            <p className=\"input-wrapper-error-text\">\r\n              {errorString}\r\n            </p>\r\n          :\r\n            null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormInputWrapper.defaultProps = {\r\n  desc: null,\r\n  extraInfo: null,\r\n};\r\n\r\n\r\nFormInputWrapper.propTypes = {\r\n  desc: PropTypes.string,\r\n  extraInfo: PropTypes.object,\r\n};\r\n\r\nexport default FormInputWrapper;\r\n","module.exports = __webpack_public_path__ + \"static/media/magnifyGlass.4cd15637.svg\";","module.exports = __webpack_public_path__ + \"static/media/CheckoutComplete.0dec4895.svg\";","/**\r\n * CheckoutComplete.js\r\n * Shows this when checkout is complete\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CheckoutCompleteSVG from 'assets/images/common/CheckoutComplete.svg';\r\nimport Button from 'components/FormsV3/Button/Button';\r\nimport Popup from '../Popup/Popup';\r\n\r\nimport './CheckoutPopup.scss';\r\n\r\nclass CheckoutComplete extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      animateStyle: '',\r\n    };\r\n\r\n    this.openCheckoutComplete = this.openCheckoutComplete.bind(this);\r\n  }\r\n\r\n  openCheckoutComplete(userName = null) {\r\n    this.setState({\r\n      animateStyle: 'bounce-in',\r\n      userName,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.popupRef.openPopup();\r\n    }, 10);\r\n  }\r\n\r\n  renderUpperText() {\r\n    const { userName } = this.state;\r\n    const { isQuoteOnly, upperText } = this.props;\r\n\r\n    if (!isQuoteOnly) {\r\n      return (\r\n        <Fragment>\r\n          <p>Thank you for your</p>\r\n          <p><span>purchase, </span><span className=\"focus-text\">{userName}</span></p>\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <p>{upperText || 'Success'}</p>\r\n    );\r\n  }\r\n\r\n  renderMidText() {\r\n    const { isQuoteOnly, midText } = this.props;\r\n\r\n    const message = 'The insurer’s representative will contact you within 2 business days to share with you more about the selected product.';\r\n\r\n    // Our partnered FA representative from Synergy Financial Advisers Pte Ltd will contact you within 48 hours to share with you more about the selected product.\r\n    if (!isQuoteOnly) {\r\n      return (\r\n        <Fragment>\r\n          <p>A copy of the receipt has been sent to</p>\r\n          <p>your inbox.</p>\r\n          <p>{'The policy will be reflected in PolicyPal\\'s APP once approved.'}</p>\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    if (midText !== null) {\r\n      return (\r\n        <Fragment>\r\n          <p>{midText}</p>\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <p>Thanks for submitting your request.</p>\r\n        <p>{message}</p>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  renderButton() {\r\n    const {\r\n      history,\r\n      isQuoteOnly,\r\n      buttonText,\r\n      callback,\r\n    } = this.props;\r\n\r\n    if (!isQuoteOnly) {\r\n      return (\r\n        <Fragment>\r\n          <Button\r\n            className=\"checkout-button\"\r\n            variant=\"medium-flat\"\r\n            width={166}\r\n            height={72}\r\n            onClick={() => history.push('/gotoappstore')}\r\n          >\r\n            <p>Download APP</p>\r\n          </Button>\r\n          <Button\r\n            className=\"checkout-button\"\r\n            variant=\"medium-flat-green\"\r\n            width={166}\r\n            height={72}\r\n            onClick={() => this.popupRef.closePopup()}\r\n          >\r\n            <p>Details</p>\r\n          </Button>\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        className=\"checkout-button\"\r\n        variant=\"medium-flat-green\"\r\n        width={166}\r\n        height={72}\r\n        onClick={() => {\r\n          if (callback) {\r\n            callback();\r\n            this.popupRef.togglePopup(false);\r\n            return;\r\n          }\r\n          history.push('/');\r\n        }}\r\n      >\r\n        <p>{buttonText || 'OK'}</p>\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { animateStyle } = this.state;\r\n    const { isSellLeads, className } = this.props;\r\n\r\n    const extraText = !isSellLeads ? '' : 'In the event that you purchase a plan through our partner, PolicyPal receives a referral fee.';\r\n\r\n    return (\r\n      <Popup\r\n        className={className}\r\n        hideCloseButton ref={(r) => { this.popupRef = r; }}\r\n      >\r\n        <Fragment>\r\n          <div className=\"check-out-popup\">\r\n            <img className={animateStyle} src={CheckoutCompleteSVG} alt=\"CheckoutComplete.svg\" />\r\n            <div className=\"upper-container upper-margin-up\">\r\n              {this.renderUpperText()}\r\n            </div>\r\n            <div className=\"mid-container\">\r\n              {this.renderMidText()}\r\n            </div>\r\n            <div className=\"button-container\">\r\n              {this.renderButton()}\r\n            </div>\r\n            <div className=\"extra-text\"><p>{extraText}</p></div>\r\n          </div>\r\n        </Fragment>\r\n      </Popup>\r\n    );\r\n  }\r\n}\r\n\r\nCheckoutComplete.defaultProps = {\r\n  isQuoteOnly: false,\r\n  isSellLeads: false,\r\n  upperText: null,\r\n  midText: null,\r\n  buttonText: null,\r\n  callback: null,\r\n  className: '',\r\n};\r\n\r\nCheckoutComplete.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  isQuoteOnly: PropTypes.bool,\r\n  isSellLeads: PropTypes.bool,\r\n  upperText: PropTypes.string,\r\n  midText: PropTypes.string,\r\n  buttonText: PropTypes.string,\r\n  callback: PropTypes.func,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default withRouter(CheckoutComplete, { withRef: true });\r\n","/**\r\n * RedirectPopupForm.js\r\n * The form view of the redirect component\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from 'components/FormsV3/Button/Button';\r\nimport TextInput from '../../Forms/TextInput/TextInput';\r\nimport Selection from '../../Forms/Selection/Selection';\r\n\r\nimport { validateForm } from '../../../lib/validators';\r\n\r\n\r\nclass RedirectPopupForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errorString: null,\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    const { onConfirm, category, noEmail } = this.props;\r\n    const email = noEmail ? [] : ['email'];\r\n\r\n    const errorResult = validateForm(e, [...email, 'disclaimer']);\r\n\r\n    if (!noEmail && errorResult.email) {\r\n      this.setState({\r\n        errorString: 'Invalid email!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (_.isEmpty(e.disclaimer)) {\r\n      this.setState({\r\n        errorString: 'Please agree to the terms to proceed.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!_.isEmpty(errorResult)) {\r\n      this.setState({\r\n        errorString: 'Please fill in all fields!',\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      errorString: null,\r\n    });\r\n\r\n    onConfirm({ ...e, category });\r\n  }\r\n\r\n  render() {\r\n    const { errorString } = this.state;\r\n    const {\r\n      handleSubmit,\r\n      form,\r\n      change,\r\n      noEmail,\r\n    } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit(this.handleSubmit)}>\r\n        <div className=\"mid-container\">\r\n          <Row noGutters>\r\n            {\r\n              noEmail ?\r\n                null\r\n              :\r\n                <Col xs={12}>\r\n                  <TextInput\r\n                    form={form}\r\n                    change={change}\r\n                    name=\"email\"\r\n                    placeholderString=\"\"\r\n                    size=\"medium\"\r\n                    zIndex={99}\r\n                    desc=\"Email Address\"\r\n                  />\r\n                </Col>\r\n            }\r\n            <Col xs={12}>\r\n              <Selection\r\n                form={form}\r\n                change={change}\r\n                name=\"disclaimer\"\r\n                type=\"checkbox\"\r\n                options={[\r\n                  { key: 'disclaimer', description: 'I agree to store this policy in my PolicyPal account after purchase, in accordance with the Personal Data Protection Act.' },\r\n                ]}\r\n                sizeInSM={12}\r\n                desc=\"\"\r\n              />\r\n            </Col>\r\n            {\r\n              errorString ?\r\n                <Col xs={12}>\r\n                  <p className=\"error-string\">{errorString}</p>\r\n                </Col>\r\n              :\r\n                null\r\n            }\r\n          </Row>\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"checkout-button\"\r\n            variant=\"medium-flat-green\"\r\n            width={166}\r\n            height={72}\r\n          >\r\n            <p>Confirm</p>\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nRedirectPopupForm.defaultProps = {\r\n  category: null,\r\n  noEmail: false,\r\n};\r\n\r\nRedirectPopupForm.propTypes = {\r\n  onConfirm: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  form: PropTypes.string.isRequired,\r\n  change: PropTypes.func.isRequired,\r\n  category: PropTypes.string,\r\n  noEmail: PropTypes.bool,\r\n};\r\n\r\nexport default reduxForm({\r\n  form: 'redirect-form',\r\n})(RedirectPopupForm);\r\n","/**\r\n * RedirectPopup.js\r\n * Popup to inform users that we are redirecting\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport RedirectPopupForm from './RedirectPopupForm';\r\nimport Popup from '../Popup/Popup';\r\n\r\nimport './RedirectPopup.scss';\r\n\r\nclass RedirectPopup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      category: null,\r\n    };\r\n\r\n    this.openRedirectPopup = this.openRedirectPopup.bind(this);\r\n  }\r\n\r\n  openRedirectPopup(category) {\r\n    this.setState({\r\n      category,\r\n    });\r\n    setTimeout(this.popupRef.openPopup, 100);\r\n  }\r\n\r\n  render() {\r\n    const { category } = this.state;\r\n    const { onConfirm, noEmail } = this.props;\r\n\r\n    return (\r\n      <Popup ref={(r) => { this.popupRef = r; }}>\r\n        <Fragment>\r\n          <div className=\"redirect-popup\">\r\n            <div className=\"upper-container\">\r\n              <p>{'Kindly fill up the following section before we redirect you to the insurer\\'s page. The details below will be used for verification with the insurer after purchase.'}</p>\r\n            </div>\r\n            <RedirectPopupForm\r\n              noEmail={noEmail}\r\n              closPopup={() => this.popupRef.closePopup()}\r\n              onConfirm={onConfirm}\r\n              category={category}\r\n            />\r\n          </div>\r\n        </Fragment>\r\n      </Popup>\r\n    );\r\n  }\r\n}\r\n\r\nRedirectPopup.defaultProps = {\r\n  noEmail: false,\r\n};\r\n\r\nRedirectPopup.propTypes = {\r\n  onConfirm: PropTypes.func.isRequired,\r\n  noEmail: PropTypes.bool,\r\n};\r\n\r\nexport default RedirectPopup;\r\n\r\n"],"sourceRoot":""}