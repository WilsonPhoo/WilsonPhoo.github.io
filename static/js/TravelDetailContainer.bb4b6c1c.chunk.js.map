{"version":3,"sources":["assets/images/forms/TickRounded.svg","components/FormsV3/SingleCheckBox/SingleCheckBox.js","components/Templates/DetailForm/DetailFormNew.js","components/Travel/TravelDetail.js","containers/Travel/TravelDetailContainer.js","components/Forms/FormInputWrapper/FormInputWrapper.js","components/Forms/Selection/Selection.js","components/Forms/TextInput/TextInput.js","assets/images/forms/EditButton.svg","assets/images/common/CheckIcon.svg","components/Templates/RedirectPopup/RedirectPopupForm.js","components/Templates/RedirectPopup/RedirectPopup.js","components/Templates/ChangeInitialFormData/ChangeInitialFormDataNew.js"],"names":["module","exports","__webpack_require__","p","SingleCheckBox","_this$props","this","props","id","onChange","checked","checkedStyle","react_default","a","createElement","className","concat","onClick","tabIndex","onKeyDown","role","src","TickRounded","alt","children","Component","defaultProps","DetailFormNew","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","rightStickyStyle","isSignUp","handlePreSubmit","bind","assertThisInitialized","handleScroll","renderSignUp","renderSignUpButton","renderUpperRightContainer","renderBottomContainer","window","addEventListener","scrollTo","$","hide","show","removeEventListener","e","onSubmit","login","loginContainer","setSuccessCallback","setInitialIndex","popup","openPopup","upperMarker","stickyStyle","getBoundingClientRect","y","setState","_this$props2","isLoggedIn","piggyCallback","category","planDetails","PiggyFillFormNew","cashback","isPlanTotal","_this2","signUpStyle","FormsV3_SingleCheckBox_SingleCheckBox","_this3","_this$props3","checkoutButtonDesc","editForm","values","react","ref","node","upperRightContainer","logo","logoDesc","planName","planTotal","ChangeInitialFormDataNew","displayOnly","form","headerValue","valuesToListen","conditions","planSubTotal","discountPercentage","discountAmount","Button","variant","height","LabelImg","_this$props4","selectedPlanData","planType","_","startCase","_this4","errorArray","reactstrap_es","noGutters","xs","lg","connect","defaultFormName","TravelDetail","formName","generateTabs","handleSubmit","renderMain","renderFields","renderForm","tabView","isEmpty","planData","name","plan_type","value","result","num_adult","_loop","i","push","desc","numAdults","_loop2","numChildren","fields","isBlk","arguments","length","undefined","detailValues","detailErrors","onChangeDetailValue","handlePostCode","map","f","index","FieldGenerator","key","errors","fieldData","onChangeValue","type","extraInfo","extra_info","noInternalDesc","no_internal_desc","adult_0","getIndividualFields","adultFields","childFields","iFields","includes","TabViewNew","maxTabWidthPx","tabs","isDataFadeOnly","scrollTabs","Templates_DetailForm_DetailFormNew","constants","insurance","TravelDetailContainer","Logos","others","discountTripType","tripType","getFormValue","trip_type","premium","policy_info","discountData","info","discount","price","amount","insurer_slug","insurer_name","product_name","net_price","toFixed","display","error","num_children","travelRedirect","submitCallback","setFormState","doSetCategoryNavBar","FORMSTATES","DETAILFORM","fbTag","Product","gaTag","page_title","page_path","ampTag","document","body","style","backgroundColor","isNormalAddress","postcode","postal","getPostal","street","block","concatAddress","validateForm","validateRestrictionParams","toString","birth_dates","adults","adultName","errorPersons","errorTabIndex","validated","moment","birth_date","format","validateResult","reduce","person","isLast","restrictionValid","validateRestrictions","restrictionResult","valid","Click_Text","gaEvent","event_category","event_label","idtype","id_type","nationality","gender","marital","marital_status","race","occupation","wrappedInstance","goToIndex","scrollHeight","history","deep_link","integration_type","CHECKOUT","path","RedirectPop","openRedirectPopup","handleAPI","postToRedirect","location","url","redirectButton","firstChild","removeChild","range","createRange","appendChild","createContextualFragment","form_html","setTimeout","form_id","get","submit","_this$state","Travel_TravelDetail","assign","normalIndividualFields","etiqaMsigIndividualFields","getValuesToListen","RedirectPopup","noEmail","onConfirm","withRouter","dispatch","getAnonymousSession","params","setInsuranceFormState","isCategory","setCategoryNavBar","FormInputWrapper","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","errorString","setErrorString","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","clearErrorString","nextProps","prevState","refValue","message","react__WEBPACK_IMPORTED_MODULE_6___default","Selection","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","selections","formStore","storeValues","storeValuesArray","constructor","Array","resultState","forEach","v","getStoreSelection","noEmptyTextSelection","setInitialValue","prevProps","option","change","toggleResult","newSelections","noUpdate","mapValues","findKey","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","each","k","options","selectionState","CheckIcon","description","_this$props5","sizeInSM","onKeyPress","onToggleSelection","renderSelectionInsides","reactstrap__WEBPACK_IMPORTED_MODULE_10__","sm","_this$props6","_FormInputWrapper_FormInputWrapper__WEBPACK_IMPORTED_MODULE_13__","formParent","marginTop","redux_form__WEBPACK_IMPORTED_MODULE_8__","component","renderSelectionIcon","PureComponent","ownProps","getFormValues","mediumHeight","bigHeight","TextInput","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","size","heightToUse","isFocus","handleFocus","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","handleBlur","setError","clearError","renderTextArea","preventDefault","storeValue","addressFields","formChange","blkNo","address","input","_ref","placeholderString","react__WEBPACK_IMPORTED_MODULE_8___default","placeholder","rows","cols","zIndex","isPassword","isTextArea","isPostCode","toUpper","focusStyle","passwordType","errorStyle","_FormInputWrapper_FormInputWrapper__WEBPACK_IMPORTED_MODULE_14__","onFocus","onBlur","redux_form__WEBPACK_IMPORTED_MODULE_10__","normalize","toUpperCase","MagnifyGlass","RedirectPopupForm","email","errorResult","disclaimer","objectSpread","width","reduxForm","popupRef","Popup","r","RedirectPopup_RedirectPopupForm","closPopup","closePopup","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","modal","revertFunc","isToolTip","renderDetailValues","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","renderEditButton","toggle","isResp","conditonValue","valuesArrayToListen","react__WEBPACK_IMPORTED_MODULE_9___default","data","findIndex","displayValue","isArray","customFunc","extra","simplifyCost","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","aggregateDesc","display_name","Date","jsx","comma","react__WEBPACK_IMPORTED_MODULE_9__","target","isOpen","idx","onMouseMove","EditButton","components_FormsV3_Button_Button__WEBPACK_IMPORTED_MODULE_12__","backdropClassName","React","cloneElement","closePopUp","func","setCloseCallBack"],"mappings":"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","file":"static/js/TravelDetailContainer.bb4b6c1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TickRounded.10b686e1.svg\";","/**\n * DropDown.js\n * Custom form dropdown menu with input\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport TickRounded from 'assets/images/forms/TickRounded.svg';\n\nimport './SingleCheckBox.scss';\n\n\n/**\n * Custom Form Dropdown class\n */\nclass SingleCheckBox extends Component {\n  render() {\n    const {\n      id,\n      onChange,\n      checked,\n    } = this.props;\n\n    const checkedStyle = checked ? 'single-check-box-checked' : 'single-check-box-non-checked';\n\n    return (\n      <div\n        className={`single-check-box-container ${checkedStyle}`}\n        id={id}\n        onClick={onChange}\n        checked={checked}\n        tabIndex={-1}\n        onKeyDown={null}\n        role=\"button\"\n      >\n        <div className=\"bg\" />\n        <div className=\"box\">\n          <img src={TickRounded} alt=\"Tick.svg\" />\n        </div>\n        <p className=\"desc\">\n          {this.props.children}\n        </p>\n      </div>\n    );\n  }\n}\n\nSingleCheckBox.defaultProps = {\n  checked: false,\n};\n\n\nSingleCheckBox.propTypes = {\n  id: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checked: PropTypes.bool,\n};\n\nexport default SingleCheckBox;\n","/**\n * DetailForm.js\n * Wrapper that contains the piggy login and the\n * right container to checkout or choose plan\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport $ from 'jquery';\nimport window from 'global/window';\nimport _ from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'reactstrap';\n\nimport LabelImg from 'assets/images/forms/Label.svg';\n\n// Import Insurer Logos\nimport PiggyFillForm from 'components/Templates/PiggySignUp/PiggyFillFormNew';\nimport ChangeInitialFormDataNew from 'components/Templates/ChangeInitialFormData/ChangeInitialFormDataNew';\n\nimport Button from 'components/FormsV3/Button/Button';\nimport SingleCheckBox from 'components/FormsV3/SingleCheckBox/SingleCheckBox';\n\nimport './DetailFormNew.scss';\n\nclass DetailFormNew extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rightStickyStyle: 'right-scroll',\n      isSignUp: false,\n    };\n\n    this.handlePreSubmit = this.handlePreSubmit.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.renderSignUp = this.renderSignUp.bind(this);\n    this.renderSignUpButton = this.renderSignUpButton.bind(this);\n    this.renderUpperRightContainer = this.renderUpperRightContainer.bind(this);\n    this.renderBottomContainer = this.renderBottomContainer.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n    window.scrollTo(0, 0);\n    this.handleScroll();\n\n    if ($('#intercom-container')) {\n      $('#intercom-container').hide();\n    }\n  }\n\n  componentWillUnmount() {\n    if ($('#intercom-container')) {\n      $('#intercom-container').show();\n    }\n\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handlePreSubmit(e) {\n    const { isSignUp } = this.state;\n    const { onSubmit, login } = this.props;\n    if (isSignUp) {\n      login.loginContainer.setSuccessCallback(() => onSubmit(e));\n      login.loginContainer.setInitialIndex(2);\n      login.popup.openPopup();\n      return;\n    }\n    onSubmit(e);\n  }\n\n  handleScroll() {\n    if (this.upperMarker) {\n      const { rightStickyStyle } = this.state;\n      const stickyStyle = this.upperMarker.getBoundingClientRect().y < 84 ? 'right-sticky' : 'right-scroll';\n\n      if (rightStickyStyle !== stickyStyle) {\n        this.setState({\n          rightStickyStyle: stickyStyle,\n        });\n      }\n    }\n  }\n\n  renderSignUp() {\n    const {\n      isLoggedIn,\n      login,\n      piggyCallback,\n      category,\n      planDetails,\n    } = this.props;\n\n    return (\n      <div className=\"piggy\">\n        <PiggyFillForm\n          isLoggedIn={isLoggedIn}\n          cashback={planDetails && planDetails.cashback}\n          category={category}\n          onClick={() => {\n            login.loginContainer.setSuccessCallback(piggyCallback);\n            login.loginContainer.setInitialIndex(1);\n            login.popup.openPopup();\n          }}\n        />\n      </div>\n    );\n  }\n\n  renderSignUpButton(isPlanTotal) {\n    const { isSignUp } = this.state;\n    const { isLoggedIn } = this.props;\n    const signUpStyle = isPlanTotal ? '' : 'no-total';\n\n    if (!isLoggedIn) {\n      return (\n        <div className={`sign-up ${signUpStyle}`}>\n          <SingleCheckBox\n            id=\"checkbox-detail-form\"\n            onChange={() => this.setState({ isSignUp: !isSignUp })}\n            checked={!!isSignUp}\n          >\n            Sign Up\n          </SingleCheckBox>\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderUpperRightContainer() {\n    const { rightStickyStyle } = this.state;\n\n    const {\n      planDetails,\n      checkoutButtonDesc,\n      editForm,\n      category,\n      values,\n    } = this.props;\n\n    return (\n      <Fragment>\n        <div className=\"d-none d-lg-block\">\n          {this.renderSignUp()}\n        </div>\n        <div\n          className={`upper-right-container ${rightStickyStyle}`}\n        >\n          <div ref={node => this.upperRightContainer = node} />\n          <div className=\"logo-container\">\n            <div className=\"logo-inner-container\">\n              <img className=\"company-logo\" src={planDetails.logo} alt={`${planDetails.logoDesc}.png`} />\n            </div>\n            <p className=\"plan-name\">{planDetails.planName}</p>\n            {this.renderSignUpButton(planDetails.planTotal)}\n            <ChangeInitialFormDataNew\n              values={values}\n              displayOnly={editForm.displayOnly}\n              form={category}\n              headerValue={editForm.headerValue}\n              valuesToListen={editForm.valuesToListen}\n              conditions={editForm.conditions}\n            />\n          </div>\n          <div className=\"submit-container\">\n            <div className=\"sign-up-container\">\n              {\n                planDetails.planSubTotal ?\n                  <div className=\"cost-container\">\n                    <p>\n                      <span className=\"total-text\">SubTotal</span>\n                      <span className=\"cost-text\">{planDetails.planSubTotal}</span>\n                    </p>\n                    <p className=\"gst-text\">GST 7% included</p>\n                  </div>\n                :\n                  null\n              }\n              {\n                planDetails.discountPercentage && planDetails.discountAmount ?\n                  <div className=\"cost-container\">\n                    <p>\n                      <span className=\"total-text\">Discount {planDetails.discountPercentage}</span>\n                      <span className=\"cost-text\">{planDetails.discountAmount}</span>\n                    </p>\n                  </div>\n                :\n                  null\n              }\n            </div>\n            <div className=\"divider\" />\n            <div className=\"sign-up-container\">\n              {\n                planDetails.planTotal ?\n                  <div className=\"cost-container\">\n                    <p>\n                      <span className=\"total-text\">Total</span>\n                      <span className=\"final-cost-text\">{planDetails.planTotal}</span>\n                    </p>\n                  </div>\n                :\n                  null\n              }\n              <Button\n                variant=\"medium-flat-green\"\n                height={48}\n                onClick={this.handlePreSubmit}\n              >\n                <p>{checkoutButtonDesc}</p>\n              </Button>\n              {\n                planDetails.cashback ?\n                  <div className=\"cashback-earned-container\">\n                    <img src={LabelImg} alt=\"Label.svg\" />\n                    <span>Earn {planDetails.cashback} Cashback</span>\n                  </div>\n                :\n                  null\n              }\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n\n  renderBottomContainer() {\n    const { rightStickyStyle } = this.state;\n\n    const {\n      planDetails,\n      checkoutButtonDesc,\n      selectedPlanData,\n      isLoggedIn,\n    } = this.props;\n\n    return (\n      <Fragment>\n        <div\n          className={`bottom-container ${rightStickyStyle}`}\n        >\n          <div className=\"bottom-inner-container\">\n            {\n              planDetails.planTotal ?\n                <div className=\"price-container\">\n                  <h5>{planDetails.planName}</h5>\n                  {selectedPlanData && selectedPlanData.planType && <h6>{_.startCase(selectedPlanData.planType)}</h6>}\n                  <h4>\n                    <span>${planDetails.planTotal}</span>\n                    {\n                      planDetails.planSubTotal && <span className=\"price\">{planDetails.planSubTotal}</span>\n                    }\n                  </h4>\n                </div>\n              :\n                null\n            }\n            <div className={`resp-button-container ${isLoggedIn ? 'big' : 'small'}`}>\n              {this.renderSignUpButton(planDetails.planTotal)}\n              <Button\n                variant=\"medium-flat-green\"\n                height={48}\n                onClick={this.handlePreSubmit}\n              >\n                <p>{checkoutButtonDesc}</p>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n\n  render() {\n    const { errorArray } = this.props;\n    return (\n      <Fragment>\n        <Row className=\"detail-main-container-new\" noGutters>\n          <div ref={node => this.upperMarker = node} />\n          <Col xs={12} lg={7}>\n            <div className=\"d-block d-lg-none\">\n              {this.renderSignUp()}\n            </div>\n            <div className=\"detail-left-container\">\n              {this.props.children}\n              {errorArray}\n            </div>\n          </Col>\n          <Col lg={5} className=\"d-none d-lg-block\">\n            {this.renderUpperRightContainer()}\n          </Col>\n          <Col xs={12} className=\"d-block d-lg-none\">\n            {this.renderBottomContainer()}\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\nDetailFormNew.defaultProps = {\n  errorArray: null,\n  checkoutButtonDesc: 'Checkout',\n  editForm: null,\n  selectedPlanData: null,\n  values: null,\n};\n\nDetailFormNew.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  piggyCallback: PropTypes.func.isRequired,\n  planDetails: PropTypes.object.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  errorArray: PropTypes.array,\n  login: PropTypes.object.isRequired,\n  checkoutButtonDesc: PropTypes.string,\n  category: PropTypes.string.isRequired,\n  editForm: PropTypes.object,\n  selectedPlanData: PropTypes.object,\n  values: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n  login: state.login,\n});\n\nexport default connect(mapStateToProps)(DetailFormNew);\n","/**\n * TravelDetail.js\n * Detail View for travel\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Row } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport FieldGenerator from 'components/FormsV3/FieldGenerator';\nimport DetailForm from 'components/Templates/DetailForm/DetailFormNew';\nimport TabView from 'components/Templates/TabView/TabViewNew';\n\nconst defaultFormName = 'adult_0';\n\nclass TravelDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formName: defaultFormName,\n    };\n\n    this.generateTabs = this.generateTabs.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.renderMain = this.renderMain.bind(this);\n    this.renderFields = this.renderFields.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async handleSubmit() {\n    const { handleSubmit } = this.props;\n    const errorArray = await handleSubmit(this.tabView);\n\n    if (!_.isEmpty(errorArray)) {\n      this.setState({\n        errorArray,\n      });\n    }\n  }\n\n  generateTabs() {\n    const { planData, values } = this.props;\n    const name = values.plan_type.value === 'Group' ? 'Person' : 'Adult';\n\n    const result = [];\n    if (values.num_adult && values.num_adult.value) {\n      for (let i = 0; i < planData.numAdults; ++i) {\n        result.push({\n          desc: `${name} ${i + 1}`,\n          onClick: () => { this.setState({ formName: `adult_${i}` }); },\n        });\n      }\n    }\n\n    for (let i = 0; i < planData.numChildren; ++i) {\n      result.push({\n        desc: `Child ${i + 1}`,\n        onClick: () => { this.setState({ formName: `child_${i}` }); },\n      });\n    }\n    return result;\n  }\n\n  renderFields(fields, isBlk = false) {\n    const { formName } = this.state;\n\n    const {\n      detailValues,\n      detailErrors,\n      onChangeDetailValue,\n      handlePostCode,\n    } = this.props;\n\n    return (\n      <Fragment>\n        {\n          _.map(fields, (f, index) => (\n            <FieldGenerator\n              key={`business-form-${index}`}\n              values={detailValues[formName]}\n              errors={detailErrors[formName]}\n              fieldData={f}\n              onChangeValue={(type, name, value) => onChangeDetailValue(type, name, value, formName)}\n              extraInfo={f.extra_info && <p>{f.extra_info}</p>}\n              noInternalDesc={f.no_internal_desc}\n              handlePostCode={() => handlePostCode(detailValues.adult_0, onChangeDetailValue, !isBlk, 'adult_0')}\n            />\n          ))\n        }\n      </Fragment>\n    );\n  }\n\n  renderMain() {\n    const { formName } = this.state;\n    const {\n      getIndividualFields,\n      adultFields,\n      childFields,\n      selectedPlanData,\n    } = this.props;\n\n    if (formName === defaultFormName) {\n      const iFields = getIndividualFields(selectedPlanData);\n      return this.renderFields(iFields.fields, iFields.isBlk);\n    }\n\n    if (_.includes(formName, 'child_')) {\n      return this.renderFields(childFields);\n    }\n\n    return this.renderFields(adultFields);\n  }\n\n  renderForm() {\n    const { values } = this.props;\n    if (values.plan_type && values.plan_type.value === 'Individual') {\n      return (\n        <Row className=\"main-form\" noGutters>\n          {this.renderMain()}\n        </Row>\n      );\n    }\n\n    return (\n      <TabView\n        ref={node => this.tabView = node}\n        maxTabWidthPx={128}\n        className=\"tabview-margin-top\"\n        tabs={this.generateTabs()}\n        isDataFadeOnly\n        name=\"travel-detail-tab\"\n        scrollTabs\n      >\n        <Row className=\"main-form\" noGutters>\n          {this.renderMain()}\n        </Row>\n      </TabView>\n    );\n  }\n\n  render() {\n    const { errorArray } = this.state;\n    const {\n      isLoggedIn,\n      planDetails,\n      piggyCallback,\n      selectedPlanData,\n      values,\n      valuesToListen,\n      conditions,\n    } = this.props;\n\n    return (\n      <DetailForm\n        category=\"travel\"\n        values={values}\n        // planChange={() => {}}\n        onSubmit={this.handleSubmit}\n        planDetails={planDetails}\n        selectedPlanData={selectedPlanData}\n        isLoggedIn={isLoggedIn}\n        piggyCallback={piggyCallback}\n        errorArray={errorArray}\n        editForm={{\n          displayOnly: true,\n          valuesToListen: valuesToListen(values),\n          conditions,\n        }}\n      >\n        {this.renderForm()}\n      </DetailForm>\n    );\n  }\n}\n\nTravelDetail.defaultProps = {\n  detailValues: null,\n  detailErrors: null,\n  values: null,\n};\n\nTravelDetail.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  planDetails: PropTypes.object.isRequired,\n  piggyCallback: PropTypes.func.isRequired,\n  planData: PropTypes.object.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  getIndividualFields: PropTypes.func.isRequired,\n  selectedPlanData: PropTypes.object.isRequired,\n  childFields: PropTypes.array.isRequired,\n  adultFields: PropTypes.array.isRequired,\n  valuesToListen: PropTypes.func.isRequired,\n  conditions: PropTypes.object.isRequired,\n  handlePostCode: PropTypes.func.isRequired,\n  values: PropTypes.object,\n  detailValues: PropTypes.object,\n  detailErrors: PropTypes.object,\n  onChangeDetailValue: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  constants: state.insurance.constants,\n});\n\nexport default connect(mapStateToProps)(TravelDetail);\n","/**\n * TravelDetailContainer.js\n * The detail container for travel\n *\n * @version 0.0.1\n * @author [Wilson](wilson@policypal.com)\n */\nimport $ from 'jquery';\nimport document from 'global/document';\nimport window from 'global/window';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Import Insurer Logos\nimport Logos from 'assets/images/InsurerLogos';\n\nimport RedirectPopup from 'components/Templates/RedirectPopup/RedirectPopup';\nimport TravelDetail from 'components/Travel/TravelDetail';\n\nimport { setCategoryNavBar } from 'actions/navActions';\nimport { postToRedirect, validateRestrictions } from 'actions/travelActions';\nimport { setInsuranceFormState, getAnonymousSession, getPostal, FORMSTATES } from 'actions/insuranceActions';\n\nimport { fbTag, gaTag, gaEvent, ampTag } from 'lib/tagFunctions';\nimport { getFormValue } from 'lib/helperFunctions';\n\nimport {\n  normalIndividualFields,\n  etiqaMsigIndividualFields,\n  adultFields,\n  childFields,\n  getValuesToListen,\n  conditions,\n  getIndividualFields,\n} from './Travel.constants';\n\nclass TravelDetailContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    const { values, selectedPlanData, planType } = this.props;\n\n    let planDetails = {\n      logo: Logos.others,\n      logoDesc: '',\n      planName: '',\n      planTotal: null,\n    };\n\n    try {\n      let discountTripType = 'default';\n      const tripType = getFormValue(values.trip_type);\n      if (tripType) {\n        discountTripType = tripType === 'Single Trip' ? 'single' : 'annual';\n      }\n\n      const { premium } = selectedPlanData.policy_info[planType];\n      const discountData = selectedPlanData.info.discount ? selectedPlanData.info.discount[discountTripType] : null;\n      const discount = discountData ? premium.price * discountData.amount : null;\n\n      planDetails = {\n        logo: Logos[selectedPlanData.info.insurer_slug],\n        logoDesc: `${selectedPlanData.info.insurer_name}.svg`,\n        planName: selectedPlanData.info.product_name,\n        planTotal: `$${premium.net_price.toFixed(2)}`,\n        planSubTotal: `$${premium.price.toFixed(2)}`,\n        discountPercentage: discountData ? discountData.display : null,\n        discountAmount: discount && discount !== 0 ? `$${(premium.price * discountData.amount).toFixed(2)}` : null,\n        cashback: selectedPlanData.info.cashback ? `$${(selectedPlanData.info.cashback * premium.net_price).toFixed(2)}` : null,\n      };\n    } catch (error) {\n      // eslint-disable-next-line\n    }\n\n    if (values) {\n      this.state = {\n        planData: {\n          planType,\n          numAdults: getFormValue(values.num_adult),\n          numChildren: getFormValue(values.num_children),\n        },\n        planDetails,\n      };\n    }\n\n    this.travelRedirect = this.travelRedirect.bind(this);\n    this.submitCallback = this.submitCallback.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handlePostCode = this.handlePostCode.bind(this);\n  }\n\n  componentDidMount() {\n    const { setFormState, doSetCategoryNavBar } = this.props;\n    setFormState(FORMSTATES.DETAILFORM.index);\n    fbTag('PPS2 - Pageview - Travel - DetailForm', { Product: 'Travel' });\n    gaTag({\n      page_title: 'Travel - Detail Form',\n      page_path: '/travel/detailform',\n    });\n    ampTag('TravelDetailsS');\n    document.body.style.backgroundColor = '#F9FAFF';\n    doSetCategoryNavBar(true);\n  }\n\n  componentWillUnmount() {\n    const { doSetCategoryNavBar } = this.props;\n    document.body.style.backgroundColor = '#FFFFFF';\n    doSetCategoryNavBar(false);\n  }\n\n  async handlePostCode(values, onChangeDetailValue, isNormalAddress, formName = null) {\n    try {\n      if (values) {\n        const postcode = values.postal.value;\n        const result = await getPostal(postcode);\n        if (result) {\n          // const streetName = result.name === '' ? '' : `${result.name} `;\n          const street = result.street === '' ? '' : `${result.street} `;\n          const block = result.block === '' ? '' : `${result.block} `;\n          // let concatAddress = `${block}${streetName}${street}`;\n          let concatAddress = `${block}${street}`;\n\n          if (!isNormalAddress) {\n            onChangeDetailValue('text', 'blk_no', result.block, formName);\n            concatAddress = street;\n          }\n\n          onChangeDetailValue('text', 'address', concatAddress, formName);\n        }\n      }\n    } catch (error) {\n      // eslint-disable-next-line\n    }\n  }\n\n  async handleSubmit(tabView) {\n    const {\n      values,\n      detailValues,\n      selectedPlanData,\n      validateForm,\n    } = this.props;\n\n    try {\n      const numAdults = getFormValue(values.num_adult);\n      const numChildren = getFormValue(values.num_children);\n\n      const iFields = getIndividualFields(selectedPlanData);\n\n      const validateRestrictionParams = {\n        plan_type: getFormValue(values.plan_type),\n        trip_type: getFormValue(values.trip_type),\n        num_adult: numAdults.toString(),\n        num_children: numChildren.toString(),\n        insurer_slug: selectedPlanData.info.insurer_slug,\n        product_name: selectedPlanData.info.product_name,\n        birth_dates: {\n          adults: [],\n          children: [],\n        },\n      };\n\n      const adultName = getFormValue(values.plan_type) === 'Group' ? 'Person' : 'Adult';\n\n      let errorArray = null;\n      const errorPersons = [];\n      let errorTabIndex = null;\n\n      let validated = await validateForm('adult_0', null, iFields.fields, { insurer_slug: selectedPlanData.info.insurer_slug });\n      if (!validated) {\n        errorPersons.push(`${adultName} 1`);\n        errorTabIndex = 0;\n      } else {\n        validateRestrictionParams.birth_dates.adults.push(moment(getFormValue(detailValues.adult_0.birth_date)).format('DD/MM/YYYY'));\n      }\n\n      for (let i = 1; i < numAdults; ++i) {\n        const name = `adult_${i}`;\n        // eslint-disable-next-line\n        const validateResult = await validateForm(name, null, adultFields);\n        validated = validated ? validateResult : false;\n\n        if (!validateResult) {\n          errorPersons.push(`${adultName} ${i + 1}`);\n          errorTabIndex = i;\n        } else {\n          validateRestrictionParams.birth_dates.adults.push(moment(getFormValue(detailValues[name].birth_date)).format('DD/MM/YYYY'));\n        }\n      }\n\n      for (let i = 0; i < numChildren; ++i) {\n        const name = `child_${i}`;\n        // eslint-disable-next-line\n        const validateResult = await validateForm(name, null, childFields);\n        validated = validated ? validateResult : false;\n\n        if (!validateResult) {\n          errorPersons.push(`Child ${i + 1}`);\n          errorTabIndex = numAdults + i;\n        } else {\n          validateRestrictionParams.birth_dates.children.push(moment(getFormValue(detailValues[name].birth_date)).format('DD/MM/YYYY'));\n        }\n      }\n\n      if (!validated && errorPersons.length > 0) {\n        errorArray = _.reduce(errorPersons, (result, person, index) => {\n          const isLast = index === errorPersons.length - 1;\n          return `${result} ${person}${isLast ? '' : ','}`;\n        }, 'Forms not filled for: ');\n        errorArray = [<p className=\"error-string\" key=\"error-1\">{errorArray}</p>];\n      }\n\n      let restrictionValid = false;\n      if (validated) {\n        const restrictionResult = await validateRestrictions(validateRestrictionParams);\n        restrictionValid = restrictionResult && restrictionResult.valid;\n\n        if (!restrictionResult) {\n          errorArray = [<p className=\"error-string\" key=\"error-1\">Birth date validation failed! Please try again.</p>];\n        } else if (!restrictionResult.valid) {\n          errorArray = _.map(restrictionResult.errors, (error, index) => (\n            <p className=\"error-string\" key={`error-${index}`}>{error}</p>\n          ));\n        }\n\n        if (restrictionValid) {\n          fbTag('PPS2 - ButtonClick - Travel - DetailForm_Checkout', { Product: 'Travel', Click_Text: 'Checkout' });\n          gaEvent('Travel - DetailForm - Checkout', {\n            event_category: 'Travel',\n            event_label: 'Travel - DetailForm - Checkout',\n          });\n          ampTag('TravelCheckoutA', {\n            idtype: getFormValue(detailValues.adult_0.id_type),\n            nationality: getFormValue(detailValues.adult_0.nationality),\n            gender: getFormValue(detailValues.adult_0.gender),\n            marital: getFormValue(detailValues.adult_0.marital_status),\n            race: getFormValue(detailValues.adult_0.race),\n            occupation: getFormValue(detailValues.adult_0.occupation),\n          });\n\n          this.submitCallback();\n          return [];\n        }\n      }\n\n      if (tabView && errorTabIndex !== null) {\n        tabView.wrappedInstance.goToIndex(errorTabIndex);\n      }\n\n      if (!restrictionValid) {\n        window.scrollTo(0, document.body.scrollHeight);\n      }\n\n      return errorArray;\n    } catch (error) {\n      // eslint-disable-next-line\n    }\n\n    return [];\n  }\n\n  submitCallback() {\n    const { selectedPlanData, history } = this.props;\n    // console.log(selectedPlanData);\n    if (selectedPlanData.info.deep_link.integration_type === 'webview') {\n      this.RedirectPop.openRedirectPopup();\n\n      return;\n    }\n\n    this.props.setFormState(FORMSTATES.CHECKOUT.index);\n    history.push(`/travel${FORMSTATES.CHECKOUT.path}`);\n  }\n\n  async travelRedirect() {\n    const {\n      values,\n      detailValues,\n      planType,\n      selectedPlanData,\n      handleAPI,\n    } = this.props;\n\n\n    const result = await handleAPI(() => postToRedirect(values, detailValues, selectedPlanData, planType));\n    if (result) {\n      if (selectedPlanData.info.insurer_slug === 'fwd') {\n        window.location = result.url;\n      } else if (selectedPlanData.info.insurer_slug === 'etiqa' || selectedPlanData.info.insurer_slug === 'tiq') {\n        while (this.redirectButton.firstChild) {\n          this.redirectButton.removeChild(this.redirectButton.firstChild);\n        }\n        const range = document.createRange();\n        this.redirectButton.appendChild(range.createContextualFragment(result.form_html));\n\n        setTimeout(() => $(`#${result.form_id}`).get(0).submit(), 300);\n      }\n    }\n  }\n\n  render() {\n    const { planData, planDetails } = this.state;\n    // const { history } = this.props;\n\n    return (\n      <div className=\"travel-detail-container\">\n        <TravelDetail\n          {...this.props}\n          planData={planData}\n          planDetails={planDetails}\n          // changePlan={() => {\n          //   history.goBack();\n          //   fbTag('PPS2 - ButtonClick - Travel - DetailForm_ChangePlan', { Product: 'Travel', Click_Text: 'ChangePlan' });\n          //   gaEvent('Travel - DetailForm - ChangePlan', {\n          //     event_category: 'Travel',\n          //     event_label: 'Travel - DetailForm - ChangePlan',\n          //   });\n          // }}\n          normalIndividualFields={normalIndividualFields}\n          etiqaMsigIndividualFields={etiqaMsigIndividualFields}\n          adultFields={adultFields}\n          childFields={childFields}\n          valuesToListen={getValuesToListen}\n          conditions={conditions}\n          getIndividualFields={getIndividualFields}\n          handlePostCode={this.handlePostCode}\n          handleSubmit={this.handleSubmit}\n        />\n        <RedirectPopup\n          ref={node => this.RedirectPop = node}\n          noEmail\n          onConfirm={this.travelRedirect}\n        />\n        <div className=\"redirect-button\" ref={node => this.redirectButton = node} />\n      </div>\n    );\n  }\n}\n\nTravelDetailContainer.defaultProps = {\n};\n\nTravelDetailContainer.propTypes = {\n  setFormState: PropTypes.func.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  piggyCallback: PropTypes.func.isRequired,\n  selectedPlanData: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  doSetCategoryNavBar: PropTypes.func.isRequired,\n};\n\n// const mapStateToProps = state => ({\n// });\n\nconst mapDispatchToProps = dispatch => ({\n  getAnonymousSession: (params) => {\n    dispatch(getAnonymousSession(params, true));\n  },\n  setFormState: (state) => {\n    dispatch(setInsuranceFormState(state));\n  },\n  doSetCategoryNavBar: (isCategory) => {\n    dispatch(setCategoryNavBar(isCategory));\n  },\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(TravelDetailContainer));\n","/**\n * FormInputWrapper.js\n * Custom form dropdown menu with input\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FormInputWrapper.scss';\n\n/**\n * Custom Form Dropdown class\n */\nclass FormInputWrapper extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.errorString !== nextProps.errorString) {\n      return {\n        errorString: nextProps.errorString,\n        refValue: nextProps.refValue,\n      };\n    }\n\n    if (nextProps.validateForm && prevState.errorString && prevState.refValue !== nextProps.refValue) {\n      nextProps.validateForm();\n      return {\n        errorString: null,\n      };\n    }\n    return null;\n  }\n  /**\n   * Constructor\n   *\n   * @param {object} props Component props\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorString: null,\n    };\n\n    this.setErrorString = this.setErrorString.bind(this);\n    this.clearErrorString = this.clearErrorString.bind(this);\n  }\n\n  setErrorString(message) {\n    this.setState({\n      errorString: message,\n    });\n  }\n\n  clearErrorString() {\n    this.setState({\n      errorString: null,\n    });\n  }\n\n  render() {\n    const {\n      errorString,\n    } = this.state;\n\n    const {\n      desc,\n      extraInfo,\n    } = this.props;\n\n    return (\n      <div className=\"input-wrapper-main input-wrapper-error\">\n        {\n          desc !== null ?\n            <p className=\"input-wrapper-desc\">{desc}</p>\n          :\n            null\n        }\n        {this.props.children}\n        {\n          extraInfo !== null ?\n            <div className=\"extra-info-container\">\n              {extraInfo}\n            </div>\n          :\n            null\n        }\n        {\n          errorString !== null ?\n            <p className=\"input-wrapper-error-text\">\n              {errorString}\n            </p>\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nFormInputWrapper.defaultProps = {\n  desc: null,\n  extraInfo: null,\n};\n\n\nFormInputWrapper.propTypes = {\n  desc: PropTypes.string,\n  extraInfo: PropTypes.object,\n};\n\nexport default FormInputWrapper;\n","/**\n * Selection.js\n * Selection with dynamic content\n *\n * @version 0.0.1\n * @author [Jia Hao](jiahao@policypal.com)\n */\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Field, getFormValues } from 'redux-form';\nimport { Row, Col } from 'reactstrap';\nimport _ from 'lodash';\n\nimport CheckIcon from 'assets/images/common/CheckIcon.svg';\n\nimport FormInputWrapper from '../FormInputWrapper/FormInputWrapper';\n\nimport './Selection.scss';\n\nconst marginTopOffset = 10;\n\n/**\n * Custom Selection Class\n */\nclass Selection extends PureComponent {\n  static getStoreSelection(formStore, name) {\n    const storeValues = formStore[name];\n    if (!storeValues) {\n      return null;\n    }\n\n    const storeValuesArray = storeValues.constructor === Array ? storeValues : [storeValues];\n    const resultState = {};\n    _.forEach(storeValuesArray, (v) => {\n      if (v) { resultState[v] = true; }\n    });\n    return resultState;\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { resultState, selections } = prevState;\n    const { formStore, name } = nextProps;\n    if (formStore && formStore[name] !== resultState) {\n      return {\n        resultState: formStore[name],\n        selections: Selection.getStoreSelection(formStore, name) || selections,\n      };\n    }\n\n    return null;\n  }\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selections: {},\n    };\n  }\n\n  componentDidMount() {\n    const {\n      name,\n      formStore,\n      noEmptyTextSelection,\n    } = this.props;\n\n    if (formStore && formStore[name]) {\n      this.setState({\n        selections: Selection.getStoreSelection(formStore, name),\n      });\n\n      return;\n    }\n\n    if (noEmptyTextSelection) {\n      this.setInitialValue();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { name, formStore } = this.props;\n    if (name !== prevProps.name) {\n      const value = formStore[name];\n      if (!value) {\n        this.setInitialValue();\n      }\n    }\n  }\n\n  onToggleSelection(option) {\n    const { selections } = this.state;\n    const {\n      name,\n      type,\n      change,\n      noEmptyTextSelection,\n    } = this.props;\n\n    const { key } = option;\n\n    const toggleResult = !this.state.selections[key];\n\n    let newSelections = {};\n    let resultState = null;\n    let noUpdate = false;\n    switch (type) {\n      case 'text-selection':\n      case 'radio':\n        if (!noEmptyTextSelection || (noEmptyTextSelection && !selections[key])) {\n          newSelections = _.mapValues(selections, () => false);\n          newSelections[key] = toggleResult;\n          resultState = _.findKey(newSelections, v => v);\n        } else {\n          noUpdate = true;\n        }\n        break;\n      case 'checkbox':\n        newSelections = Object.assign({}, selections, { [key]: toggleResult });\n        resultState = [];\n        _.each(newSelections, (v, k) => {\n          if (v) { resultState.push(k); }\n        });\n        break;\n      default: break;\n    }\n\n    if (!noUpdate) {\n      this.setState({ selections: newSelections });\n      change(name, resultState);\n    }\n  }\n\n  setInitialValue() {\n    const {\n      options,\n      change,\n      name,\n    } = this.props;\n\n    const newSelections = { [options[0].key]: true };\n    this.setState({\n      selections: newSelections,\n    });\n    change(name, _.findKey(newSelections, v => v));\n  }\n\n  renderSelectionInsides(option, selectionState) {\n    const { type } = this.props;\n\n    switch (type) {\n      case 'radio':\n        return <div className={`${type}-inner-${selectionState}`} />;\n      case 'checkbox':\n        return <img src={CheckIcon} className={`checkbox-inner-${selectionState}`} alt=\"check\" />;\n      case 'text-selection':\n        return <div className=\"description py-3\">{option.description}</div>;\n      default:\n        return null;\n    }\n  }\n\n  renderSelectionIcon(option) {\n    const { selections } = this.state;\n    const { type, sizeInSM } = this.props;\n    const { key, description } = option;\n    const isSelected = (selections[key] || false);\n    const selectionState = (isSelected) ? 'highlighted' : 'default';\n\n    const children = (\n      <div\n        role=\"button\"\n        onKeyPress={() => {}}\n        onClick={() => this.onToggleSelection(option)}\n        tabIndex={0}\n        className={`${type}-outer-${selectionState}`}\n      >\n        {this.renderSelectionInsides(option, selectionState)}\n      </div>\n    );\n\n    if (type === 'text-selection') {\n      return (\n        <Col sm={sizeInSM} key={key} className=\"text-sel-col\">\n          <div className=\"single-selection\" key={key}>\n            {children}\n          </div>\n        </Col>\n      );\n    }\n\n    return (\n      <Col sm={sizeInSM} key={key}>\n        <div className=\"single-selection\">\n          {children}\n          <div className=\"description\">{description}</div>\n        </div>\n      </Col>\n    );\n  }\n\n  render() {\n    const {\n      name,\n      options,\n      type,\n      desc,\n      extraInfo,\n      errorString,\n    } = this.props;\n\n    return (\n      <FormInputWrapper\n        desc={desc}\n        ref={node => (this.formParent = node)}\n        extraInfo={\n          <div style={{ marginTop: -marginTopOffset }}>\n            {extraInfo}\n          </div>\n        }\n        errorString={errorString}\n      >\n        <Field name={name} component={() => <div />} />\n        <div className=\"selection\">\n          <Row className={(type === 'text-selection') ? 'text-sel-container' : ''}>\n            {\n              _.map(options, option => this.renderSelectionIcon(option))\n            }\n          </Row>\n        </div>\n      </FormInputWrapper>\n    );\n  }\n}\n\nSelection.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired, // each option is { key, description }\n  change: PropTypes.func.isRequired,\n  sizeInSM: PropTypes.number,\n  desc: PropTypes.string,\n  formStore: PropTypes.object,\n  extraInfo: PropTypes.object,\n  errorString: PropTypes.string,\n  noEmptyTextSelection: PropTypes.bool,\n};\n\nSelection.defaultProps = {\n  sizeInSM: 12,\n  desc: null,\n  formStore: null,\n  extraInfo: null,\n  errorString: null,\n  noEmptyTextSelection: false,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  formStore: (getFormValues(ownProps.form)(state)),\n});\n\nexport default connect(mapStateToProps, null)(Selection);\n","/**\n * DropDown.js\n * Custom form dropdown menu with input\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, change, getFormValues } from 'redux-form';\nimport PropTypes from 'prop-types';\n\nimport MagnifyGlass from 'assets/images/forms/magnifyGlass.svg';\n\nimport FormInputWrapper from '../FormInputWrapper/FormInputWrapper';\n\nimport { getPostal } from '../../../actions/insuranceActions';\n\nimport './TextInput.scss';\n\n// Height for medium dropdown\nconst mediumHeight = 60;\n// Height for big dropdown\nconst bigHeight = 72;\n\n/**\n * Custom Form Dropdown class\n */\nclass TextInput extends Component {\n  /**\n   * Constructor\n   *\n   * @param {object} props Component props\n   */\n  constructor(props) {\n    super(props);\n\n    // dropList - The passed down dropdown list items\n    // placeholderString - Placeholder string for input\n    // size - Size of this control\n    // numItemsDisplay - Max items to display on view\n    const {\n      size,\n      height,\n    } = this.props;\n\n    // Get the control height\n    let heightToUse = size === 'big' ? bigHeight : mediumHeight;\n    heightToUse = height || heightToUse;\n\n    // isOpened - Whether dropdown is opened\n    // listItems - The actual dropdown list\n    // selectedString - The selected item string\n    // height - Control height\n    // numItemsDisplay - How many items to display\n    // maxheight - Max height of the list\n    // listHeight - Height of the list. (Items count + control)\n    this.state = {\n      height: heightToUse,\n      isFocus: false,\n    };\n\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.setError = this.setError.bind(this);\n    this.clearError = this.clearError.bind(this);\n    this.renderTextArea = this.renderTextArea.bind(this);\n    this.handlePostCode = this.handlePostCode.bind(this);\n  }\n\n  setError(message) {\n    this.formParent.setErrorString(message);\n  }\n\n  clearError() {\n    this.formParent.clearErrorString();\n  }\n\n  handleFocus() {\n    this.setState({\n      isFocus: true,\n    });\n  }\n\n  handleBlur() {\n    this.setState({\n      isFocus: false,\n    });\n  }\n\n  async handlePostCode(e) {\n    e.preventDefault();\n    const {\n      storeValue,\n      name,\n      addressFields,\n      formChange,\n      form,\n    } = this.props;\n\n    if (storeValue) {\n      const postcode = storeValue[name];\n      const result = await getPostal(postcode);\n      if (result) {\n        // const streetName = result.name === '' ? '' : `${result.name} `;\n        const street = result.street === '' ? '' : `${result.street} `;\n        const block = result.block === '' ? '' : `${result.block} `;\n        // let concatAddress = `${block}${streetName}${street}`;\n        let concatAddress = `${block}${street}`;\n\n        if (addressFields.blkNo) {\n          formChange(form, addressFields.blkNo, result.block);\n          concatAddress = street;\n        }\n\n        if (addressFields.address) {\n          formChange(form, addressFields.address, concatAddress);\n        }\n      }\n    }\n  }\n\n  renderTextArea({ input }) {\n    const { placeholderString } = this.props;\n    return (\n      <div className=\"text-area\">\n        <textarea {...input} placeholder={placeholderString} rows=\"10\" cols=\"40\" />\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      height,\n      isFocus,\n    } = this.state;\n\n    const {\n      name,\n      desc,\n      placeholderString,\n      zIndex,\n      isPassword,\n      extraInfo,\n      errorString,\n      isTextArea,\n      storeValue,\n      validateForm,\n      isPostCode,\n      toUpper,\n    } = this.props;\n\n    const focusStyle = isFocus ? 'focus' : '';\n    const passwordType = isPassword ? 'password' : '';\n    const errorStyle = errorString ? 'error' : '';\n\n    const refValue = storeValue ? storeValue[name] : null;\n\n    return (\n      <FormInputWrapper\n        desc={desc}\n        ref={node => (this.formParent = node)}\n        extraInfo={extraInfo}\n        errorString={errorString}\n        refValue={refValue}\n        validateForm={validateForm}\n      >\n        <div\n          className={`text-input-container ${focusStyle} ${errorStyle}`}\n          style={{ height, zIndex }}\n          onFocus={() => this.handleFocus()}\n          onBlur={() => this.handleBlur()}\n        >\n          <div className=\"text-input\">\n            {\n              isTextArea ?\n                <Field\n                  className=\"text\"\n                  component={this.renderTextArea}\n                  name={name}\n                  normalize={value => (value && toUpper ? value.toUpperCase() : value)}\n                />\n                :\n                  <Field\n                    className=\"text\"\n                    component=\"input\"\n                    type={passwordType}\n                    placeholder={placeholderString}\n                    name={name}\n                    normalize={value => (value && toUpper ? value.toUpperCase() : value)}\n                  />\n            }\n            {\n              isPostCode ?\n                <button\n                  className=\"postcode\"\n                  onClick={e => this.handlePostCode(e)}\n                >\n                  <img src={MagnifyGlass} alt=\"magGlass.svg\" />\n                </button>\n              :\n                null\n            }\n          </div>\n        </div>\n      </FormInputWrapper>\n    );\n  }\n}\n\nTextInput.defaultProps = {\n  desc: null,\n  isPassword: false,\n  extraInfo: null,\n  errorString: null,\n  isTextArea: false,\n  height: null,\n  storeValue: null,\n  isPostCode: false,\n  addressFields: null,\n  validateForm: null,\n  toUpper: false,\n};\n\n\nTextInput.propTypes = {\n  placeholderString: PropTypes.string.isRequired,\n  size: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  zIndex: PropTypes.number.isRequired,\n  desc: PropTypes.string,\n  isPassword: PropTypes.bool,\n  extraInfo: PropTypes.object,\n  errorString: PropTypes.string,\n  isTextArea: PropTypes.bool,\n  height: PropTypes.number,\n  validateForm: PropTypes.func,\n  storeValue: PropTypes.object,\n  isPostCode: PropTypes.bool,\n  addressFields: PropTypes.object,\n  toUpper: PropTypes.bool,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  storeValue: (getFormValues(ownProps.form)(state)),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  formChange: (form, key, value) => {\n    dispatch(change(form, key, value));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TextInput);\n","module.exports = __webpack_public_path__ + \"static/media/EditButton.d239c2ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/CheckIcon.22021614.svg\";","/**\n * RedirectPopupForm.js\n * The form view of the redirect component\n *\n * @version 0.0.1\n * @author [Wilson](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { reduxForm } from 'redux-form';\nimport { Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/FormsV3/Button/Button';\nimport TextInput from '../../Forms/TextInput/TextInput';\nimport Selection from '../../Forms/Selection/Selection';\n\nimport { validateForm } from '../../../lib/validators';\n\n\nclass RedirectPopupForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorString: null,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    const { onConfirm, category, noEmail } = this.props;\n    const email = noEmail ? [] : ['email'];\n\n    const errorResult = validateForm(e, [...email, 'disclaimer']);\n\n    if (!noEmail && errorResult.email) {\n      this.setState({\n        errorString: 'Invalid email!',\n      });\n      return;\n    }\n\n    if (_.isEmpty(e.disclaimer)) {\n      this.setState({\n        errorString: 'Please agree to the terms to proceed.',\n      });\n      return;\n    }\n\n    if (!_.isEmpty(errorResult)) {\n      this.setState({\n        errorString: 'Please fill in all fields!',\n      });\n\n      return;\n    }\n\n    this.setState({\n      errorString: null,\n    });\n\n    onConfirm({ ...e, category });\n  }\n\n  render() {\n    const { errorString } = this.state;\n    const {\n      handleSubmit,\n      form,\n      change,\n      noEmail,\n    } = this.props;\n\n    return (\n      <form onSubmit={handleSubmit(this.handleSubmit)}>\n        <div className=\"mid-container\">\n          <Row noGutters>\n            {\n              noEmail ?\n                null\n              :\n                <Col xs={12}>\n                  <TextInput\n                    form={form}\n                    change={change}\n                    name=\"email\"\n                    placeholderString=\"\"\n                    size=\"medium\"\n                    zIndex={99}\n                    desc=\"Email Address\"\n                  />\n                </Col>\n            }\n            <Col xs={12}>\n              <Selection\n                form={form}\n                change={change}\n                name=\"disclaimer\"\n                type=\"checkbox\"\n                options={[\n                  { key: 'disclaimer', description: 'I agree to store this policy in my PolicyPal account after purchase, in accordance with the Personal Data Protection Act.' },\n                ]}\n                sizeInSM={12}\n                desc=\"\"\n              />\n            </Col>\n            {\n              errorString ?\n                <Col xs={12}>\n                  <p className=\"error-string\">{errorString}</p>\n                </Col>\n              :\n                null\n            }\n          </Row>\n        </div>\n        <div className=\"button-container\">\n          <Button\n            type=\"submit\"\n            className=\"checkout-button\"\n            variant=\"medium-flat-green\"\n            width={166}\n            height={72}\n          >\n            <p>Confirm</p>\n          </Button>\n        </div>\n      </form>\n    );\n  }\n}\n\nRedirectPopupForm.defaultProps = {\n  category: null,\n  noEmail: false,\n};\n\nRedirectPopupForm.propTypes = {\n  onConfirm: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  form: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired,\n  category: PropTypes.string,\n  noEmail: PropTypes.bool,\n};\n\nexport default reduxForm({\n  form: 'redirect-form',\n})(RedirectPopupForm);\n","/**\n * RedirectPopup.js\n * Popup to inform users that we are redirecting\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport RedirectPopupForm from './RedirectPopupForm';\nimport Popup from '../Popup/Popup';\n\nimport './RedirectPopup.scss';\n\nclass RedirectPopup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      category: null,\n    };\n\n    this.openRedirectPopup = this.openRedirectPopup.bind(this);\n  }\n\n  openRedirectPopup(category) {\n    this.setState({\n      category,\n    });\n    setTimeout(this.popupRef.openPopup, 100);\n  }\n\n  render() {\n    const { category } = this.state;\n    const { onConfirm, noEmail } = this.props;\n\n    return (\n      <Popup ref={(r) => { this.popupRef = r; }}>\n        <Fragment>\n          <div className=\"redirect-popup\">\n            <div className=\"upper-container\">\n              <p>{'Kindly fill up the following section before we redirect you to the insurer\\'s page. The details below will be used for verification with the insurer after purchase.'}</p>\n            </div>\n            <RedirectPopupForm\n              noEmail={noEmail}\n              closPopup={() => this.popupRef.closePopup()}\n              onConfirm={onConfirm}\n              category={category}\n            />\n          </div>\n        </Fragment>\n      </Popup>\n    );\n  }\n}\n\nRedirectPopup.defaultProps = {\n  noEmail: false,\n};\n\nRedirectPopup.propTypes = {\n  onConfirm: PropTypes.func.isRequired,\n  noEmail: PropTypes.bool,\n};\n\nexport default RedirectPopup;\n\n","/**\n * ChangeInitialFormData.js\n * This is the green pencil button that appears mainly on\n * the compare view which will render the Edit Detail forms\n * of each category.\n *\n * Users will be able to change that form through this component\n * and will do a callback to update any changes, eg for compare view.\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport moment from 'moment';\nimport React, { Component, Fragment } from 'react';\n// import { connect } from 'react-redux';\nimport { Modal, ModalHeader, Tooltip } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport EditButton from 'assets/images/forms/EditButton.svg';\n\nimport Button from 'components/FormsV3/Button/Button';\n\nimport { simplifyCost } from '../../../lib/helperFunctions';\n\nimport './ChangeInitialFormDataNew.scss';\n\nclass ChangeInitialFormDataNew extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modal: false,\n      revertFunc: () => {},\n      isToolTip: false,\n    };\n\n    // this.renderHeader = this.renderHeader.bind(this);\n    this.renderDetailValues = this.renderDetailValues.bind(this);\n    this.renderEditButton = this.renderEditButton.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  // componentDidMount() {\n  //   const { resetSubmit } = this.props;\n\n  //   resetSubmit();\n  // }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   const {\n  //     closePopUp,\n  //     toolTipData,\n  //     modal,\n  //     isToolTip,\n  //   } = this.state;\n  //   const { resetSubmit } = this.props;\n\n  //   if (nextProps.isEditSubmitted) {\n  //     resetSubmit();\n  //   }\n\n  //   return nextProps.isEditSubmitted ||\n  //         closePopUp !== nextState.closePopUp ||\n  //         toolTipData !== nextState.toolTipData ||\n  //         modal !== nextState.modal ||\n  //         isToolTip !== nextState.isToolTip;\n  // }\n\n  toggle(revertFunc) {\n    const { modal } = this.state;\n\n    if (modal && revertFunc) {\n      revertFunc();\n    }\n\n    this.setState({\n      modal: !modal,\n    });\n  }\n\n  // renderHeader() {\n  //   const { headerValue, storeForm } = this.props;\n  //   if (storeForm && headerValue) {\n  //     const value = storeForm[headerValue] ? storeForm[headerValue] : '';\n  //     return <span className=\"edit-detail-header\">{value}</span>;\n  //   }\n\n  //   return null;\n  // }\n\n  renderDetailValues(isResp) {\n    const { isToolTip } = this.state;\n    const {\n      values,\n      valuesToListen,\n      conditions,\n    } = this.props;\n\n    const conditonValue = conditions ? values[conditions.key] && values[conditions.key].value : null;\n    const valuesArrayToListen = conditonValue ? conditions.values[conditonValue] : null;\n\n    if (!values) {\n      return null;\n    }\n\n    return (\n      <div className=\"edit-detail-value-container-new\">\n        {\n          _.reduce(valuesToListen, (result, data, index) => {\n            if (\n              !valuesArrayToListen ||\n              (valuesArrayToListen && _.findIndex(valuesArrayToListen, value => value === data.value) !== -1)\n            ) {\n              const value = values[data.value] ? values[data.value].value : 'None';\n              let displayValue = value;\n              let isArray = false;\n\n              if (data.customFunc) {\n                displayValue = data.customFunc();\n              } else if (data.extra === 'cost_simplify') {\n                displayValue = simplifyCost(value);\n              } else if (value.constructor === Array) {\n                isArray = true;\n                displayValue = [...value];\n                if (data.aggregateDesc && displayValue.length > 1) {\n                  displayValue = `${displayValue.length} ${data.aggregateDesc}`;\n                }\n              } else if (value.constructor === Object) {\n                displayValue = value.display_name;\n              } else if (value.constructor === Date) {\n                displayValue = moment(value).format('DD MMM YYYY');\n              }\n\n              displayValue = displayValue.toString();\n\n              let jsx = null;\n              if (isResp) {\n                const isLast = index === valuesToListen.length - 1;\n                const comma = isLast ? '' : ',';\n                jsx = (\n                  <div key={`detail-${index}`} className=\"detail-resp-value\">{displayValue}{comma}</div>\n                );\n              } else {\n                jsx = (\n                  <div className=\"edit-detail-value\" key={`detail-${index}`}>\n                    <img\n                      src={data.logo}\n                      alt={`${data.value}.svg`}\n                      className=\"detail-logo\"\n                    />\n                    <span className=\"detail-value\">\n                      {displayValue}\n                      {\n                        isArray && value.length > 1 ?\n                          <Fragment>\n                            <Tooltip\n                              target={`initial-form-tooltip-${index}`}\n                              isOpen={isToolTip}\n                              toggle={() => this.setState({ isToolTip: false })}\n                              className=\"animated fade\"\n                            >\n                              {_.map(value, (v, idx) => <p key={`tooltip-value-${idx}`}>{v}</p>)}\n                            </Tooltip>\n                            <div\n                              id={`initial-form-tooltip-${index}`}\n                              className=\"tooltip-button\"\n                              onMouseMove={() => {\n                                this.setState({\n                                  isToolTip: true,\n                                });\n                              }}\n                            >\n                              <p>i</p>\n                            </div>\n                          </Fragment>\n                        :\n                          null\n                      }\n                    </span>\n                  </div>\n                );\n              }\n              result.push(jsx);\n            }\n\n            return result;\n          }, [])\n        }\n      </div>\n    );\n  }\n\n  renderEditButton(isResp) {\n    if (isResp) {\n      return (\n        <div\n          role=\"button\"\n          tabIndex={-1}\n          onKeyDown={() => {}}\n          onClick={() => {\n            // this.popupRef.openPopup();\n            this.toggle();\n          }}\n        >\n          <img src={EditButton} alt=\"EditButton.svg\" />\n        </div>\n      );\n    }\n\n    return (\n      <Button\n        variant=\"medium-outline-edit\"\n        height={40}\n        onClick={() => {\n          // this.popupRef.openPopup();\n          this.toggle();\n        }}\n      >\n        <p>Edit</p>\n      </Button>\n    );\n  }\n\n  render() {\n    const { modal, revertFunc } = this.state;\n    const { submitCallback, displayOnly } = this.props;\n\n    if (displayOnly) {\n      return (\n        this.renderDetailValues(false)\n      );\n    }\n\n    return (\n      <div className=\"change-form-container-new\">\n        <div className=\"edit-detail-container d-none d-lg-flex\">\n          {/* {this.renderHeader()} */}\n          <div className=\"edit-detail-inner-container\">\n            {this.renderDetailValues(false)}\n          </div>\n          {this.renderEditButton(false)}\n        </div>\n        <div className=\"edit-detail-resp-container d-flex d-lg-none\">\n          <div className=\"detail-inner-resp-container\">\n            {this.renderDetailValues(true)}\n          </div>\n          {this.renderEditButton(true)}\n        </div>\n        <Modal\n          isOpen={modal}\n          size=\"lg\"\n          backdropClassName=\"blue-modal-backdrop\"\n        >\n          <ModalHeader toggle={() => this.toggle(revertFunc)} />\n          {React.cloneElement(this.props.children, {\n            submitCallback,\n            closePopUp: (func = () => {}) => { this.toggle(); func(); },\n            setCloseCallBack: (func = () => {}) => this.setState({ revertFunc: func }),\n          })}\n        </Modal>\n        {/* <Popup ref={(r) => { this.popupRef = r; }}>\n          {React.cloneElement(this.props.children, {\n            submitCallback,\n          })}\n        </Popup> */}\n      </div>\n    );\n  }\n}\n\nChangeInitialFormDataNew.defaultProps = {\n  submitCallback: null,\n  conditions: null,\n  headerValue: null,\n  displayOnly: false,\n  values: null,\n};\n\nChangeInitialFormDataNew.propTypes = {\n  valuesToListen: PropTypes.array.isRequired,\n  // storeForm: PropTypes.object.isRequired,\n  // isEditSubmitted: PropTypes.bool.isRequired,\n  // resetSubmit: PropTypes.func.isRequired,\n  submitCallback: PropTypes.func,\n  conditions: PropTypes.object,\n  headerValue: PropTypes.string,\n  displayOnly: PropTypes.bool,\n  values: PropTypes.object,\n};\n\n// const mapStateToProps = (state, ownProps) => ({\n//   // isEditSubmitted: state.editForm.isEditSubmitted,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n// });\n\n// connect(mapStateToProps, mapDispatchToProps)(ChangeInitialFormDataNew);\n\nexport default ChangeInitialFormDataNew;\n"],"sourceRoot":""}