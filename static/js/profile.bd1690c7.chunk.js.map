{"version":3,"sources":["assets/images/Profile/Female.png","assets/images/Profile/Male.png","components/Profile/ProfileCashback.js","components/Profile/ProfileForm.js","components/Profile/Profile.js","containers/Profile/ProfileContainer.js","components/Forms/FormInputWrapper/FormInputWrapper.js","components/Templates/TabView/TabView.js","components/Forms/DropDown/DropDownV2.js","assets/images/forms/magnifyGlass.svg","assets/images/forms/cross.svg","components/Forms/TextInput/TextInput.js","assets/images/forms/dateIn.svg","assets/images/forms/dateOut.svg","assets/images/forms/triangle.svg","assets/images/common/CashbackLogo.svg","components/Forms/DatePicker/DateInner.js","components/Forms/DatePicker/DatePickerV2.js","components/Templates/CashbackBalance/CashbackBalance.js"],"names":["module","exports","__webpack_require__","p","ProfileCashback","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderCashbackList","bind","assertThisInitialized","renderFreshCashback","rewardData","_","map","data","index","bgSyle","date","ISOStringToFormDate","created_at","pointsSymbol","type","pointsDeductStyle","react_default","a","createElement","react","key","concat","className","colSpan","insurer","policy_name","reward_points","status","history","reactstrap_es","xs","Button","variant","width","height","onClick","push","src","CashbackLogo","alt","noGutters","responsive","Component","defaultProps","withRouter","userLabels","ProfileForm","state","errorStringData","message","handleSubmit","validateForm","nextProps","prevState","userDetails","change","result","syncStoreToForm","label","e","isSubmit","errorResult","getPostal","postal_code","setState","isFirstValidate","loading","loadingEnd","storeForm","formToUse","isEmptyResult","isEmpty","setTimeout","updateTabHeight","dateReValidate","error","_this2","token","saveProfile","_this3","_this$props2","form","constants","onSubmit","sm","TextInput","name","placeholderString","size","zIndex","desc","errorString","firstName","surname","DropDownV2","dropList","idTypes","id_type","nric","toUpper","nationalities","nationality","DatePickerV2","dateOfBirth","gender","maritalStatus","marital_status","race","occupations","occupation","contact","smoker","address","unit_no","isPostCode","addressFields","unitNo","renderMessage","reduxForm","destroyOnUnmount","connect","getFormValues","dispatch","profile","callBack","errorMsg","time","setLoading","clearLoading","Profile","renderLeftProfile","renderCashbackbalance","renderCashbackInfo","resetInsurance","onPageInsurance","NONE","resetMore","onPageMore","resetBusiness","onPageBusiness","_this$props","resetIndicatorInsurance","resetIndicatorMore","resetIndicatorBusiness","logOut","profilePic","toUpperCase","Female","Male","cashbackBalance","CashbackBalance","toString","validString","href","target","_this$props3","TabView","maxTabWidthPx","tabs","isDisableDropdown","Profile_ProfileForm","Profile_ProfileCashback","FooterContainer","marginTop","setStateInsurance","setStateMore","setStateBusiness","ProfileContainer","getRewards","logout","components_Profile_Profile","reward_points_expire_at","insurance","getRewardDetails","clearLoginData","FormInputWrapper","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","setErrorString","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","clearErrorString","refValue","extraInfo","react__WEBPACK_IMPORTED_MODULE_6___default","children","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","padding","isDataFadeOnly","initialIndex","isUsingMaxWidth","maxWidth","length","tabWidth","activeIndex","containerWidth","widthPercentage","paddingWidth","isControlVisible","isDropDownControl","fadeStyle","goToIndex","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","handleResize","resizeTabHeight","renderTabs","renderTabContent","renderControls","renderSlides","currentTabSelection","newIndex","findIndex","tab","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","changeTab","window","addEventListener","ReactDOM","findDOMNode","carousel","prevProps","_this$state","setTriggerHeightUpdate","tabContainer","getBoundingClientRect","removeEventListener","_this$state2","hideWidth","innerWidth","isVisibleNow","isForced","arguments","undefined","_this$state3","carouselIncoming","overrideNegation","isConstantHeight","carouselToUse","list","getElementsByTagName","sliderWrapper","parentNode","itemHeight","scrollHeight","style","activeStyle","bigTextStyle","big","isWithImg","isString","img","react__WEBPACK_IMPORTED_MODULE_8___default","react__WEBPACK_IMPORTED_MODULE_8__","_this4","_this$state4","_this$props4","bigTabStyle","tabStyle","role","tabIndex","onKeyDown","_this5","item","React","cloneElement","_this6","_this$state5","_this$props5","charged","isOverContainer","selectedMargin","bigStyle","ref","node","marginLeft","droplist","_Forms_DropDown_DropDownV2__WEBPACK_IMPORTED_MODULE_12__","dropdown","isDisableTyping","notForm","valueChangeCallback","value","overrideValue","_this7","_this$state6","_this$props6","containerStyle","react_responsive_carousel__WEBPACK_IMPORTED_MODULE_11__","showThumbs","showIndicators","showArrows","showStatus","selectedItem","swipeable","onChange","tabName","setTabSelection","withRef","maxItemsDisplay","mediumHeight","bigHeight","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","numItemsDisplay","numItems","maxheight","min","isOpened","listItems","selectedString","listHeight","multipleSelectedElements","listElementsCounter","clientHeight","extraPadding","updateDimensions","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","handleClickOutside","renderListItems","renderTextInput","handleSelectClick","handleOnInputChange","handleSetMultipleSelectedItem","handleDestroySelected","handleInputKeyPress","handleItemKeyPress","handleChange","handleExit","handleBlur","handleFocus","initialListItems","document","formStore","formValues","constructor","Array","isForm","isElements","isEqual","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","isMultiple","selectedContainer","formChange","inputField","event","wrapperRef","contains","isFromFocus","preventDefault","listElements","getAttribute","Math","max","focus","stopPropagation","isOpenOnly","newArr","indexOf","slice","splice","filter","relatedTarget","inputString","resultString","isError","finalString","some","obj","toLowerCase","_this$state7","react__WEBPACK_IMPORTED_MODULE_10___default","handleSelectItemClick","onMouseUp","Cross","_this$props7","component","placeholder","autoComplete","disabled","redux_form__WEBPACK_IMPORTED_MODULE_12__","_this$state8","_this$props8","actualListheight","dropDownOpenStyle","arrowStyle","listStyle","isErrorStyle","multipleStyle","_FormInputWrapper_FormInputWrapper__WEBPACK_IMPORTED_MODULE_16__","formParent","onBlur","onFocus","minHeight","MagnifyGlass","paddingTop","paddingBottom","renderMultipleSelectedElements","onKeyPress","Arrow","react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_15__","listContainer","ownProps","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","heightToUse","isFocus","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","setError","clearError","renderTextArea","handlePostCode","storeValue","postcode","street","block","concatAddress","blkNo","input","_ref","assign","rows","cols","isPassword","isTextArea","focusStyle","passwordType","errorStyle","_FormInputWrapper_FormInputWrapper__WEBPACK_IMPORTED_MODULE_14__","redux_form__WEBPACK_IMPORTED_MODULE_10__","normalize","dayTextList","monthTextMapping","deafultYearRange","DateInner","Date","year","getFullYear","month","getMonth","firstDay","lastDay","dateRangeStart","dateRangeEnd","currDate","currFirstDay","currLastDay","monthDropdownOpen","yearDropdownOpen","selectedStartDate","selectedEndDate","isArrowUp","setSelectedDate","setNewDate","setCalender","setArrowUp","setNewState","toggleDateInner","toggleMonth","toggleYear","yearInput","monthInput","childNodes","scrollTop","dateMonthInput","setAttribute","dateYearInput","objectSpread","isOpen","settings","day","startIndex","getDay","endIndex","getDate","startTime","getTime","i","_loop","currDay","currTime","dayStyle","isBlocked","isRange","isStart","currFirstDayTime","currLastDayTime","endTime","_loop2","currDayOfWeek","isSat","isSun","isStartDate","isEndDate","isWithin","isFirstDay","isLastDay","isSameDay","isDayActive","leftBlockStyle","rightBlockStyle","endBlockStyle","startYear","endYear","currYear","startMonth","endMonth","reduce","jsx","start","end","_loop3","monthText","CloseIcon","marginBottom","onKeyUp","toggle","caret","outline","renderMonths","renderYears","renderDaysText","renderDays","renderDaysSingle","openedStyle","dateOpenStyle","Triangle","listCont","renderDateInner","placeholderStringDefault","startDate","endDate","placeHolder","handleKeyPress","onMovement","updateStartEndDate","dateName","dateReformed","storeStringToDate","incomingStartDate","incomingEndDate","isDateEqual","dateInner","dateInnerDOM","datePickerDOM","datepickerInner","isOverHeight","bottom","outerHeight","top","left","extraState","selectedCallback","newYear","newMonth","endRef","storeString","dateString","currMonth","newSelectedStartDate","newSelectedEndDate","wrappedInstance","isTargetWithinDateRangePicker","doNotBlur","charCode","selectedStart","start_date","selectedEnd","end_date","getRenderedComponent","blur","defaultValue","isChildren","isClicked","moment","isValid","selectedDate","parts","split","mainStyle","rangeIcon","DateIn","DateOut","rangIconStyle","Field","onMouseDown","Forms_DatePicker_DateInner","react__WEBPACK_IMPORTED_MODULE_5___default"],"mappings":"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","file":"static/js/profile.bd1690c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Female.d0efc021.png\";","module.exports = __webpack_public_path__ + \"static/media/Male.54e96d83.png\";","/**\n * ProfileCashback.js\n * Cashback portion for profile view\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Row, Col, Table } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport CashbackLogo from 'assets/images/common/CashbackLogo.svg';\nimport { ISOStringToFormDate } from 'lib/dateFunctions';\n\nimport Button from 'components/FormsV3/Button/Button';\n\nimport './Profile.scss';\n\nclass ProfileCashback extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderCashbackList = this.renderCashbackList.bind(this);\n    this.renderFreshCashback = this.renderFreshCashback.bind(this);\n  }\n\n  renderCashbackList() {\n    const { rewardData } = this.props;\n\n    return _.map(rewardData, (data, index) => {\n      const bgSyle = index % 2 ? 'cell-colored' : '';\n      const date = ISOStringToFormDate(data.created_at);\n      const pointsSymbol = data.type === 'add' ? '+' : '-';\n      const pointsDeductStyle = data.type === 'add' ? '' : 'table-amount-minus';\n\n      return (\n        <Fragment key={`casback-${index}`}>\n          <tr className=\"d-table-row d-sm-none resp-height\">\n            <td className=\"resp-height cell-header\" colSpan={3}>\n              <div className=\"table-item-container resp-height\">\n                <p className=\"table-item-text resp-text\">{data.insurer} - {data.policy_name}</p>\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td className={`d-none d-sm-table-cell ${bgSyle}`}>\n              <div className=\"table-item-container\">\n                <p className=\"table-item-text\">{data.insurer}</p>\n                <p className=\"table-item-text\">{data.policy_name}</p>\n              </div>\n            </td>\n            <td>\n              <div className={`table-item-container ${bgSyle}`}>\n                <p className=\"table-item-text\">{date}</p>\n              </div>\n            </td>\n            <td>\n              <div className={`table-item-container ${bgSyle}`}>\n                <p className={`table-amount-text ${pointsDeductStyle}`}>{`${pointsSymbol}${data.reward_points}`}</p>\n              </div>\n            </td>\n            <td>\n              <div className={`table-item-container ${bgSyle}`}>\n                <p\n                  className={`table-completed-text ${data.status === 'pending' ? 'table-pending-text' : 'table-completed-text'}`}\n                >\n                  {data.status}\n                </p>\n              </div>\n            </td>\n          </tr>\n        </Fragment>\n      );\n    });\n  }\n\n  renderFreshCashback() {\n    const { history } = this.props;\n    return (\n      <Col className=\"fresh-cashback-container\" xs={12}>\n        <p className=\"fresh-text\">No record found, start earning cashbacks by purchasing a Travel/Motor plan!</p>\n        <Button\n          variant=\"medium-flat-green\"\n          width={200}\n          height={72}\n          onClick={() => history.push('/categories')}\n        >\n          <p>Get Covered</p>\n        </Button>\n      </Col>\n    );\n  }\n\n  render() {\n    const { rewardData } = this.props;\n\n    return (\n      <Fragment>\n        <Row>\n          <Col className=\"cashback-history-container\" xs={12}>\n            <img src={CashbackLogo} alt=\"CashbackLogo.svg\" />\n            <p>Cashback History</p>\n          </Col>\n        </Row>\n        <Row className=\"profile-cashback-container\" noGutters>\n          <Table responsive>\n            <thead>\n              <tr>\n                <th className=\"d-none d-sm-table-cell\">\n                  <div className=\"table-item-container\">\n                    <p>Plan</p>\n                  </div>\n                </th>\n                <th>\n                  <div className=\"table-item-container\">\n                    <p>Date</p>\n                  </div>\n                </th>\n                <th>\n                  <div className=\"table-item-container\">\n                    <p>Amount</p>\n                  </div>\n                </th>\n                <th>\n                  <div className=\"table-item-container\">\n                    <p>Status</p>\n                  </div>\n                </th>\n              </tr>\n            </thead>\n            {\n              rewardData ?\n                <tbody>\n                  {this.renderCashbackList()}\n                </tbody>\n              :\n                null\n            }\n          </Table>\n          {\n            !rewardData ?\n              this.renderFreshCashback()\n            :\n              null\n          }\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\nProfileCashback.defaultProps = {\n  rewardData: null,\n};\n\nProfileCashback.propTypes = {\n  rewardData: PropTypes.array,\n  history: PropTypes.object.isRequired,\n};\n\nexport default withRouter(ProfileCashback);\n\n","/**\n * ProfileForm.js\n * The user detail form in profile page\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, getFormValues } from 'redux-form';\nimport { Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/FormsV3/Button/Button';\nimport DatePickerV2 from '../Forms/DatePicker/DatePickerV2';\nimport DropDownV2 from '../Forms/DropDown/DropDownV2';\nimport TextInput from '../Forms/TextInput/TextInput';\n\nimport { getPostal } from '../../actions/insuranceActions';\nimport { setLoading, clearLoading } from '../../actions/loadingScreenActions';\nimport { saveProfile } from '../../actions/userActions';\nimport { validateForm, dateReValidate } from '../../lib/validators';\n\nimport './Profile.scss';\n\nconst userLabels = [\n  'firstName',\n  'surname',\n  'id_type',\n  'nric',\n  'nationality',\n  'dateOfBirth',\n  'gender',\n  'marital_status',\n  'race',\n  'occupation',\n  'contact',\n  'smoker',\n  'address',\n  'unit_no',\n  'postal_code',\n];\n\nconst profileFormName = 'profile';\n\nclass ProfileForm extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { userDetails, change } = nextProps;\n\n    let result = null;\n    if (userDetails) {\n      if (!prevState.userDetails || userDetails.data !== prevState.userDetails.data) {\n        ProfileForm.syncStoreToForm(userDetails.data, change);\n        result = { userDetails };\n      }\n    }\n\n    return result;\n  }\n\n  static syncStoreToForm(userDetails, change) {\n    _.map(userLabels, (label) => {\n      change(label, userDetails[label]);\n    });\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorStringData: {},\n      message: null,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n  }\n\n  async validateForm(e, isSubmit = false) {\n    const errorResult = validateForm(e, userLabels);\n\n    if (isSubmit) {\n      const postalResult = await getPostal(e.postal_code);\n      if (!postalResult) {\n        errorResult.postal_code = 'Invalid postal code';\n      }\n    }\n\n    this.setState({\n      errorStringData: errorResult,\n    });\n\n    return errorResult;\n  }\n\n  async handleSubmit(e, isFirstValidate = true) {\n    const {\n      userDetails,\n      loading,\n      loadingEnd,\n      storeForm,\n    } = this.props;\n    const formToUse = isFirstValidate ? e : storeForm;\n    const errorResult = await this.validateForm(formToUse, true);\n    const isEmptyResult = _.isEmpty(errorResult);\n\n    setTimeout(this.props.updateTabHeight, 10);\n    if (dateReValidate(\n      isEmptyResult,\n      isFirstValidate,\n      errorResult,\n      error => this.setState({ errorStringData: error }),\n      () => this.handleSubmit(storeForm, false),\n    )) {\n      return;\n    }\n\n    if (isEmptyResult &&\n      userDetails &&\n      userDetails.data &&\n      userDetails.data.token) {\n      loading();\n      const result = await this.props.saveProfile(userDetails.data.token, formToUse);\n      const message = result ? 'Profile has been updated.' : 'An error has occured. Please try again.';\n      this.setState({\n        message,\n      });\n\n      loadingEnd();\n    }\n  }\n\n  renderMessage() {\n    const { message } = this.state;\n    if (message) {\n      return (\n        <Col xs={12}>\n          <p className=\"message\">{message}</p>\n        </Col>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const { errorStringData } = this.state;\n    const {\n      change,\n      form,\n      handleSubmit,\n      constants,\n      storeForm,\n    } = this.props;\n\n    return (\n      <form onSubmit={handleSubmit(this.handleSubmit)}>\n        <Row className=\"profile-form\" noGutters>\n          <Col className=\"form-right-padding\" xs={12} sm={6}>\n            <TextInput\n              form={form}\n              change={change}\n              name=\"firstName\"\n              placeholderString=\"\"\n              size=\"medium\"\n              zIndex={99}\n              desc=\"First name\"\n              errorString={errorStringData.firstName}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-left-padding\" xs={12} sm={6}>\n            <TextInput\n              form={form}\n              change={change}\n              name=\"surname\"\n              placeholderString=\"\"\n              size=\"medium\"\n              zIndex={97}\n              desc=\"Last name\"\n              errorString={errorStringData.surname}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-right-padding\" xs={12} sm={6}>\n            <DropDownV2\n              form={form}\n              change={change}\n              name=\"id_type\"\n              placeholderString=\"Select ID Type\"\n              dropList={constants.idTypes}\n              size=\"medium\"\n              zIndex={96}\n              desc=\"Type of ID\"\n              errorString={errorStringData.id_type}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-left-padding\" xs={12} sm={6}>\n            <TextInput\n              form={form}\n              change={change}\n              name=\"nric\"\n              placeholderString=\"\"\n              size=\"medium\"\n              zIndex={95}\n              desc=\"ID Number\"\n              errorString={errorStringData.nric}\n              validateForm={() => this.validateForm(storeForm)}\n              toUpper\n            />\n          </Col>\n          <Col className=\"form-right-padding\" xs={12} sm={6}>\n            <DropDownV2\n              form={form}\n              change={change}\n              name=\"nationality\"\n              placeholderString=\"Select Nationality\"\n              dropList={constants.nationalities}\n              size=\"medium\"\n              zIndex={94}\n              desc=\"Nationality\"\n              errorString={errorStringData.nationality}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-left-padding\" xs={12} sm={6}>\n            <DatePickerV2\n              form={form}\n              change={change}\n              name=\"dateOfBirth\"\n              size=\"medium\"\n              zIndex={93}\n              desc=\"Date of birth\"\n              errorString={errorStringData.dateOfBirth}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-right-padding\" xs={12} sm={6}>\n            <DropDownV2\n              form={form}\n              change={change}\n              name=\"gender\"\n              placeholderString=\"Select Gender\"\n              dropList={constants.gender}\n              size=\"medium\"\n              zIndex={92}\n              desc=\"Gender\"\n              errorString={errorStringData.gender}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-left-padding\" xs={12} sm={6}>\n            <DropDownV2\n              form={form}\n              change={change}\n              name=\"marital_status\"\n              placeholderString=\"Select Marital Status\"\n              dropList={constants.maritalStatus}\n              size=\"medium\"\n              zIndex={91}\n              desc=\"Marital Status\"\n              errorString={errorStringData.marital_status}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-right-padding\" xs={12} sm={6}>\n            <DropDownV2\n              form={form}\n              change={change}\n              name=\"race\"\n              placeholderString=\"Select Race\"\n              dropList={constants.race}\n              size=\"medium\"\n              zIndex={90}\n              desc=\"Race\"\n              errorString={errorStringData.race}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-left-padding\" xs={12} sm={6}>\n            <DropDownV2\n              form={form}\n              change={change}\n              name=\"occupation\"\n              placeholderString=\"Select Occupation\"\n              dropList={constants.occupations}\n              size=\"medium\"\n              zIndex={89}\n              desc=\"Occupation\"\n              errorString={errorStringData.occupation}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-right-padding\" xs={12} sm={6}>\n            <TextInput\n              form={form}\n              change={change}\n              name=\"contact\"\n              placeholderString=\"\"\n              size=\"medium\"\n              zIndex={88}\n              desc=\"Mobile Number\"\n              errorString={errorStringData.contact}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-left-padding\" xs={12} sm={6}>\n            <DropDownV2\n              form={form}\n              change={change}\n              name=\"smoker\"\n              placeholderString=\"Select Smoking Status\"\n              dropList={constants.smoker}\n              size=\"medium\"\n              zIndex={87}\n              desc=\"Smoking Status\"\n              errorString={errorStringData.smoker}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-seperator\" xs={12}>\n            <p>Address</p>\n          </Col>\n          <Col xs={12}>\n            <TextInput\n              form={form}\n              change={change}\n              name=\"address\"\n              placeholderString=\"\"\n              size=\"medium\"\n              zIndex={86}\n              desc=\"Address\"\n              errorString={errorStringData.address}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-right-padding\" xs={12} sm={6}>\n            <TextInput\n              form={form}\n              change={change}\n              name=\"unit_no\"\n              placeholderString=\"\"\n              size=\"medium\"\n              zIndex={85}\n              desc=\"Unit No\"\n              errorString={errorStringData.unit_no}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-left-padding\" xs={12} sm={6}>\n            <TextInput\n              form={form}\n              change={change}\n              name=\"postal_code\"\n              placeholderString=\"\"\n              size=\"medium\"\n              zIndex={84}\n              desc=\"Postcode\"\n              errorString={errorStringData.postal_code}\n              validateForm={() => this.validateForm(storeForm)}\n              isPostCode\n              addressFields={{\n                address: 'address',\n                unitNo: 'unit_no',\n              }}\n            />\n          </Col>\n          {this.renderMessage()}\n          <Col className=\"submit-container\" xs={12}>\n            <Button\n              variant=\"medium-flat-green\"\n              width={200}\n              height={72}\n              type=\"submit\"\n            >\n              <p>Save</p>\n            </Button>\n          </Col>\n        </Row>\n      </form>\n    );\n  }\n}\n\nProfileForm.defaultProps = {\n  storeForm: null,\n};\n\nProfileForm.propTypes = {\n  saveProfile: PropTypes.func.isRequired,\n  change: PropTypes.func.isRequired,\n  form: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  constants: PropTypes.object.isRequired,\n  userDetails: PropTypes.object.isRequired,\n  loading: PropTypes.func.isRequired,\n  loadingEnd: PropTypes.func.isRequired,\n  updateTabHeight: PropTypes.func.isRequired,\n  storeForm: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n  storeForm: getFormValues(profileFormName)(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  saveProfile: (token, profile) => (\n    dispatch(saveProfile(token, profile))\n  ),\n  loading: (callBack, errorMsg, time) => {\n    dispatch(setLoading(callBack, errorMsg, time));\n  },\n  loadingEnd: () => {\n    dispatch(clearLoading());\n  },\n});\n\nexport default reduxForm({\n  form: profileFormName,\n  destroyOnUnmount: false,\n})(connect(mapStateToProps, mapDispatchToProps)(ProfileForm));\n\n","/**\n * Profile.js\n * Profile view for logged in personnal\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { getFormValues } from 'redux-form';\nimport { withRouter } from 'react-router-dom';\nimport { Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport Female from 'assets/images/Profile/Female.png';\nimport Male from 'assets/images/Profile/Male.png';\nimport CashbackLogo from 'assets/images/common/CashbackLogo.svg';\n\nimport Button from 'components/FormsV3/Button/Button';\nimport CashbackBalance from '../Templates/CashbackBalance/CashbackBalance';\nimport TabView from '../Templates/TabView/TabView';\n\nimport FooterContainer from '../../containers/FooterContainer';\nimport ProfileCashback from './ProfileCashback';\nimport ProfileForm from './ProfileForm';\n\nimport './Profile.scss';\n\nimport {\n  onPageInsurance,\n  setStateInsurance,\n  onPageMore,\n  setStateMore,\n  onPageBusiness,\n  setStateBusiness,\n} from '../../actions/navActions';\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLeftProfile = this.renderLeftProfile.bind(this);\n    this.renderCashbackbalance = this.renderCashbackbalance.bind(this);\n    this.renderCashbackInfo = this.renderCashbackInfo.bind(this);\n\n    // Set Insurance Page Indicator\n    const resetInsurance = onPageInsurance.NONE;\n    // Reset More Page Indicator\n    const resetMore = onPageMore.NONE;\n\n    // Reset Business Page Indicator\n    const resetBusiness = onPageBusiness.NONE;\n\n    const {\n      resetIndicatorInsurance,\n      resetIndicatorMore,\n      resetIndicatorBusiness,\n    } = this.props;\n    resetIndicatorInsurance(resetInsurance);\n    resetIndicatorMore(resetMore);\n    resetIndicatorBusiness(resetBusiness);\n  }\n\n  renderLeftProfile() {\n    const { logOut, userDetails, storeForm } = this.props;\n    const profilePic = storeForm &&\n      storeForm.gender &&\n      storeForm.gender.toUpperCase() === 'FEMALE' ? Female : Male;\n\n    return (\n      <div className=\"profile-pic-container\">\n        <div className=\"profile-pic\">\n          <img src={profilePic} alt=\"Profile Pic\" />\n        </div>\n        <p className=\"profile-name\">{userDetails.data.surname} {userDetails.data.firstName}</p>\n        <Button\n          variant=\"medium-outline\"\n          width={132}\n          height={36}\n          onClick={logOut}\n        >\n          <p>Logout</p>\n        </Button>\n      </div>\n    );\n  }\n\n  renderCashbackbalance() {\n    const { cashbackBalance } = this.props;\n\n    return (\n      <CashbackBalance cashbackBalance={cashbackBalance.toString()} />\n    );\n  }\n\n  renderCashbackInfo() {\n    const { validString } = this.props;\n\n    if (validString) {\n      return (\n        <div className=\"cashback-how\">\n          <p className=\"valid-text\">Valid till: {validString}</p>\n        </div>\n      );\n    }\n\n    return (\n      <a className=\"cashback-how\" href=\"/cashback\" target=\"_blank\">\n        <div className=\"cashback-how-inner\">\n          <p className=\"question\">?</p>\n          <p>How to earn</p>\n          <img src={CashbackLogo} alt=\"CashbackLogo.svg\" />\n          <p>Cashback?</p>\n        </div>\n      </a>\n    );\n  }\n\n  render() {\n    const {\n      rewardData,\n      userDetails,\n      constants,\n      storeForm,\n    } = this.props;\n\n    return (\n      <Fragment>\n        <Row className=\"profile-container\" noGutters>\n          {this.renderLeftProfile()}\n          <div className=\"profile-detail-container\">\n            <Col xs={12}>\n              <p className=\"profile-header\">My Account</p>\n            </Col>\n            <Col className=\"cashback-top-container\" xs={12}>\n              <Row noGutters>\n                <Col xs={12} sm={6}>\n                  {this.renderCashbackbalance()}\n                </Col>\n                <Col xs={12} sm={6}>\n                  {this.renderCashbackInfo()}\n                </Col>\n              </Row>\n            </Col>\n            <Col xs={12}>\n              <TabView\n                maxTabWidthPx={128}\n                tabs={[\n                  'Overview',\n                  'Cashback',\n                ]}\n                isDisableDropdown\n                name=\"profile-tab\"\n              >\n                {[\n                  <ProfileForm\n                    key=\"profileForm\"\n                    userDetails={userDetails}\n                    constants={constants}\n                    storeForm={storeForm}\n                  />,\n                  <ProfileCashback\n                    key=\"profileCashback\"\n                    rewardData={rewardData}\n                  />,\n                ]}\n              </TabView>\n            </Col>\n          </div>\n        </Row>\n        <FooterContainer\n          marginTop={-50}\n        />\n      </Fragment>\n    );\n  }\n}\n\nProfile.defaultProps = {\n  rewardData: null,\n  validString: null,\n  cashbackBalance: 0,\n  storeForm: null,\n  resetIndicatorInsurance: null,\n  resetIndicatorMore: null,\n  resetIndicatorBusiness: null,\n};\n\nProfile.propTypes = {\n  rewardData: PropTypes.array,\n  validString: PropTypes.string,\n  cashbackBalance: PropTypes.number,\n  logOut: PropTypes.func.isRequired,\n  userDetails: PropTypes.object.isRequired,\n  constants: PropTypes.object.isRequired,\n  storeForm: PropTypes.object,\n  resetIndicatorInsurance: PropTypes.func,\n  resetIndicatorMore: PropTypes.func,\n  resetIndicatorBusiness: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  storeForm: getFormValues('profile')(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetIndicatorInsurance: (resetInsurance) => {\n    dispatch(setStateInsurance(resetInsurance));\n  },\n  resetIndicatorMore: (resetMore) => {\n    dispatch(setStateMore(resetMore));\n  },\n  resetIndicatorBusiness: (resetBusiness) => {\n    dispatch(setStateBusiness(resetBusiness));\n  },\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Profile));\n","/**\n * ProfileContainer.js\n * Profile Container.\n *\n * Will get cashback details only here.\n *\n * @version 0.0.1\n * @author [Wilson](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport Profile from '../../components/Profile/Profile';\n\nimport { getRewardDetails, clearLoginData } from '../../actions/userActions';\n\nclass ProfileContainer extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { userDetails, getRewards, history } = nextProps;\n\n    let result = null;\n    if (userDetails) {\n      if (userDetails.data !== prevState.userDetails.data) {\n        if (userDetails.data && userDetails.data.token) {\n          getRewards(userDetails.data.token);\n        } else {\n          history.push('/');\n        }\n\n        result = { userDetails };\n      }\n\n      if (userDetails.data && userDetails.rewardData !== prevState.userDetails.rewardData) {\n        result = { userDetails };\n      }\n    }\n\n    return result;\n  }\n\n  constructor(props) {\n    super(props);\n\n    const { userDetails, getRewards } = this.props;\n    if (userDetails && userDetails.data && !userDetails.rewardData) {\n      getRewards(userDetails.data.token);\n    }\n\n    this.state = {\n      userDetails,\n    };\n\n    this.logOut = this.logOut.bind(this);\n  }\n\n  logOut() {\n    const { logout, history } = this.props;\n\n    logout();\n    history.push('/');\n  }\n\n  render() {\n    const { userDetails } = this.state;\n    const { constants } = this.props;\n    const { data, rewardData } = userDetails;\n\n    if (!userDetails.data || !constants) {\n      return null;\n    }\n\n    return (\n      <Profile\n        userDetails={userDetails}\n        rewardData={rewardData}\n        validString={data.reward_points_expire_at}\n        cashbackBalance={data.reward_points}\n        logOut={this.logOut}\n        constants={constants}\n      />\n    );\n  }\n}\n\nProfileContainer.defaultProps = {\n  constants: null,\n};\n\nProfileContainer.propTypes = {\n  userDetails: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n  constants: PropTypes.object,\n  getRewards: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  userDetails: state.userDetails,\n  constants: state.insurance.constants,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getRewards: token => (\n    dispatch(getRewardDetails(token))\n  ),\n  logout: () => (\n    dispatch(clearLoginData())\n  ),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProfileContainer));\n","/**\n * FormInputWrapper.js\n * Custom form dropdown menu with input\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FormInputWrapper.scss';\n\n/**\n * Custom Form Dropdown class\n */\nclass FormInputWrapper extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.errorString !== nextProps.errorString) {\n      return {\n        errorString: nextProps.errorString,\n        refValue: nextProps.refValue,\n      };\n    }\n\n    if (nextProps.validateForm && prevState.errorString && prevState.refValue !== nextProps.refValue) {\n      nextProps.validateForm();\n      return {\n        errorString: null,\n      };\n    }\n    return null;\n  }\n  /**\n   * Constructor\n   *\n   * @param {object} props Component props\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorString: null,\n    };\n\n    this.setErrorString = this.setErrorString.bind(this);\n    this.clearErrorString = this.clearErrorString.bind(this);\n  }\n\n  setErrorString(message) {\n    this.setState({\n      errorString: message,\n    });\n  }\n\n  clearErrorString() {\n    this.setState({\n      errorString: null,\n    });\n  }\n\n  render() {\n    const {\n      errorString,\n    } = this.state;\n\n    const {\n      desc,\n      extraInfo,\n    } = this.props;\n\n    return (\n      <div className=\"input-wrapper-main input-wrapper-error\">\n        {\n          desc !== null ?\n            <p className=\"input-wrapper-desc\">{desc}</p>\n          :\n            null\n        }\n        {this.props.children}\n        {\n          extraInfo !== null ?\n            <div className=\"extra-info-container\">\n              {extraInfo}\n            </div>\n          :\n            null\n        }\n        {\n          errorString !== null ?\n            <p className=\"input-wrapper-error-text\">\n              {errorString}\n            </p>\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nFormInputWrapper.defaultProps = {\n  desc: null,\n  extraInfo: null,\n};\n\n\nFormInputWrapper.propTypes = {\n  desc: PropTypes.string,\n  extraInfo: PropTypes.object,\n};\n\nexport default FormInputWrapper;\n","/**\n * TabView.js\n * TabView that uses a carousel or fading.\n *\n * For carousel, it will take in multiple elements in\n * an array to swap when changed tabs.\n *\n * For fading view, it will only take the 1st element in the array,\n * but it does a fading to simulate and give time for the change of state\n * to happen in that element.\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { Carousel } from 'react-responsive-carousel';\n\nimport PropTypes from 'prop-types';\n\nimport DropDownV2 from '../../Forms/DropDown/DropDownV2';\n\nimport { setTabSelection } from '../../../actions/tabActions';\n\nimport './TabView.scss';\n\n/**\n * Custom Form Dropdown class\n */\nclass TabView extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      currentTabSelection,\n      tabs,\n      maxTabWidthPx,\n      isDataFadeOnly,\n      padding,\n      children,\n    } = nextProps;\n\n    const { activeIndex } = prevState;\n\n    let result = null;\n\n    if (tabs && currentTabSelection) {\n      const newIndex = _.findIndex(tabs, tab => tab.desc === currentTabSelection);\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        result = {\n          activeIndex: newIndex,\n        };\n      }\n    }\n\n    if (tabs !== prevState.tabs && children) {\n      const isUsingMaxWidth = maxTabWidthPx > 0;\n      const maxWidth = (100 - padding) / (isDataFadeOnly ? tabs.length : children.length);\n      const tabWidth = isUsingMaxWidth ? maxTabWidthPx : maxWidth;\n\n      result = {\n        ...result,\n        tabs,\n        width: tabWidth,\n        widthPercentage: isUsingMaxWidth ? `${maxTabWidthPx}px` : `${tabWidth}%`,\n        maxWidth: `${maxWidth}%`,\n      };\n    }\n\n    return result;\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {object} props Component props\n   */\n  constructor(props) {\n    super(props);\n\n    const {\n      padding,\n      children,\n      maxTabWidthPx,\n      isDataFadeOnly,\n      tabs,\n      initialIndex,\n    } = this.props;\n\n    const isUsingMaxWidth = maxTabWidthPx > 0;\n    const maxWidth = (100 - padding) / (isDataFadeOnly ? tabs.length : children.length);\n    const tabWidth = isUsingMaxWidth ? maxTabWidthPx : maxWidth;\n\n    this.state = {\n      activeIndex: initialIndex,\n      containerWidth: 0,\n      width: tabWidth,\n      widthPercentage: isUsingMaxWidth ? `${maxTabWidthPx}px` : `${tabWidth}%`,\n      maxWidth: `${maxWidth}%`,\n      paddingWidth: maxTabWidthPx ? '100%' : `${padding}%`,\n      isControlVisible: true,\n      isUsingMaxWidth,\n      isDropDownControl: tabs && tabs.length > 10,\n      fadeStyle: '',\n      tabs,\n    };\n\n    this.goToIndex = this.goToIndex.bind(this);\n\n    this.handleResize = this.handleResize.bind(this);\n    this.resizeTabHeight = this.resizeTabHeight.bind(this);\n    this.renderTabs = this.renderTabs.bind(this);\n    this.renderTabContent = this.renderTabContent.bind(this);\n    this.renderControls = this.renderControls.bind(this);\n    this.renderSlides = this.renderSlides.bind(this);\n  }\n\n  componentDidMount() {\n    const { tabs } = this.state;\n    const {\n      initialIndex,\n      name,\n      changeTab,\n    } = this.props;\n\n    changeTab(name, tabs[0].desc);\n\n    window.addEventListener('resize', this.handleResize);\n\n    this.handleResize();\n\n    this.resizeTabHeight(initialIndex, ReactDOM.findDOMNode(this.carousel));\n\n    this.setState({\n      activeIndex: initialIndex,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { tabs, activeIndex, containerWidth } = this.state;\n    const { setTriggerHeightUpdate } = this.props;\n    if (!prevProps.setTriggerHeightUpdate && setTriggerHeightUpdate) {\n      const { resizeTabHeight } = this;\n\n      setTriggerHeightUpdate(() => {\n        resizeTabHeight(activeIndex);\n      });\n    }\n\n    if (tabs !== prevState.tabs) {\n      this.resizeTabHeight(activeIndex);\n    }\n\n    if (this.tabContainer) {\n      const tabWidth = this.tabContainer.getBoundingClientRect().width;\n      if (tabWidth !== containerWidth) {\n        setTimeout(() => this.setState({ containerWidth: tabWidth }), 100);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  handleResize() {\n    const { isControlVisible, activeIndex, tabs } = this.state;\n    const { hideWidth } = this.props;\n\n    this.setState({\n      isDropDownControl: window.innerWidth < 560 || (tabs && tabs.length > 10),\n    });\n\n\n    this.resizeTabHeight(activeIndex);\n\n    if (hideWidth) {\n      const isVisibleNow = window.innerWidth > hideWidth;\n\n      this.setState({\n        isControlVisible: isVisibleNow,\n      });\n\n      if (isControlVisible && !isVisibleNow) {\n        this.goToIndex(0);\n      }\n    }\n  }\n\n  goToIndex(newIndex, isForced = false) {\n    const { tabs, activeIndex } = this.state;\n    if (!isForced && newIndex === activeIndex) {\n      return;\n    }\n    const {\n      name,\n      isDataFadeOnly,\n      changeTab,\n    } = this.props;\n\n\n    if (isDataFadeOnly) {\n      this.setState({\n        fadeStyle: 'animated fadeOut',\n      });\n\n      this.setState({ activeIndex: newIndex });\n      changeTab(name, tabs[newIndex].desc);\n\n      setTimeout(() => {\n        if (tabs[newIndex].onClick) {\n          tabs[newIndex].onClick();\n        }\n        this.setState({\n          fadeStyle: 'animated fadeIn',\n        });\n\n        setTimeout(() => {\n          this.setState({\n            fadeStyle: '',\n          });\n        }, 300);\n      }, 300);\n    } else {\n      this.setState({ activeIndex: newIndex });\n      changeTab(name, tabs[newIndex].desc);\n      if (tabs[newIndex].onClick) {\n        tabs[newIndex].onClick();\n      }\n    }\n\n    this.resizeTabHeight(newIndex);\n  }\n\n  resizeTabHeight(index, carouselIncoming = null, overrideNegation = null) {\n    const { isConstantHeight } = this.props;\n\n    const carouselToUse = carouselIncoming !== null ? carouselIncoming : ReactDOM.findDOMNode(this.carousel);\n    // No other way for now >_<\n    if (!isConstantHeight && carouselToUse) {\n      const list = carouselToUse.getElementsByTagName('UL')[0];\n      const children = list.children[index];\n\n      if (children) {\n        const sliderWrapper = list.parentNode;\n        const itemHeight = overrideNegation ? children.children[0].scrollHeight + overrideNegation : children.children[0].scrollHeight;\n        sliderWrapper.style.height = itemHeight === 0 ? 1000 : `${itemHeight}px`;\n      }\n    }\n  }\n\n  renderTabContent(tab, activeStyle) {\n    const {\n      big,\n    } = this.props;\n\n    const bigTextStyle = big ? 'tab-text-big' : '';\n\n    const isWithImg = !_.isString(tab);\n    const desc = isWithImg ? tab.desc : tab;\n    const img = isWithImg ? tab.img : null;\n\n    return (\n      <Fragment>\n        {\n          img ?\n            <div className=\"img-container\">\n              <img className={activeStyle} src={img} alt={`${desc}.svg`} />\n            </div>\n          :\n            null\n        }\n        <p className={`${activeStyle} ${bigTextStyle}`}>{desc}</p>\n      </Fragment>\n    );\n  }\n\n  renderTabs(width) {\n    const { activeIndex, tabs } = this.state;\n    const {\n      big,\n      maxTabWidthPx,\n    } = this.props;\n\n    const bigTabStyle = big ? 'tab-big' : '';\n\n    return _.map(tabs, (tab, index) => {\n      const tabStyle = index === activeIndex ? 'active' : 'inactive';\n      const maxWidth = maxTabWidthPx > 0 ? maxTabWidthPx : null;\n\n      return (\n        <div\n          className={`tab ${bigTabStyle}`}\n          style={{ width, maxWidth }}\n          key={`tab${index}`}\n        >\n          <div\n            className=\"tab-inner\"\n            onClick={() => { this.goToIndex(index); }}\n            role=\"button\"\n            tabIndex={-1}\n            onKeyDown={() => {}}\n          >\n            {this.renderTabContent(tab, tabStyle)}\n          </div>\n        </div>\n      );\n    });\n  }\n\n  renderSlides() {\n    const { children } = this.props;\n    const { goToIndex } = this;\n\n    return _.map(children, (item, index) => (\n      <div key={`tab-item${index}`}>\n        {React.cloneElement(item, {\n          updateTabHeight: (overrideNegation = null) => this.resizeTabHeight(index, null, overrideNegation),\n          goToIndex,\n        })}\n      </div>\n    ));\n  }\n\n  renderControls() {\n    const {\n      activeIndex,\n      width,\n      widthPercentage,\n      maxWidth,\n      containerWidth,\n      paddingWidth,\n      isUsingMaxWidth,\n      isDropDownControl,\n      tabs,\n    } = this.state;\n\n    const {\n      style,\n      isDisableDropdown,\n      big,\n      charged,\n    } = this.props;\n\n    if (isDisableDropdown || !isDropDownControl) {\n      const isOverContainer = tabs && tabs.length * width > containerWidth;\n      const selectedMargin = isUsingMaxWidth && !isOverContainer ? activeIndex * width : `${activeIndex / tabs.length * 100}%`;\n      const bigStyle = big ? 'tab-big' : '';\n      const tabStyle = charged ? 'tab-container-charged' : '';\n\n      return (\n        <div\n          style={style}\n          className={`tab-container ${tabStyle} tab-container-padding`}\n          ref={node => this.tabContainer = node}\n        >\n          {this.renderTabs(isOverContainer ? maxWidth : widthPercentage)}\n          <div className=\"tab tab-padding\" style={{ width: paddingWidth }} />\n          <div\n            className={`selected-tab ${bigStyle}`}\n            style={{\n              width: widthPercentage,\n              maxWidth,\n              marginLeft: selectedMargin,\n            }}\n          />\n        </div>\n      );\n    }\n\n    const droplist = _.map(tabs, tab => tab.desc);\n\n    if (!isDisableDropdown && isDropDownControl) {\n      return (\n        <div className=\"tab-container\">\n          <DropDownV2\n            ref={node => this.dropdown = node}\n            placeholderString=\"Enter or select your destinations\"\n            dropList={droplist}\n            size=\"medium\"\n            zIndex={100}\n            isDisableTyping\n            notForm\n            valueChangeCallback={value => this.goToIndex(_.findIndex(tabs, tab => tab.desc === value))}\n            overrideValue={tabs[activeIndex].desc}\n          />\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      activeIndex,\n      isControlVisible,\n      fadeStyle,\n    } = this.state;\n\n    const { isDataFadeOnly, className, charged } = this.props;\n    const containerStyle = charged ? 'tabview-container-charged' : '';\n\n    return (\n      <div className={`tabview-container ${containerStyle} ${className}`}>\n        {\n          isControlVisible ?\n            this.renderControls()\n          :\n            null\n        }\n        <div className={`tab-items-container ${fadeStyle}`}>\n          {\n            isDataFadeOnly ?\n              this.props.children\n            :\n              <Carousel\n                showThumbs={false}\n                showIndicators={false}\n                showArrows={false}\n                showStatus={false}\n                selectedItem={activeIndex}\n                swipeable={false}\n                onChange={index => this.goToIndex(index)}\n                ref={node => (this.carousel = node)}\n              >\n                {this.renderSlides()}\n              </Carousel>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nTabView.defaultProps = {\n  padding: 0,\n  hideWidth: 0,\n  maxTabWidthPx: 0,\n  style: null,\n  isDisableDropdown: false,\n  isConstantHeight: false,\n  initialIndex: 0,\n  setTriggerHeightUpdate: null,\n  isDataFadeOnly: false,\n  big: false,\n  className: null,\n  charged: null,\n};\n\nTabView.propTypes = {\n  padding: PropTypes.number,\n  tabs: PropTypes.array.isRequired,\n  hideWidth: PropTypes.number,\n  maxTabWidthPx: PropTypes.number,\n  style: PropTypes.object,\n  isDisableDropdown: PropTypes.bool,\n  isConstantHeight: PropTypes.bool,\n  initialIndex: PropTypes.number,\n  setTriggerHeightUpdate: PropTypes.func,\n  isDataFadeOnly: PropTypes.bool,\n  big: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  charged: PropTypes.bool,\n  changeTab: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state, props) => ({\n  currentTabSelection: state.tab[props.name],\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeTab: (tabName, value) => {\n    dispatch(setTabSelection(tabName, value));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { withRef: true })(TabView);\n","/**\n * DropDown.js\n * Custom form dropdown menu with input\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, getFormValues, change } from 'redux-form';\nimport PropTypes from 'prop-types';\n\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nimport FormInputWrapper from '../FormInputWrapper/FormInputWrapper';\n\nimport Arrow from '../../../assets/images/forms/arrow.svg';\nimport Cross from '../../../assets/images/forms/cross.svg';\nimport MagnifyGlass from '../../../assets/images/forms/magnifyGlass.svg';\n\nimport './DropDown.scss';\nimport './MultipleSelectDropDown.scss';\n\n// How many items to display\nconst maxItemsDisplay = 5;\n// Height for medium dropdown\nconst mediumHeight = 60;\n// Height for big dropdown\nconst bigHeight = 72;\n// Padding for when multiple items overflow\nconst extraPaddingForMultiple = 5;\n// Error text to display when error\nconst resultNullString = 'No results found';\n\n/**\n * Custom Form Dropdown class\n */\nclass DropDownV2 extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      dropList,\n      numItemsDisplay,\n      size,\n    } = nextProps;\n\n    if (dropList !== prevState.initialListItems) {\n      const height = size === 'big' ? bigHeight : mediumHeight;\n      const numItems = numItemsDisplay || maxItemsDisplay;\n      const maxheight = (_.min([dropList ? dropList.length : 0, numItems]) + 1) * height;\n\n      return {\n        initialListItems: dropList,\n        listItems: dropList,\n        maxheight,\n        listHeight: maxheight,\n      };\n    }\n\n    return null;\n  }\n  /**\n   * Constructor\n   *\n   * @param {object} props Component props\n   */\n  constructor(props) {\n    super(props);\n\n    // dropList - The passed down dropdown list items\n    // placeholderString - Placeholder string for input\n    // size - Size of this control\n    // numItemsDisplay - Max items to display on view\n    const {\n      dropList,\n      placeholderString,\n      size,\n      numItemsDisplay,\n    } = this.props;\n\n    // Get the control height\n    const height = size === 'big' ? bigHeight : mediumHeight;\n    // Get number of items to display\n    const numItems = numItemsDisplay || maxItemsDisplay;\n    // Get the max height of list\n    const maxheight = (_.min([dropList ? dropList.length : 0, numItems]) + 1) * height;\n    // isOpened - Whether dropdown is opened\n    // isError - Whether there is input error\n    // listItems - The actual dropdown list\n    // selectedString - The selected item string\n    // height - Preferred Control height\n    // numItemsDisplay - How many items to display\n    // maxheight - Max height of the list\n    // listHeight - Height of the list. (Items count + control)\n    // multipleSelectedElements - Array of multiple selected items\n    // listElementsCounter - Up down selection position\n    // clientHeight - Actual height of the control\n    this.state = {\n      isOpened: false,\n      listItems: dropList,\n      selectedString: placeholderString,\n      height,\n      numItemsDisplay: numItems,\n      maxheight,\n      listHeight: maxheight,\n      multipleSelectedElements: null,\n      listElementsCounter: -1,\n      clientHeight: height,\n      extraPadding: 0,\n    };\n\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.renderListItems = this.renderListItems.bind(this);\n    this.renderTextInput = this.renderTextInput.bind(this);\n    this.handleSelectClick = this.handleSelectClick.bind(this);\n    this.handleOnInputChange = this.handleOnInputChange.bind(this);\n    this.handleSetMultipleSelectedItem = this.handleSetMultipleSelectedItem.bind(this);\n    this.handleDestroySelected = this.handleDestroySelected.bind(this);\n    this.handleInputKeyPress = this.handleInputKeyPress.bind(this);\n    this.handleItemKeyPress = this.handleItemKeyPress.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleExit = this.handleExit.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n  }\n\n  /**\n   * Lifecycle Method - componentDidMount\n   */\n  componentDidMount() {\n    // Add Handler to handle click outside of screen\n    document.addEventListener('mousedown', this.handleClickOutside);\n    // Update control height on resize in case it squeezes down\n    window.addEventListener('resize', this.updateDimensions);\n    // Update for the first time\n    this.updateDimensions();\n\n    const { formStore, name, overrideValue } = this.props;\n    if (formStore && formStore[name]) {\n      const formValues = formStore[name];\n      if (formValues.constructor === Array) {\n        this.setState({\n          multipleSelectedElements: formValues,\n        });\n      }\n    }\n\n    if (overrideValue) {\n      this.handleChange(overrideValue);\n    }\n  }\n\n\n  /**\n   * Lifecycle Method - shouldComponentUpdate\n   *\n   * @param {object} nextProps\n   * @param {object} nextState\n   */\n  shouldComponentUpdate(nextProps) {\n    /* const {\n      isOpened,\n      selectedString,\n      multipleSelectedElements,\n      clientHeight,\n      extraPadding,\n    } = this.state;\n\n    const { formStore, name, isMultiple, overrideValue } = this.props; */\n    const { overrideValue } = this.props;\n\n    if (overrideValue !== nextProps.overrideValue) {\n      this.handleChange(nextProps.overrideValue);\n    }\n\n    return true;\n    // Render only when open state or selected string is different\n    /* return (\n      isOpened !== nextState.isOpened ||\n      selectedString !== nextState.selectedString ||\n      multipleSelectedElements !== nextState.multipleSelectedElements ||\n      clientHeight !== nextState.clientHeight ||\n      extraPadding !== nextState.extraPadding ||\n      !isMultiple && formStore && nextProps.formStore[name] && nextProps.formStore[name]\n    ); */\n  }\n\n  /**\n   * Lifecycle Method - componentDidUpdate\n   */\n  componentDidUpdate() {\n    const { multipleSelectedElements } = this.state;\n    const { formStore, name } = this.props;\n    const isForm = formStore && formStore[name];\n\n    const isElements = !_.isEmpty(multipleSelectedElements);\n    if (isForm) {\n      const formValues = formStore[name];\n\n      if (!isElements || (isElements && !_.isEqual(formValues, multipleSelectedElements))) {\n        if (formValues.constructor === Array) {\n          this.setState({\n            multipleSelectedElements: [...formValues],\n          });\n        }\n      }\n    }\n\n    if (isElements && !isForm) {\n      this.setState({\n        multipleSelectedElements: null,\n      });\n    }\n    // Update control height if necessary, since the\n    // height may change after render\n    this.updateDimensions();\n    /* const { isOpened } = this.state;\n    if (isOpened && !prevState.isOpened) {\n      setTimeout(() => {\n        const bodyRect = document.body.getBoundingClientRect();\n        const elemRect = this.wrapperRef.getBoundingClientRect();\n        const offset = elemRect.top - bodyRect.top;\n        window.scrollTo(0, offset);\n      }, 300);\n    } */\n  }\n\n  /**\n   * Lifecycle Method - componentWillUnmount\n   */\n  componentWillUnmount() {\n    // Remove Handler to handle click outside of screen\n    document.removeEventListener('mousedown', this.handleClickOutside);\n    window.removeEventListener('resize', this.updateDimensions);\n  }\n\n  /**\n   * Get client height of the selection container\n   * to determine the height of the whole control.\n   * (For multiple only)\n   *\n   * @param {object} event\n   */\n  updateDimensions() {\n    const { isMultiple } = this.props;\n\n    // Only multiple will expand\n    if (!isMultiple) {\n      return;\n    }\n\n    const {\n      clientHeight,\n      height,\n      extraPadding,\n    } = this.state;\n\n    // if client height is not same as DOM, update with padding if expanded\n    if (clientHeight !== this.selectedContainer.clientHeight) {\n      this.setState({\n        clientHeight: this.selectedContainer.clientHeight,\n        extraPadding: this.selectedContainer.clientHeight - 2 * extraPadding > height ? extraPaddingForMultiple : 0,\n      });\n    }\n  }\n\n  handleChange(value) {\n    const {\n      name,\n      form,\n      formChange,\n      notForm,\n      valueChangeCallback,\n    } = this.props;\n\n    if (notForm) {\n      if (valueChangeCallback) {\n        valueChangeCallback(value);\n      }\n      this.inputField.value = value;\n      return;\n    }\n\n    formChange(form, name, value);\n  }\n\n  /**\n   * End selection if click on outside\n   *\n   * @param {object} event\n   */\n  handleClickOutside(event) {\n    const { isOpened } = this.state;\n\n    // If clicked outside, go to exit\n    if (\n      isOpened &&\n      this.wrapperRef &&\n      !this.wrapperRef.contains(event.target)\n    ) {\n      // Close it\n      this.setState({\n        isOpened: false,\n      });\n\n      // Unset from focus\n      this.isFromFocus = false;\n    }\n  }\n\n  /**\n   * Handle on enter key\n   *\n   * @param {object} event\n   */\n  handleInputKeyPress(event) {\n    const {\n      isOpened,\n      listElementsCounter,\n    } = this.state;\n\n    // If pressed on enter, go to exit\n    if (event.key === 'Enter') {\n      this.handleExit();\n      event.preventDefault();\n      return;\n    }\n\n    // Press down arrow from input\n    if (event.key === 'ArrowDown') {\n      if (isOpened) {\n        if (listElementsCounter === -1) {\n          event.preventDefault();\n        }\n        this.handleItemKeyPress(event);\n      } else {\n        this.setState({\n          isOpened: true,\n        });\n      }\n    }\n  }\n\n  /**\n   * Key press on list items\n   *\n   * @param {object} event\n   */\n  handleItemKeyPress(event) {\n    const {\n      listElementsCounter,\n    } = this.state;\n\n    let index = listElementsCounter;\n\n    // If click enter on list item\n    if (event.key === 'Enter') {\n      // Focus input field\n      // this.inputField.focus();\n      // Handle exit with the item value\n      this.handleExit(this.listElements[index].getAttribute('value'));\n      event.preventDefault();\n      return;\n    }\n\n    // Navigate list with up down arrow\n    if (event.key === 'ArrowDown') {\n      index = listElementsCounter + 1;\n    } else if (event.key === 'ArrowUp') {\n      index = listElementsCounter - 1;\n    }\n\n    // Cap index within list\n    index = Math.max(0, Math.min(index, this.listElements.length - 1));\n    // Focus on the next item\n    this.listElements[index].focus();\n\n    // If index changed, update state\n    if (index !== listElementsCounter) {\n      this.setState({\n        listElementsCounter: index,\n      });\n    }\n\n    event.stopPropagation();\n  }\n\n  /**\n   * Handle toggling of dropdown list\n   *\n   * @param {bool} isOpenOnly - Only can open\n   */\n  handleSelectClick(isOpenOnly = false) {\n    const {\n      isOpened,\n      selectedString,\n      maxheight,\n      multipleSelectedElements,\n    } = this.state;\n\n    const {\n      dropList,\n      isMultiple,\n    } = this.props;\n\n    // If this frame is not from focus\n    if (!this.isFromFocus) {\n      // Set open state\n      if (!isOpenOnly || (isOpenOnly && !isOpened)) {\n        this.setState({\n          isOpened: !isOpened,\n        });\n      }\n\n      // If previously invalid, reset list\n      if (!selectedString || selectedString === resultNullString) {\n        this.setState({\n          listItems: dropList,\n          listHeight: maxheight,\n          listElementsCounter: -1,\n        });\n\n        if (!isMultiple || (isMultiple && _.isEmpty(multipleSelectedElements))) {\n          this.handleChange(null);\n        }\n      }\n    }\n\n    // Unlock from focus\n    this.isFromFocus = false;\n  }\n\n  /**\n   * Handles selection of dropdown item\n   *\n   * @param {object} event - Click event\n   * @param {string} item - Input string\n   */\n  handleSelectItemClick(event, item) {\n    // If click on null item return\n    if (item === resultNullString) {\n      return;\n    }\n\n    const { dropList } = this.props;\n\n    const {\n      isMultiple,\n    } = this.props;\n\n    // Reset drop list items to all, set selected string,\n    // and reset any errors\n    this.setState({\n      listItems: dropList,\n    });\n\n    // this.formParent.clearErrorString();\n\n    if (isMultiple) {\n      // If multiple dropdown, reset selected string\n      this.setState({\n        selectedString: '',\n      });\n\n      // Set input field text to empty\n      this.inputField.value = '';\n      // Refocus input bar\n      this.inputField.focus();\n\n      // Set multiple selected item\n      this.handleSetMultipleSelectedItem(item);\n    } else {\n      this.setState({\n        selectedString: item,\n      });\n\n      // Toggle the dropdown menu\n      this.handleSelectClick();\n\n      // Update redux state\n      this.handleChange(item);\n\n      // Close dropdown\n      this.setState({\n        isOpened: false,\n      });\n    }\n\n    event.stopPropagation();\n  }\n\n  /**\n   * Selection of multi select dropdown\n   *\n   * @param {string} item\n   */\n  handleSetMultipleSelectedItem(item) {\n    const { multipleSelectedElements, height } = this.state;\n\n    const newArr = multipleSelectedElements || [];\n\n    // If item does not exists in the selected list\n    if (newArr.indexOf(item) < 0) {\n      // Add item to list\n      newArr.push(item);\n\n      // Change state\n      this.setState({\n        multipleSelectedElements: newArr,\n        clientHeight: this.selectedContainer ? this.selectedContainer.clientHeight : height,\n        isOpened: false,\n      });\n\n      // Update redux store\n      this.handleChange(newArr);\n    }\n  }\n\n  /**\n   * Destroys multi selected item\n   *\n   * @param {string} item\n   */\n  handleDestroySelected(item) {\n    const { height } = this.state;\n\n    const { multipleSelectedElements } = this.state;\n    // Duplicate clean copy\n    let newArr = multipleSelectedElements.slice();\n    // Delete chosen item\n    const index = newArr.indexOf(item);\n    newArr.splice(index, 1);\n    // Set null if empty\n    newArr = newArr.length === 0 ? null : newArr;\n\n    // Update state\n    this.setState({\n      multipleSelectedElements: newArr,\n      clientHeight: this.selectedContainer ? this.selectedContainer.clientHeight : height,\n    });\n\n    // Update redux state\n    this.handleChange(newArr);\n    this.isFromFocus = false;\n  }\n\n  /**\n   * Handles on input changes\n   *\n   * @param {object} event\n   */\n  async handleOnInputChange(event) {\n    // Get current input value\n    const { value } = event.target;\n\n    const { dropList } = this.props;\n    const { height, numItemsDisplay } = this.state;\n\n    // Attempt to match value to list\n    const result = _.filter(\n      dropList,\n      item => item.toString().toUpperCase().indexOf(value.toString().toUpperCase()) === 0,\n    );\n\n    // Get length of new list, min 1 which is error string\n    const length = result.length ? result.length : 1;\n\n    // Set new list items, height of dropdown list,\n    // Force open list on type, and set selected string to value\n    this.setState({\n      listItems: result.length ? result : [resultNullString],\n      listHeight: (_.min([length, numItemsDisplay]) + 1) * height,\n      isOpened: true,\n      selectedString: value,\n      listElementsCounter: -1,\n    });\n  }\n\n  /**\n   * Handle Blur event\n   *\n   * @param {object} event\n   */\n  handleBlur(event) {\n    // Check if focus event contains children\n    const isChildren = this.wrapperRef.contains(event.relatedTarget);\n\n    // If outside of children\n    if (!isChildren) {\n      // Close dropdown\n      this.setState({\n        isOpened: false,\n      });\n      // Handle exit case\n      this.handleExit();\n      this.isFromFocus = false;\n    }\n  }\n\n  /**\n   * Handle Focus event\n   *\n   * @param {object} event\n   */\n  handleFocus(event) {\n    const { isOpened } = this.state;\n\n    // Check if focus event contains children\n    const isChildren = this.wrapperRef.contains(event.relatedTarget);\n    // If not from children\n    if (!isChildren) {\n      // Open dropdown\n      if (!isOpened) {\n        this.handleSelectClick(true);\n        // Prevent double click\n        this.isFromFocus = true;\n      }\n    }\n  }\n\n  /**\n   * Handle exit selection of entered input\n   *\n   * @param {string} inputString - From selection\n   */\n  handleExit(inputString = null) {\n    const {\n      selectedString,\n      listItems,\n    } = this.state;\n\n    const {\n      placeholderString,\n      dropList,\n      isMultiple,\n    } = this.props;\n\n    // Result string if match original list\n    let resultString = null;\n    // If input causes an error\n    let isError = false;\n    // The string to use\n    const finalString = inputString !== null ? inputString : selectedString;\n    // If possible valid input\n    if (\n      finalString &&\n      finalString !== placeholderString &&\n      finalString !== ''\n    ) {\n      // Attempt to match finalString to original list\n      listItems.some((obj) => {\n        const result = obj.toString().toLowerCase() === finalString.toString().toLowerCase();\n        if (result) {\n          resultString = obj;\n        }\n\n        return result;\n      });\n\n      // Check error if no match\n      isError = !resultString;\n      // Set result string to match value or error value\n      resultString = isError ? null : resultString;\n\n      if (isMultiple) {\n        if (!isError) {\n          this.handleSetMultipleSelectedItem(resultString);\n        }\n\n        this.inputField.value = '';\n      } else {\n        // Update redux value\n        this.handleChange(resultString);\n\n        this.setState({\n          isOpened: false,\n        });\n      }\n    }\n\n    // If not error, reset list to list all,\n    // Set selected string and error if possible\n    // and close the list\n    this.setState({\n      listItems: isError ? listItems : dropList,\n      selectedString: resultString,\n    });\n\n    if (isError) {\n      // this.formParent.setErrorString(resultNullString);\n    } else {\n      // this.formParent.clearErrorString();\n    }\n  }\n\n  /**\n   * Renders the dropdown list items\n   */\n  renderListItems() {\n    const { listItems, height } = this.state;\n    this.listElements = [];\n\n    const result = _.map(listItems, item => (\n      <li key={item}>\n        <div\n          className=\"list-item text-style\"\n          style={{ height }}\n          onClick={event => this.handleSelectItemClick(event, item)}\n          role=\"button\"\n          tabIndex={-1}\n          value={item}\n          onKeyDown={(event) => { this.handleItemKeyPress(event); }}\n          ref={(node) => { if (node !== null) this.listElements.push(node); }}\n        >\n          <p>{item}</p>\n        </div>\n      </li>\n    ));\n\n    return result;\n  }\n\n  /**\n   * Render the multiple selected elements in the input container\n   */\n  renderMultipleSelectedElements() {\n    const { multipleSelectedElements } = this.state;\n\n    return _.map(multipleSelectedElements, item => (\n      <div className=\"selected-item-container\" key={item}>\n        <div className=\"selected-item\">\n          <p>{item}</p>\n          <button\n            className=\"selected-item-destroy\"\n            onMouseUp={() => this.handleDestroySelected(item)}\n            tabIndex={-1}\n          >\n            <img src={Cross} alt=\"cross.svg\" />\n          </button>\n        </div>\n      </div>\n    ));\n  }\n\n  renderTextInput() {\n    const {\n      isMultiple,\n      isDisableTyping,\n      placeholderString,\n      name,\n      notForm,\n    } = this.props;\n\n    if (isMultiple || notForm) {\n      return (\n        isDisableTyping ?\n          <input\n            component=\"input\"\n            type=\"text\"\n            placeholder={placeholderString}\n            autoComplete=\"off\"\n            ref={node => (this.inputField = node)}\n            onChange={event => this.handleOnInputChange(event)}\n            onKeyDown={event => this.handleInputKeyPress(event)}\n            onClick={() => this.handleSelectClick(true)}\n            tabIndex={0}\n            disabled\n          />\n          :\n          <input\n            component=\"input\"\n            type=\"text\"\n            placeholder={placeholderString}\n            autoComplete=\"off\"\n            ref={node => (this.inputField = node)}\n            onChange={event => this.handleOnInputChange(event)}\n            onKeyDown={event => this.handleInputKeyPress(event)}\n            onClick={() => this.handleSelectClick(true)}\n            tabIndex={0}\n          />\n      );\n    }\n\n    return (\n      isDisableTyping ?\n        <Field\n          name={name}\n          component=\"input\"\n          type=\"text\"\n          placeholder={placeholderString}\n          autoComplete=\"off\"\n          ref={node => (this.inputField = node)}\n          onChange={event => this.handleOnInputChange(event)}\n          onKeyDown={event => this.handleInputKeyPress(event)}\n          onClick={() => this.handleSelectClick(true)}\n          tabIndex={0}\n          disabled\n        />\n        :\n        <Field\n          name={name}\n          component=\"input\"\n          type=\"text\"\n          placeholder={placeholderString}\n          autoComplete=\"off\"\n          ref={node => (this.inputField = node)}\n          onChange={event => this.handleOnInputChange(event)}\n          onKeyDown={event => this.handleInputKeyPress(event)}\n          onClick={() => this.handleSelectClick(true)}\n          tabIndex={0}\n        />\n    );\n  }\n\n  /**\n   * Render component\n   */\n  render() {\n    const {\n      isOpened,\n      listHeight,\n      height,\n      clientHeight,\n      extraPadding,\n    } = this.state;\n\n    if (height && listHeight) {\n      const {\n        zIndex,\n        maxWidth,\n        isMultiple,\n        desc,\n        extraInfo,\n        errorString,\n        formStore,\n        name,\n        validateForm,\n      } = this.props;\n\n      // Actual height of the whole control\n      const actualheight = isOpened ? listHeight : height;\n      // Actual height of only the list\n      const actualListheight = actualheight - height;\n\n      // Dynamic styles\n      const dropDownOpenStyle = isOpened ? 'dropdown-container-opened' : 'dropdown-container-closed';\n      const arrowStyle = isOpened ? 'angle-up' : 'angle-down';\n      const listStyle = isOpened ? 'list-opened' : 'list-closed';\n      const isErrorStyle = errorString ? 'error' : '';\n      const multipleStyle = isMultiple ? 'multi-drop' : '';\n      const refValue = formStore ? formStore[name] : null;\n\n      return (\n        <FormInputWrapper\n          desc={desc}\n          ref={node => (this.formParent = node)}\n          extraInfo={extraInfo}\n          errorString={errorString}\n          refValue={refValue}\n          validateForm={validateForm}\n        >\n          <div\n            className={`dropdown ${multipleStyle}`}\n            style={{ height: clientHeight, zIndex, maxWidth }}\n            ref={node => (this.wrapperRef = node)}\n            onBlur={event => this.handleBlur(event)}\n            onFocus={event => this.handleFocus(event)}\n          >\n            <div\n              className={`dropdown-container ${dropDownOpenStyle} ${isErrorStyle}`}\n            >\n              <div\n                className=\"selected-container\"\n                onKeyDown={event => this.handleInputKeyPress(event)}\n                role=\"button\"\n                style={{ minHeight: height }}\n                tabIndex={-1}\n                ref={node => (this.selectedContainer = node)}\n              >\n                {\n                  isMultiple ?\n                    <div className=\"mag-container\" style={{ minHeight: height }}>\n                      <img\n                        className=\"mag-icon\"\n                        src={MagnifyGlass}\n                        alt=\"magnifyGlass.svg\"\n                      />\n                    </div>\n                  :\n                    null\n                }\n                <div\n                  className=\"selected-items-container\"\n                  style={{ paddingTop: extraPadding, paddingBottom: extraPadding }}\n                >\n                  {this.renderMultipleSelectedElements()}\n                  <div className=\"selected-text selected-text-multi text-style\">\n                    {this.renderTextInput()}\n                  </div>\n                </div>\n                <div\n                  className=\"selected-arrow\"\n                  onClick={() => this.handleSelectClick()}\n                  onKeyPress={() => {}}\n                  role=\"button\"\n                  tabIndex={-1}\n                >\n                  <img\n                    src={Arrow}\n                    alt=\"arrow.svg\"\n                    className={`selected-arrow-style ${arrowStyle}`}\n                  />\n                </div>\n              </div>\n              <Scrollbars\n                className={`list-container ${listStyle}`}\n                style={{\n                  minHeight: actualListheight,\n                }}\n                ref={node => this.listContainer = node}\n                tabIndex={-1}\n              >\n                {\n                  isOpened ?\n                    this.renderListItems()\n                  :\n                    null\n                }\n              </Scrollbars>\n            </div>\n          </div>\n        </FormInputWrapper>\n      );\n    }\n\n    return null;\n  }\n}\n\nDropDownV2.defaultProps = {\n  maxWidth: '100%',\n  numItemsDisplay: maxItemsDisplay,\n  isMultiple: false,\n  desc: null,\n  isDisableTyping: false,\n  extraInfo: null,\n  notForm: false,\n  overrideValue: null,\n  errorString: null,\n  dropList: null,\n  formStore: null,\n  valueChangeCallback: null,\n  name: null,\n  form: null,\n  validateForm: null,\n};\n\nDropDownV2.propTypes = {\n  formStore: PropTypes.object,\n  dropList: PropTypes.array,\n  placeholderString: PropTypes.string.isRequired,\n  maxWidth: PropTypes.string,\n  size: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  zIndex: PropTypes.number.isRequired,\n  numItemsDisplay: PropTypes.number,\n  formChange: PropTypes.func.isRequired,\n  isMultiple: PropTypes.bool,\n  desc: PropTypes.string,\n  isDisableTyping: PropTypes.bool,\n  extraInfo: PropTypes.object,\n  notForm: PropTypes.bool,\n  overrideValue: PropTypes.string,\n  errorString: PropTypes.string,\n  valueChangeCallback: PropTypes.func,\n  form: PropTypes.string,\n  validateForm: PropTypes.func,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  formStore: (getFormValues(ownProps.form)(state)),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  formChange: (form, key, value) => {\n    dispatch(change(form, key, value));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropDownV2);\n","module.exports = __webpack_public_path__ + \"static/media/magnifyGlass.eedb8132.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.3995dd26.svg\";","/**\n * DropDown.js\n * Custom form dropdown menu with input\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, change, getFormValues } from 'redux-form';\nimport PropTypes from 'prop-types';\n\nimport MagnifyGlass from 'assets/images/forms/magnifyGlass.svg';\n\nimport FormInputWrapper from '../FormInputWrapper/FormInputWrapper';\n\nimport { getPostal } from '../../../actions/insuranceActions';\n\nimport './TextInput.scss';\n\n// Height for medium dropdown\nconst mediumHeight = 60;\n// Height for big dropdown\nconst bigHeight = 72;\n\n/**\n * Custom Form Dropdown class\n */\nclass TextInput extends Component {\n  /**\n   * Constructor\n   *\n   * @param {object} props Component props\n   */\n  constructor(props) {\n    super(props);\n\n    // dropList - The passed down dropdown list items\n    // placeholderString - Placeholder string for input\n    // size - Size of this control\n    // numItemsDisplay - Max items to display on view\n    const {\n      size,\n      height,\n    } = this.props;\n\n    // Get the control height\n    let heightToUse = size === 'big' ? bigHeight : mediumHeight;\n    heightToUse = height || heightToUse;\n\n    // isOpened - Whether dropdown is opened\n    // listItems - The actual dropdown list\n    // selectedString - The selected item string\n    // height - Control height\n    // numItemsDisplay - How many items to display\n    // maxheight - Max height of the list\n    // listHeight - Height of the list. (Items count + control)\n    this.state = {\n      height: heightToUse,\n      isFocus: false,\n    };\n\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.setError = this.setError.bind(this);\n    this.clearError = this.clearError.bind(this);\n    this.renderTextArea = this.renderTextArea.bind(this);\n    this.handlePostCode = this.handlePostCode.bind(this);\n  }\n\n  setError(message) {\n    this.formParent.setErrorString(message);\n  }\n\n  clearError() {\n    this.formParent.clearErrorString();\n  }\n\n  handleFocus() {\n    this.setState({\n      isFocus: true,\n    });\n  }\n\n  handleBlur() {\n    this.setState({\n      isFocus: false,\n    });\n  }\n\n  async handlePostCode(e) {\n    e.preventDefault();\n    const {\n      storeValue,\n      name,\n      addressFields,\n      formChange,\n      form,\n    } = this.props;\n\n    if (storeValue) {\n      const postcode = storeValue[name];\n      const result = await getPostal(postcode);\n      if (result) {\n        // const streetName = result.name === '' ? '' : `${result.name} `;\n        const street = result.street === '' ? '' : `${result.street} `;\n        const block = result.block === '' ? '' : `${result.block} `;\n        // let concatAddress = `${block}${streetName}${street}`;\n        let concatAddress = `${block}${street}`;\n\n        if (addressFields.blkNo) {\n          formChange(form, addressFields.blkNo, result.block);\n          concatAddress = street;\n        }\n\n        if (addressFields.address) {\n          formChange(form, addressFields.address, concatAddress);\n        }\n      }\n    }\n  }\n\n  renderTextArea({ input }) {\n    const { placeholderString } = this.props;\n    return (\n      <div className=\"text-area\">\n        <textarea {...input} placeholder={placeholderString} rows=\"10\" cols=\"40\" />\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      height,\n      isFocus,\n    } = this.state;\n\n    const {\n      name,\n      desc,\n      placeholderString,\n      zIndex,\n      isPassword,\n      extraInfo,\n      errorString,\n      isTextArea,\n      storeValue,\n      validateForm,\n      isPostCode,\n      toUpper,\n    } = this.props;\n\n    const focusStyle = isFocus ? 'focus' : '';\n    const passwordType = isPassword ? 'password' : '';\n    const errorStyle = errorString ? 'error' : '';\n\n    const refValue = storeValue ? storeValue[name] : null;\n\n    return (\n      <FormInputWrapper\n        desc={desc}\n        ref={node => (this.formParent = node)}\n        extraInfo={extraInfo}\n        errorString={errorString}\n        refValue={refValue}\n        validateForm={validateForm}\n      >\n        <div\n          className={`text-input-container ${focusStyle} ${errorStyle}`}\n          style={{ height, zIndex }}\n          onFocus={() => this.handleFocus()}\n          onBlur={() => this.handleBlur()}\n        >\n          <div className=\"text-input\">\n            {\n              isTextArea ?\n                <Field\n                  className=\"text\"\n                  component={this.renderTextArea}\n                  name={name}\n                  normalize={value => (value && toUpper ? value.toUpperCase() : value)}\n                />\n                :\n                  <Field\n                    className=\"text\"\n                    component=\"input\"\n                    type={passwordType}\n                    placeholder={placeholderString}\n                    name={name}\n                    normalize={value => (value && toUpper ? value.toUpperCase() : value)}\n                  />\n            }\n            {\n              isPostCode ?\n                <button\n                  className=\"postcode\"\n                  onClick={e => this.handlePostCode(e)}\n                >\n                  <img src={MagnifyGlass} alt=\"magGlass.svg\" />\n                </button>\n              :\n                null\n            }\n          </div>\n        </div>\n      </FormInputWrapper>\n    );\n  }\n}\n\nTextInput.defaultProps = {\n  desc: null,\n  isPassword: false,\n  extraInfo: null,\n  errorString: null,\n  isTextArea: false,\n  height: null,\n  storeValue: null,\n  isPostCode: false,\n  addressFields: null,\n  validateForm: null,\n  toUpper: false,\n};\n\n\nTextInput.propTypes = {\n  placeholderString: PropTypes.string.isRequired,\n  size: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  zIndex: PropTypes.number.isRequired,\n  desc: PropTypes.string,\n  isPassword: PropTypes.bool,\n  extraInfo: PropTypes.object,\n  errorString: PropTypes.string,\n  isTextArea: PropTypes.bool,\n  height: PropTypes.number,\n  validateForm: PropTypes.func,\n  storeValue: PropTypes.object,\n  isPostCode: PropTypes.bool,\n  addressFields: PropTypes.object,\n  toUpper: PropTypes.bool,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  storeValue: (getFormValues(ownProps.form)(state)),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  formChange: (form, key, value) => {\n    dispatch(change(form, key, value));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TextInput);\n","module.exports = __webpack_public_path__ + \"static/media/dateIn.c0ce64e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/dateOut.c0f774d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/triangle.9456eda2.svg\";","module.exports = __webpack_public_path__ + \"static/media/CashbackLogo.47f3e5e5.svg\";","/**\n * DateInner.js\n * DateView only for rendering\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap';\n\nimport CloseIcon from 'assets/images/common/CloseIcon.svg';\nimport Arrow from 'assets/images/forms/arrow.svg';\nimport Triangle from 'assets/images/forms/triangle.svg';\n\nimport './DateInner.scss';\n\n// Day Text for display\nconst dayTextList = [\n  'SU',\n  'MO',\n  'TU',\n  'WE',\n  'TH',\n  'FR',\n  'SA',\n];\n// Month text for display\nconst monthTextMapping = [\n  'January',\n  'Feburary',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\n// Default year range if not user defined\nconst deafultYearRange = 100;\n// Height for month and year dropdown items\nconst monthItemHeight = 32;\nconst yearItemHeight = 32;\n\n/**\n * Custom Form Dropdown class\n */\nclass DateInner extends Component {\n  constructor(props) {\n    super(props);\n    // Get current date\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    // Get first and last day of the month to display\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    // Get the calender range\n    const dateRangeStart = new Date(year - deafultYearRange, month);\n    const dateRangeEnd = new Date(year + deafultYearRange, month);\n\n    // isOpened - Whether dropdown is opened\n    // currDate - Current selected date in view\n    // currFirstDay - Current first day of the month in view\n    // currLastDay - Current last day of the month in view\n    // monthDropdownOpen - Whether month selector is opened\n    // yearDropdownOpen - Whether year selector is opened\n    // selectedStartDate - Selected start date(If single select also use this)\n    // selectedEndDate - Selected end date for date range picker\n    // dateRangeStart - The actual calender start range\n    // dateRangeEnd - The actual calender end range\n    // isArrowUp - The arrow image of datepicker\n    // setSelectedDate - Function to set selected date from main control\n    // setNewDate - Function to set new date from main control\n    this.state = {\n      isOpened: false,\n      currDate: date,\n      currFirstDay: firstDay,\n      currLastDay: lastDay,\n      monthDropdownOpen: false,\n      yearDropdownOpen: false,\n      selectedStartDate: null,\n      selectedEndDate: null,\n      dateRangeStart,\n      dateRangeEnd,\n      isArrowUp: true,\n      setSelectedDate: null,\n      setNewDate: null,\n    };\n\n    this.setCalender = this.setCalender.bind(this);\n    this.setArrowUp = this.setArrowUp.bind(this);\n    this.setNewState = this.setNewState.bind(this);\n    this.toggleDateInner = this.toggleDateInner.bind(this);\n    this.toggleMonth = this.toggleMonth.bind(this);\n    this.toggleYear = this.toggleYear.bind(this);\n  }\n\n  /**\n   * Lifecycle Method - componentDidUpdate\n   *\n   * Used to update dropdown position\n   * of month and year selector\n   */\n  componentDidUpdate() {\n    // Ref to month and year dropdown\n    const {\n      yearInput,\n      monthInput,\n    } = this;\n\n    const {\n      currDate,\n      dateRangeStart,\n    } = this.state;\n\n    // Get current year and month\n    const year = currDate.getFullYear();\n    const month = currDate.getMonth();\n\n    // Update year scroll position to current year\n    if (yearInput) {\n      const height = year - dateRangeStart.getFullYear();\n      const yearInputScroll = yearInput.childNodes[0];\n      yearInputScroll.scrollTop = yearItemHeight * height;\n    }\n\n    // Update year scroll position to current month\n    if (monthInput) {\n      const monthInputScroll = monthInput.childNodes[0];\n      monthInputScroll.scrollTop = monthItemHeight * month;\n    }\n\n    if (this.dateMonthInput) {\n      this.dateMonthInput.childNodes[0].setAttribute('tabindex', '-1');\n    }\n\n    if (this.dateYearInput) {\n      this.dateYearInput.childNodes[0].setAttribute('tabindex', '-1');\n    }\n  }\n\n  /**\n   * setCalender\n   *\n   * Set visible calender\n   *\n   * @param {number} month\n   * @param {number} year\n   */\n  setCalender(month, year) {\n    const {\n      dateRangeStart,\n      dateRangeEnd,\n      setNewDate,\n    } = this.state;\n\n    let date = new Date(year, month);\n\n    // Cap date range\n    if (date < dateRangeStart) {\n      date = dateRangeStart;\n    } else if (date > dateRangeEnd) {\n      date = dateRangeEnd;\n    }\n\n    setNewDate(date);\n    // this.wrapperRef.focus();\n  }\n\n  setNewState(data) {\n    this.setState({ ...data });\n  }\n\n  setArrowUp(isArrowUp) {\n    this.setState({ isArrowUp });\n  }\n\n  toggleDateInner(isOpen, settings) {\n    this.setState({ isOpened: isOpen });\n    if (isOpen) {\n      this.setState({ ...settings });\n    }\n  }\n\n  /**\n   * toggleMonth\n   *\n   * Toggle dropdown\n   */\n  toggleMonth() {\n    const {\n      monthDropdownOpen,\n    } = this.state;\n\n    this.setState({\n      monthDropdownOpen: !monthDropdownOpen,\n    });\n\n    this.isFromFocus = false;\n  }\n\n  /**\n   * toggleYear\n   *\n   * Toggle dropdown\n   */\n  toggleYear() {\n    const {\n      yearDropdownOpen,\n    } = this.state;\n\n    this.setState({\n      yearDropdownOpen: !yearDropdownOpen,\n    });\n\n    this.isFromFocus = false;\n  }\n\n  /**\n   * renderDaysText\n   *\n   * Render the days text\n   */\n  renderDaysText() {\n    return _.map(dayTextList, day => (\n      <div\n        className=\"date-col\"\n        key={day}\n      >\n        <p>{day}</p>\n      </div>\n    ));\n  }\n\n  /**\n   * renderDaysSingle\n   *\n   * Render calender days for single selection\n   */\n  renderDaysSingle() {\n    const {\n      currFirstDay,\n      currLastDay,\n      selectedStartDate,\n      dateRangeStart,\n      dateRangeEnd,\n      setSelectedDate,\n    } = this.state;\n\n    const month = currFirstDay.getMonth();\n    const year = currFirstDay.getFullYear();\n\n    // Get the starting blank days of the calender\n    const startIndex = currFirstDay.getDay();\n    // Get the end day\n    const endIndex = currLastDay.getDate();\n\n    // Get starting time\n    const startTime = selectedStartDate ? selectedStartDate.getTime() : null;\n\n    const result = [];\n\n    // These are blank elements to simulate last month dates\n    for (let i = 0; i < startIndex; ++i) {\n      result.push(<div className=\"date-col\" key={`blank${i.toString()}`} />);\n    }\n\n    for (let i = 1; i <= endIndex; ++i) {\n      const currDay = new Date(year, month, i);\n      const currTime = currDay.getTime();\n\n      // Check if current day is previously selected day\n      const isDayActive = startTime === currTime;\n      // Set to active if selected\n      const dayStyle = isDayActive ? 'day-active' : 'day-inactive';\n      // Block days that are out of range\n      const isBlocked = currDay < dateRangeStart || currDay > dateRangeEnd;\n\n      result.push((\n        <button\n          className=\"date-col day-container\"\n          key={`day${i.toString()}`}\n          onClick={() => {\n            if (!isBlocked) {\n              setSelectedDate(new Date(year, month, i));\n              this.setState({ isOpened: false });\n            }\n          }}\n          tabIndex={-1}\n        >\n          <div className=\"day-range left-inactive\" />\n          <div className=\"day-range right-inactive\" />\n          <div className=\"end-inactive\" />\n          {\n            isBlocked ?\n              <div className=\"day\">\n                <p className=\"blocked\">{i}</p>\n              </div>\n            :\n              <div className={`day ${dayStyle}`}>\n                <p>{i}</p>\n              </div>\n          }\n        </button>));\n    }\n\n    return result;\n  }\n\n  /**\n   * renderDays\n   *\n   * Render calender days for range selection\n   */\n  renderDays() {\n    const {\n      currFirstDay,\n      currLastDay,\n      selectedStartDate,\n      selectedEndDate,\n      dateRangeStart,\n      dateRangeEnd,\n      setSelectedDate,\n      isRange,\n      isStart,\n    } = this.state;\n\n    const currFirstDayTime = currFirstDay.getTime();\n    const currLastDayTime = currLastDay.getTime();\n\n    const month = currFirstDay.getMonth();\n    const year = currFirstDay.getFullYear();\n\n    // Get the starting blank days of the calender\n    const startIndex = currFirstDay.getDay();\n    // Get the end day\n    const endIndex = currLastDay.getDate();\n\n    // Get starting time\n    const startTime = selectedStartDate ? selectedStartDate.getTime() : null;\n    const endTime = selectedEndDate ? selectedEndDate.getTime() : null;\n\n    const result = [];\n\n    // These are blank elements to simulate last month dates\n    for (let i = 0; i < startIndex; ++i) {\n      result.push(<div className=\"date-col\" key={`blank${i.toString()}`} />);\n    }\n\n    for (let i = 1; i <= endIndex; ++i) {\n      const currDay = new Date(year, month, i);\n      const currDayOfWeek = currDay.getDay();\n      const currTime = currDay.getTime();\n\n      const isSat = currDayOfWeek === 6;\n      const isSun = currDayOfWeek === 0;\n      const isStartDate = startTime === currTime;\n      const isEndDate = endTime === currTime;\n      const isWithin = startTime && endTime && startTime < currTime && currTime < endTime;\n      const isFirstDay = currFirstDayTime === currTime;\n      const isLastDay = currLastDayTime === currTime;\n\n      const isSameDay = startTime === endTime;\n      const isLeftBlockActive = !isSameDay && (!isSun && !isFirstDay) && ((isEndDate && startTime)\n                                || isWithin);\n      const isRightBlockActive = !isSameDay && (!isSat && !isLastDay) && ((isStartDate && endTime)\n                                || isWithin);\n      const isDayActive = isStartDate || isEndDate;\n      const isEndActive = isDayActive || (isWithin && (isSat || isSun || isFirstDay || isLastDay));\n\n      // Left bock, right block, circle block and selected circle block\n      const leftBlockStyle = isLeftBlockActive ? 'left-active' : 'left-inactive';\n      const rightBlockStyle = isRightBlockActive ? 'right-active' : 'right-inactive';\n      const endBlockStyle = isEndActive ? 'end-active' : 'end-inactive';\n      const dayStyle = isDayActive ? 'day-active' : 'day-inactive';\n\n      // Check if day is in within selected range\n      let isBlocked = false;\n      if (isRange) {\n        if (isStart && selectedEndDate) {\n          // isBlocked = currDay > selectedEndDate;\n        } else if (!isStart && selectedStartDate) {\n          isBlocked = currDay < selectedStartDate;\n        }\n      }\n\n      // Check if day is out of calender range\n      if (!isBlocked) {\n        isBlocked = currDay < dateRangeStart || currDay > dateRangeEnd;\n      }\n\n      result.push((\n        <button\n          className=\"date-col day-container\"\n          key={`day${i.toString()}`}\n          onClick={() => {\n            if (!isBlocked) {\n              setSelectedDate(new Date(year, month, i));\n              this.setState({ isOpened: false });\n            }\n          }}\n          tabIndex={-1}\n        >\n          <div className={`day-range  ${leftBlockStyle}`} />\n          <div className={`day-range  ${rightBlockStyle}`} />\n          <div className={`${endBlockStyle}`} />\n          {\n            isBlocked ?\n              <div className=\"day-disabled\">\n                <p className=\"blocked\">{i}</p>\n              </div>\n            :\n              <div className={`day ${dayStyle}`}>\n                <p>{i}</p>\n              </div>\n          }\n        </button>));\n    }\n\n    return result;\n  }\n\n  /**\n   * renderMonths\n   *\n   * Render months dropdown\n   */\n  renderMonths() {\n    const {\n      currDate,\n      dateRangeStart,\n      dateRangeEnd,\n    } = this.state;\n\n    const startYear = dateRangeStart.getFullYear();\n    const endYear = dateRangeEnd.getFullYear();\n    const currYear = currDate.getFullYear();\n\n    const startMonth = currYear === startYear ? dateRangeStart.getMonth() : 0;\n    const endMonth = currYear === endYear ? dateRangeEnd.getMonth() : 11;\n\n    return _.reduce(monthTextMapping, (result, item, index) => {\n      if (startMonth <= index && index <= endMonth) {\n        const jsx = (\n          <DropdownItem\n            onClick={() => {\n              this.setCalender(index, currYear);\n            }}\n            key={`month${index.toString()}`}\n          >\n            {item}\n          </DropdownItem>\n        );\n        result.push(jsx);\n      }\n\n      return result;\n    }, []);\n  }\n\n  /**\n   * renderYears\n   *\n   * Render years dropdown\n   */\n  renderYears() {\n    const {\n      currDate,\n      dateRangeStart,\n      dateRangeEnd,\n    } = this.state;\n\n    const start = dateRangeStart.getFullYear();\n    const end = dateRangeEnd.getFullYear();\n\n    const result = [];\n    for (let i = start; i <= end; ++i) {\n      result.push((\n        <DropdownItem\n          onClick={() => {\n            this.setCalender(currDate.getMonth(), i);\n          }}\n          key={`year${i.toString()}`}\n        >\n          {i}\n        </DropdownItem>\n      ));\n    }\n\n    return result;\n  }\n\n  /**\n   * renderDateInner\n   *\n   * Render the popup od the datepicker\n   */\n  renderDateInner() {\n    const {\n      monthDropdownOpen,\n      yearDropdownOpen,\n      currDate,\n      isRange,\n      setSelectedDate,\n      selectedStartDate,\n      selectedEndDate,\n      isStart,\n    } = this.state;\n\n    const month = currDate.getMonth();\n    const monthText = monthTextMapping[month];\n    const year = currDate.getFullYear();\n\n    return (\n      <div className=\"date-inner-container\">\n        <div\n          role=\"button\"\n          className=\"close-button-container\"\n          onKeyPress={() => {}}\n          onClick={() => {\n            setSelectedDate(isStart ? selectedStartDate : selectedEndDate);\n            this.setState({ isOpened: false });\n          }}\n          tabIndex={-1}\n        >\n          <img src={CloseIcon} className=\"close-icon\" alt=\"close\" />\n        </div>\n        <div className=\"row\" style={{ marginBottom: 30 }}>\n          <div\n            className=\"date-arrow-style col-1\"\n            onClick={() => this.setCalender(month - 1, year)}\n            onKeyUp={() => {}}\n            role=\"button\"\n            tabIndex={-1}\n          >\n            <img\n              src={Arrow}\n              alt=\"arrow.svg\"\n              className=\"angle-left\"\n            />\n          </div>\n          <div className=\"col-6 selector-left\">\n            <Dropdown isOpen={monthDropdownOpen} toggle={this.toggleMonth}>\n              <div ref={(dateMonthInput) => { this.dateMonthInput = dateMonthInput; }}>\n                <DropdownToggle caret outline>\n                  {monthText}\n                </DropdownToggle>\n              </div>\n              <div ref={(input) => { this.monthInput = input; }}>\n                <DropdownMenu>\n                  {this.renderMonths()}\n                </DropdownMenu>\n              </div>\n            </Dropdown>\n          </div>\n          <div className=\"col-4 selector-right\">\n            <Dropdown isOpen={yearDropdownOpen} toggle={this.toggleYear}>\n              <div ref={(dateYearInput) => { this.dateYearInput = dateYearInput; }}>\n                <DropdownToggle caret outline>\n                  {year}\n                </DropdownToggle>\n              </div>\n              <div ref={(input) => { this.yearInput = input; }}>\n                <DropdownMenu>\n                  {this.renderYears()}\n                </DropdownMenu>\n              </div>\n            </Dropdown>\n          </div>\n          <div\n            className=\"date-arrow-style col-1\"\n            onClick={() => this.setCalender(month + 1, year)}\n            onKeyUp={() => {}}\n            role=\"button\"\n            tabIndex={-1}\n          >\n            <img\n              src={Arrow}\n              alt=\"arrow.svg\"\n              className=\"angle-right\"\n            />\n          </div>\n        </div>\n        <div className=\"row date-inner-padding\">\n          {this.renderDaysText()}\n        </div>\n        <div className=\"row date-divider\" />\n        <div className=\"row date-inner-padding\">\n          { isRange ? this.renderDays() : this.renderDaysSingle() }\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      isArrowUp,\n      isOpened,\n    } = this.state;\n\n    const openedStyle = isOpened ? 'dateinner-opened' : '';\n    const dateOpenStyle = isOpened ? 'date-container-opened' : 'date-container-closed';\n\n    const arrowStyle = isArrowUp ? 'arrow-up' : 'arrow-down';\n    return (\n      <Fragment>\n        <div className={`${openedStyle} dateinner`}>\n          <div\n            className={`\n                        ${dateOpenStyle} \n                      `}\n          >\n            <img className={arrowStyle} src={Triangle} alt=\"triangle.svg\" />\n            <div\n              className=\"list-container list-opened\"\n              ref={node => this.listCont = node}\n            >\n              {\n                isOpened ?\n                this.renderDateInner()\n                :\n                null\n              }\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default DateInner;\n","/**\n * DatePickerV2.js\n * Custom form dropdown menu with input\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { Field, getFormValues } from 'redux-form';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport Arrow from 'assets/images/forms/arrow.svg';\nimport DateIn from 'assets/images/forms/dateIn.svg';\nimport DateOut from 'assets/images/forms/dateOut.svg';\n\nimport FormInputWrapper from '../FormInputWrapper/FormInputWrapper';\nimport DateInner from './DateInner';\nimport { isDateEqual, storeStringToDate } from '../../../lib/dateFunctions';\n\nimport '../DropDown/DropDown.scss';\nimport './DatePickerV2.scss';\n\n/**\n * Constants\n */\n// Placeholder string when no input\nconst placeholderStringDefault = 'dd/mm/yyy';\n// Month text for display\nconst monthTextMapping = [\n  'January',\n  'Feburary',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\n// Height for medium dropdown\nconst mediumHeight = 60;\n// Height for big dropdown\nconst bigHeight = 72;\n// Default year range if not user defined\nconst deafultYearRange = 100;\n\n\n/**\n * Custom Form Dropdown class\n */\nclass DatePickerV2 extends Component {\n  /**\n   * Lifecycle Method - getDerivedStateFromProps\n   *\n   * Used to set sibling date range values for\n   * selected start and end date\n   *\n   * @param {object} nextProps Component props\n   */\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const result = {};\n\n    // Update selected Start End date state\n    function updateStartEndDate(dateName, date) {\n      const dateReformed = storeStringToDate(date);\n      if (dateReformed !== -1) {\n        result[dateName] = dateReformed;\n      }\n    }\n\n    // Only valid for date range picker\n    const { isRange, endDate } = nextProps;\n\n    if (isRange) {\n      const {\n        incomingStartDate,\n        incomingEndDate,\n      } = nextProps;\n      updateStartEndDate('selectedStartDate', incomingStartDate);\n      updateStartEndDate('selectedEndDate', incomingEndDate);\n    }\n\n    // Update end date from date range picker\n    if (endDate && !isDateEqual(endDate, prevState.dateRangeEnd)) {\n      result.dateRangeEnd = endDate;\n    }\n\n    return result === {} ? null : result;\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {object} props Component props\n   */\n  constructor(props) {\n    super(props);\n\n    // size - Size of this control\n    // startDate - Start range of date\n    // endDate - End range of date\n    // currDate - Day to set current view in calender (Default to today)\n    const {\n      size,\n      startDate,\n      endDate,\n      currDate,\n      placeholderString,\n    } = this.props;\n\n    // Get the control height\n    const height = size === 'big' ? bigHeight : mediumHeight;\n\n    // Get current date\n    const date = currDate || new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    // Get first and last day of the month to display\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    // Get the calender range\n    const dateRangeStart = startDate != null ? startDate : new Date(year - deafultYearRange, month);\n    const dateRangeEnd = endDate != null ? endDate : new Date(year + deafultYearRange, month);\n\n    // Get default placeholder string\n    const placeHolder = placeholderString != null ? placeholderString : placeholderStringDefault;\n\n    // isOpened - Whether dropdown is opened\n    // isError - Whether there is input error\n    // selectedString - The selected date string\n    // height - Control height\n    // currDate - Current selected date in view\n    // currFirstDay - Current first day of the month in view\n    // currLastDay - Current last day of the month in view\n    // monthDropdownOpen - Whether month selector is opened\n    // yearDropdownOpen - Whether year selector is opened\n    // selectedStartDate - Selected start date(If single select also use this)\n    // selectedEndDate - Selected end date for date range picker\n    // dateRangeStart - The actual calender start range\n    // dateRangeEnd - The actual calender end range\n    this.state = {\n      isOpened: false,\n      selectedString: placeHolder,\n      height,\n      currDate: date,\n      currFirstDay: firstDay,\n      currLastDay: lastDay,\n      selectedStartDate: null,\n      selectedEndDate: null,\n      dateRangeStart,\n      dateRangeEnd,\n      placeHolder,\n    };\n\n    this.handleSelectClick = this.handleSelectClick.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.handleOnInputChange = this.handleOnInputChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleExit = this.handleExit.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n\n    this.setSelectedDate = this.setSelectedDate.bind(this);\n    this.setNewDate = this.setNewDate.bind(this);\n    this.setCalender = this.setCalender.bind(this);\n    this.onMovement = this.onMovement.bind(this);\n\n    this.isFromFocus = false;\n  }\n\n  /**\n   * Lifecycle Method - componentDidMount\n   */\n  componentDidMount() {\n    // Add Handler to handle click outside of screen\n    document.addEventListener('mousedown', this.handleClickOutside);\n    window.addEventListener('scroll', this.onMovement);\n    window.addEventListener('resize', this.onMovement);\n\n    const {\n      name,\n      formStore,\n      dateInner,\n    } = this.props;\n\n    // Update prefill dates\n    if (formStore && formStore[name]) {\n      this.setSelectedDate(storeStringToDate(formStore[name]));\n    }\n\n    this.setState({\n      dateInnerDOM: ReactDOM.findDOMNode(dateInner),\n      datePickerDOM: ReactDOM.findDOMNode(this.wrapperRef),\n    });\n\n    this.onMovement();\n  }\n\n  /**\n   * Lifecycle Method - componentDidUpdate\n   *\n   * Used to update dropdown position\n   * of month and year selector\n   */\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      currDate,\n      selectedStartDate,\n      selectedEndDate,\n      dateRangeEnd,\n    } = this.state;\n\n    const { isStart } = this.props;\n\n    // If end date is shorten because of start date and\n    // end date is beyond range, shift back date\n    if (!isDateEqual(prevState.dateRangeEnd, dateRangeEnd)) {\n      if (dateRangeEnd < selectedEndDate) {\n        this.setSelectedDate(dateRangeEnd);\n      }\n    }\n\n    // Set month of end date to be not lesser than start date\n    if (!isStart && selectedStartDate && currDate && currDate < selectedStartDate) {\n      this.setNewDate(selectedStartDate);\n    }\n  }\n\n  /**\n   * Lifecycle Method - componentWillUnmount\n   */\n  componentWillUnmount() {\n    // const { dateInner } = this.props;\n    // Remove Handler to handle click outside of screen\n    document.removeEventListener('mousedown', this.handleClickOutside);\n    window.removeEventListener('scroll', this.onMovement);\n    window.removeEventListener('resize', this.onMovement);\n\n    if (this.datepickerInner) {\n      this.datepickerInner.toggleDateInner(false);\n    }\n  }\n\n  onMovement() {\n    const { dateInnerDOM, datePickerDOM, isOpened } = this.state;\n    // const { dateInner } = this.props;\n\n    if (isOpened && dateInnerDOM && datePickerDOM) {\n      const isOverHeight = datePickerDOM.getBoundingClientRect().bottom + 540 > window.outerHeight;\n      if (this.datepickerInner) {\n        this.datepickerInner.setArrowUp(!isOverHeight);\n      }\n      // dateInner.setArrowUp(!isOverHeight);\n      const top = isOverHeight ? datePickerDOM.getBoundingClientRect().top - 450 : datePickerDOM.getBoundingClientRect().bottom + 10;\n      dateInnerDOM.style.left = `${datePickerDOM.getBoundingClientRect().left}px`;\n      dateInnerDOM.style.top = `${top}px`;\n    }\n  }\n\n  /**\n   * setNewDate\n   *\n   * Set new current date and\n   * start and end of calender\n   *\n   * @param {date} date\n   */\n  setNewDate(date, extraState = {}, selectedCallback) {\n    const { isOpened } = this.state;\n    const newYear = date.getFullYear();\n    const newMonth = date.getMonth();\n\n    // Get first and last day of visible month\n    const firstDay = new Date(newYear, newMonth, 1);\n    const lastDay = new Date(newYear, newMonth + 1, 0);\n\n    // Set new calender values\n    this.setState({\n      currDate: date,\n      currFirstDay: firstDay,\n      currLastDay: lastDay,\n      ...extraState,\n    }, () => {\n      if (selectedCallback) {\n        selectedCallback({\n          currDate: date,\n          currFirstDay: firstDay,\n          currLastDay: lastDay,\n          selectedStartDate: extraState.selectedStartDate,\n          selectedEndDate: extraState.selectedEndDate,\n        });\n      } else if (isOpened && this.datepickerInner) {\n        this.datepickerInner.setNewState({\n          currDate: date,\n          currFirstDay: firstDay,\n          currLastDay: lastDay,\n        });\n      }\n    });\n  }\n\n  /**\n   * setCalender\n   *\n   * Set visible calender\n   *\n   * @param {number} month\n   * @param {number} year\n   */\n  setCalender(month, year) {\n    const {\n      dateRangeStart,\n      dateRangeEnd,\n    } = this.state;\n\n    let date = new Date(year, month);\n\n    // Cap date range\n    if (date < dateRangeStart) {\n      date = dateRangeStart;\n    } else if (date > dateRangeEnd) {\n      date = dateRangeEnd;\n    }\n\n    this.setNewDate(date);\n    this.wrapperRef.focus();\n  }\n\n  /**\n   * setSelectedDate\n   *\n   * Updated selected date to store\n   *\n   * @param {date} date\n   */\n  setSelectedDate(date, selectedCallback = () => {}) {\n    const { selectedStartDate, selectedEndDate } = this.state;\n\n    const {\n      change,\n      name,\n      isStart,\n      isRange,\n      endRef,\n      // dateInner,\n    } = this.props;\n\n    try {\n      let storeString = null;\n      let dateString = null;\n      if (date) {\n        // Get date values in string\n        const currDay = (`0${date.getDate().toString()}`).slice(-2);\n        const currMonth = (`0${(date.getMonth() + 1).toString()}`).slice(-2);\n        const currYear = date.getFullYear().toString();\n\n        // Get date in string\n        dateString = `${currDay}/${currMonth}/${currYear}`;\n        // String to store in store\n        storeString = `${currDay} ${monthTextMapping[currMonth - 1].slice(0, 3)} ${currYear}`;\n      }\n\n      // Update the date in the store for the form\n      change(name, storeString);\n\n      let newSelectedStartDate = selectedStartDate;\n      let newSelectedEndDate = selectedEndDate;\n\n      // Set end and start to selected date\n      // Default use selectedStartDate if not range\n      if (isRange && !isStart) {\n        newSelectedEndDate = date;\n      } else {\n        newSelectedStartDate = date;\n        if (newSelectedEndDate < newSelectedStartDate) {\n          newSelectedEndDate = newSelectedStartDate;\n\n          if (endRef && endRef.wrappedInstance) {\n            endRef.wrappedInstance.setSelectedDate(newSelectedStartDate);\n          }\n        }\n      }\n\n      // Set the new date\n      this.setNewDate(date, {\n        isOpened: false,\n        selectedString: dateString,\n        selectedEndDate: newSelectedEndDate,\n        selectedStartDate: newSelectedStartDate,\n      }, selectedCallback);\n\n      // Close the dropdown and update the selectedString\n      // Since is selection, there will be no error\n      // this.setState({\n      //   isOpened: false,\n      //   selectedString: dateString,\n      //   selectedEndDate: newSelectedEndDate,\n      //   selectedStartDate: newSelectedStartDate,\n      // });\n\n      this.isFromFocus = false;\n    } catch (error) {\n      // eslint-disable-next-line no-empty\n    }\n  }\n\n  /**\n   * End selection if click on outside\n   *\n   * @param {object} event\n   */\n  handleClickOutside(event) {\n    const { isOpened, dateInnerDOM } = this.state;\n    const { isTargetWithinDateRangePicker } = this.props;\n\n    // If clicked outside of daterpicekr Inner or wrapper, go to exit\n    if (\n      isOpened &&\n      this.wrapperRef &&\n      !this.wrapperRef.contains(event.target) &&\n      dateInnerDOM &&\n      !dateInnerDOM.contains(event.target)\n    ) {\n      this.setState({\n        isOpened: false,\n      });\n\n      // If outside of any datepicker controls\n      if (this.datepickerInner && (!isTargetWithinDateRangePicker || (isTargetWithinDateRangePicker && !isTargetWithinDateRangePicker(event.target)))) {\n        this.datepickerInner.toggleDateInner(false);\n      }\n\n      this.handleExit();\n\n      this.isFromFocus = false;\n      // this.handleExit();\n      this.doNotBlur = false;\n      return;\n    }\n\n    this.doNotBlur = true;\n  }\n\n  /**\n   * handleKeyPress\n   *\n   * Handle on enter key\n   *\n   * @param {object} target\n   */\n  handleKeyPress(target) {\n    // If pressed on enter, go to exit\n    if (target.charCode === 13) {\n      target.preventDefault();\n      this.handleExit();\n\n      if (this.datepickerInner) {\n        this.datepickerInner.toggleDateInner(false);\n      }\n    }\n  }\n\n  /**\n   * handleSelectClick\n   *\n   * Handle toggling of datepicker\n   */\n  handleSelectClick() {\n    const {\n      isOpened,\n      placeHolder,\n      currDate,\n      currFirstDay,\n      currLastDay,\n      selectedStartDate,\n      selectedEndDate,\n      dateRangeStart,\n      dateRangeEnd,\n    } = this.state;\n\n    const {\n      change,\n      name,\n      isRange,\n      isStart,\n      formStore,\n    } = this.props;\n\n    let selectedStart = selectedStartDate || (formStore && storeStringToDate(formStore.start_date));\n    let selectedEnd = selectedEndDate || (formStore && storeStringToDate(formStore.end_date));\n    selectedStart = selectedStart === -1 ? null : selectedStart;\n    selectedEnd = selectedEnd === -1 ? null : selectedEnd;\n\n    const selectedCallback = (extraState = {}) => {\n      if (this.datepickerInner) {\n        this.datepickerInner.toggleDateInner(!isOpened, {\n          setNewDate: this.setNewDate,\n          setSelectedDate: this.setSelectedDate,\n          currDate,\n          currFirstDay,\n          currLastDay,\n          selectedStartDate: selectedStart,\n          selectedEndDate: selectedEnd,\n          dateRangeStart,\n          dateRangeEnd,\n          isRange,\n          isStart,\n          ...extraState,\n        });\n      }\n\n      // ]if (!this.isFromFocus) {\n      this.setState({\n        isOpened: !isOpened,\n      }, () => {\n        if (!isOpened) {\n          this.onMovement();\n        }\n      });\n\n      const { selectedString } = this.state;\n      // Open if not opened and set the input string\n      // back to date form\n      if (!isOpened) {\n        if (selectedString !== placeHolder) {\n          change(name, selectedString);\n        }\n      } else {\n        this.handleExit();\n        if (this.inputField) {\n          const input = this.inputField.getRenderedComponent();\n          if (input) {\n            setTimeout(() => input.blur(), 2);\n          }\n        }\n      }\n      // }\n\n      this.isFromFocus = false;\n    };\n\n    if (isStart && selectedStart) {\n      this.setSelectedDate(selectedStart, selectedCallback);\n    } else if (selectedEnd) {\n      this.setSelectedDate(selectedEnd, selectedCallback);\n    } else {\n      selectedCallback();\n    }\n\n    // setTimeout(() => {\n    //   dateInner.toggleDateInner(!isOpened, {\n    //     setNewDate: this.setNewDate,\n    //     setSelectedDate: this.setSelectedDate,\n    //     currDate,\n    //     currFirstDay,\n    //     currLastDay,\n    //     selectedStartDate: selectedStart,\n    //     selectedEndDate: selectedEnd,\n    //     dateRangeStart,\n    //     dateRangeEnd,\n    //     isRange,\n    //     isStart,\n    //   });\n\n    //   // ]if (!this.isFromFocus) {\n    //   this.setState({\n    //     isOpened: !isOpened,\n    //   }, () => {\n    //     if (!isOpened) {\n    //       this.onMovement();\n    //     }\n    //   });\n\n    //   const { selectedString } = this.state;\n    //   // Open if not opened and set the input string\n    //   // back to date form\n    //   if (!isOpened) {\n    //     if (selectedString !== placeHolder) {\n    //       change(name, selectedString);\n    //     }\n    //   } else {\n    //     this.handleExit();\n    //     if (this.inputField) {\n    //       const input = this.inputField.getRenderedComponent();\n    //       if (input) {\n    //         setTimeout(() => input.blur(), 2);\n    //       }\n    //     }\n    //   }\n    //   // }\n\n    //   this.isFromFocus = false;\n    // }, 10);\n  }\n\n  /**\n   * Handles on input changes\n   *\n   * @param {object} event\n   */\n  async handleOnInputChange(event) {\n    // Wait for event to finish\n    await event;\n    // Get current input value\n    const value = event.target.defaultValue;\n\n    // Set new list items, height of dropdown list,\n    // Force open list on type, and set selected string to value\n    this.setState({\n      selectedString: value,\n    });\n  }\n\n  handleBlur(event) {\n    const isChildren = this.wrapperRef.contains(event.relatedTarget);\n    if (!isChildren && !this.doNotBlur) {\n      // Hackish, but to make sure this comes after setNewDate\n      setTimeout(() => {\n        this.handleExit();\n        this.isFromFocus = false;\n      }, 100);\n    }\n\n    this.doNotBlur = false;\n  }\n\n  handleFocus(event) {\n    const isChildren = this.wrapperRef.contains(event.relatedTarget);\n    if (event.relatedTarget && !isChildren && !this.isClicked) {\n      this.handleSelectClick();\n      this.isFromFocus = true;\n    }\n\n    this.isClicked = false;\n  }\n  /**\n   * handleExit\n   *\n   * Handle exit selection of entered input\n   */\n  handleExit() {\n    const {\n      selectedString,\n      dateRangeEnd,\n      dateRangeStart,\n      selectedStartDate,\n    } = this.state;\n\n    const {\n      change,\n      name,\n      isRange,\n      isStart,\n    } = this.props;\n\n    // Check if input string is valid date\n    let isError = !moment(selectedString, 'DD/MM/YYYY', true).isValid();\n    // The date in date form\n    let selectedDate = null;\n\n    // Check if date is within date range\n    if (!isError) {\n      const parts = selectedString.split('/');\n      selectedDate = new Date(parts[2], parts[1] - 1, parts[0]);\n      // isError = isStart && selectedEndDate ? selectedDate > selectedEndDate : isError;\n      isError = !isStart && selectedStartDate ? selectedStartDate > selectedDate : isError;\n      isError = selectedDate < dateRangeStart || dateRangeEnd < selectedDate ? true : isError;\n    }\n\n    // Close the dropdown and set any errors\n    this.setState({\n      isOpened: false,\n    });\n\n    // Set null to selected start or end date if error\n    if (isError) {\n      if (isRange && !isStart) {\n        this.setState({\n          selectedEndDate: null,\n        });\n      } else {\n        this.setState({\n          selectedStartDate: null,\n        });\n      }\n\n      // Null strings and store value\n      this.setState({\n        selectedString: '',\n      });\n      change(name, null);\n\n      return;\n    }\n\n    this.setSelectedDate(selectedDate);\n  }\n\n  /**\n   * Render component\n   */\n  render() {\n    const {\n      isOpened,\n      height,\n      placeHolder,\n    } = this.state;\n\n    if (height) {\n      const {\n        name,\n        zIndex,\n        maxWidth,\n        isRange,\n        isStart,\n        desc,\n        extraInfo,\n        errorString,\n        formStore,\n        validateForm,\n      } = this.props;\n\n      const mainStyle = {\n        height,\n        zIndex,\n        maxWidth,\n      };\n\n      const dropDownOpenStyle = isOpened ? 'dropdown-container-opened' : 'dropdown-container-closed';\n      const isErrorStyle = errorString ? 'error' : '';\n      const rangeIcon = isStart ? DateIn : DateOut;\n      const rangIconStyle = isStart ? 'date-img-in' : 'date-img-out';\n\n      const refValue = formStore ? formStore[name] : null;\n\n      return (\n        <Fragment>\n          <FormInputWrapper\n            desc={desc}\n            ref={node => (this.formParent = node)}\n            extraInfo={extraInfo}\n            errorString={errorString}\n            refValue={refValue}\n            validateForm={validateForm}\n          >\n            <div\n              className=\"dropdown datepicker\"\n              style={mainStyle}\n              ref={node => (this.wrapperRef = node)}\n              onBlur={event => this.handleBlur(event)}\n              onFocus={event => this.handleFocus(event)}\n            >\n              <div\n                className={`dropdown-container \n                            ${dropDownOpenStyle} \n                            ${isErrorStyle}\n                          `}\n                style={{ height }}\n                onKeyUp={() => {}}\n                role=\"button\"\n                tabIndex={-1}\n              >\n                <div\n                  className=\"selected-container align-items-center\"\n                  style={{ height }}\n                >\n                  {\n                    isRange ?\n                      <img\n                        className={`date-img ${rangIconStyle}`}\n                        src={rangeIcon}\n                        alt=\"Date Range Icon\"\n                      />\n                    :\n                      null\n                  }\n                  <div className=\"selected-text text-style\">\n                    <Field\n                      name={name}\n                      ref={node => this.inputField = node}\n                      withRef\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder={placeHolder}\n                      autoComplete=\"off\"\n                      onChange={event => this.handleOnInputChange(event)}\n                      onKeyPress={this.handleKeyPress}\n                      onMouseDown={(e) => {\n                        if (window.innerWidth <= 576) {\n                          e.preventDefault();\n                        }\n                        this.isClicked = true;\n                        this.handleSelectClick();\n                      }}\n                      tabIndex={0}\n                    />\n                  </div>\n                  {\n                    isRange ?\n                      null\n                    :\n                      <div\n                        role=\"button\"\n                        className=\"selected-arrow\"\n                        onMouseDown={() => { this.isClicked = true; this.handleSelectClick(); }}\n                        tabIndex={-1}\n                      >\n                        <img\n                          src={Arrow}\n                          alt=\"arrow.svg\"\n                          className={`selected-arrow-style ${isOpened ? 'angle-up' : 'angle-down'}`}\n                        />\n                      </div>\n                  }\n                </div>\n              </div>\n            </div>\n          </FormInputWrapper>\n          <DateInner ref={node => this.datepickerInner = node} />\n        </Fragment>\n      );\n    }\n\n    return null;\n  }\n}\n\nDatePickerV2.defaultProps = {\n  maxWidth: '100%',\n  isStart: true,\n  isRange: false,\n  startDate: null,\n  endDate: null,\n  currDate: null,\n  placeholderString: placeholderStringDefault,\n  desc: null,\n  extraInfo: null,\n  errorString: null,\n  formStore: null,\n  validateForm: null,\n  isTargetWithinDateRangePicker: null,\n  endRef: null,\n};\n\nDatePickerV2.propTypes = {\n  formStore: PropTypes.object,\n  maxWidth: PropTypes.string,\n  size: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  zIndex: PropTypes.number.isRequired,\n  change: PropTypes.func.isRequired,\n  isStart: PropTypes.bool,\n  isRange: PropTypes.bool,\n  startDate: PropTypes.instanceOf(Date),\n  endDate: PropTypes.instanceOf(Date),\n  currDate: PropTypes.instanceOf(Date),\n  placeholderString: PropTypes.string,\n  desc: PropTypes.string,\n  extraInfo: PropTypes.object,\n  errorString: PropTypes.string,\n  validateForm: PropTypes.func,\n  // dateInner: PropTypes.object.isRequired,\n  isTargetWithinDateRangePicker: PropTypes.func,\n  endRef: PropTypes.object,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  formStore: (getFormValues(ownProps.form)(state)),\n  // dateInner: state.datepicker.datePickerInner,\n});\n\nexport default connect(mapStateToProps, null, null, { withRef: true })(DatePickerV2);\n","/**\n * CashbackBalance.js\n * Component that displays the user's cashback balance\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CashbackLogo from 'assets/images/common/CashbackLogo.svg';\n\nimport './CashbackBalance.scss';\n\n/**\n * Custom Form Dropdown class\n */\nclass CashbackBalance extends Component {\n  render() {\n    const { cashbackBalance } = this.props;\n\n    return (\n      <div className=\"cashback-summary\">\n        <img src={CashbackLogo} alt=\"CashbackLogo.svg\" />\n        <p>${cashbackBalance}</p>\n      </div>\n    );\n  }\n}\n\nCashbackBalance.defaultProps = {\n};\n\nCashbackBalance.propTypes = {\n  cashbackBalance: PropTypes.string.isRequired,\n};\n\nexport default CashbackBalance;\n"],"sourceRoot":""}