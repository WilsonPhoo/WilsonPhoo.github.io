{"version":3,"sources":["components/ForgetPassword/ForgetPassword.js","containers/ForgetPassword/ForgetPasswordContainer.js","components/Templates/PopupWithText/PopupWithText.js"],"names":["ForgetPassword","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","errorString","handleSubmit","bind","assertThisInitialized","e","submitCallback","password1","password2","length","setState","_this$props","form","change","react_default","a","createElement","reactstrap_es","className","xs","onSubmit","TextInput","name","placeholderString","size","isPassword","desc","zIndex","Button","type","variant","width","height","Component","defaultProps","reduxForm","ForgetPasswordContainer","location","token","search","substring","_","findIndex","char","error","console","log","password","loading","loadingEnd","resetPassword","result","message","setTimeout","_this2","popup","openPopupWithText","_this3","history","react","components_ForgetPassword_ForgetPassword","PopupWithText","ref","node","onConfirm","push","withRouter","connect","login","dispatch","callBack","errorMsg","time","setLoading","clearLoading","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","text","jsx","useConfirm","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","arguments","undefined","popupRef","openPopup","_this$state","showCancelButton","hideCloseButton","react__WEBPACK_IMPORTED_MODULE_6___default","_Popup_Popup__WEBPACK_IMPORTED_MODULE_8__","r","react__WEBPACK_IMPORTED_MODULE_6__","components_FormsV3_Button_Button__WEBPACK_IMPORTED_MODULE_7__","onClick","closePopup"],"mappings":"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","file":"static/js/forgetpassword.07a843ea.chunk.js","sourcesContent":["/**\n * ForgetPassword.js\n * Forget password page.\n *\n * @version 0.0.1\n * @author [Wilson](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport { reduxForm } from 'redux-form';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'reactstrap';\n\nimport TextInput from '../Forms/TextInput/TextInput';\nimport Button from '../FormsV3/Button/Button';\n\nimport './ForgetPassword.scss';\n\nclass ForgetPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorString: null,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    const { submitCallback } = this.props;\n    if (!e.password1 || !e.password2) {\n      this.setState({\n        errorString: 'Please fill in both password fields.',\n      });\n\n      return;\n    }\n\n    if (e.password1 !== e.password2) {\n      this.setState({\n        errorString: 'Password are not the same.',\n      });\n\n      return;\n    }\n\n    if (e.password1.length < 8) {\n      this.setState({\n        errorString: 'Password must be at least 8 characters.',\n      });\n      return;\n    }\n\n    this.setState({\n      errorString: null,\n    });\n\n    submitCallback(e.password1);\n  }\n\n  render() {\n    const { errorString } = this.state;\n    const { handleSubmit, form, change } = this.props;\n    return (\n      <Row className=\"reset-password\">\n        <Col className=\"reset-text\" xs={12}>\n          <p>Reset Password</p>\n        </Col>\n        <form onSubmit={handleSubmit(this.handleSubmit)}>\n          <Col xs={12}>\n            <TextInput\n              form={form}\n              change={change}\n              name=\"password1\"\n              placeholderString=\"Enter your new Password\"\n              size=\"medium\"\n              isPassword\n              desc=\"New Password\"\n              zIndex={99}\n            />\n          </Col>\n          <Col xs={12}>\n            <TextInput\n              form={form}\n              change={change}\n              name=\"password2\"\n              placeholderString=\"Confirm Password\"\n              size=\"medium\"\n              isPassword\n              desc=\"Confirm Password\"\n              zIndex={98}\n            />\n          </Col>\n          <Col xs={12}>\n            <p className=\"error-text\">{errorString}</p>\n          </Col>\n          <Col className=\"justify-content-center button\" xs={12}>\n            <Button type=\"submit\" variant=\"medium-color\" width={165} height={72}>\n              <p>Reset Password</p>\n            </Button>\n          </Col>\n        </form>\n      </Row>\n    );\n  }\n}\n\nForgetPassword.defaultProps = {\n};\n\nForgetPassword.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  form: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired,\n  submitCallback: PropTypes.func.isRequired,\n};\n\nexport default reduxForm({\n  form: 'reset-password',\n})(ForgetPassword);\n\n","/**\n * ForgetPasswordContainer.js\n * Used when users are resetting password.\n * The link will be given in the email.\n *\n * @version 0.0.1\n * @author [Wilson](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport ForgetPassword from '../../components/ForgetPassword/ForgetPassword';\nimport PopupWithText from '../../components/Templates/PopupWithText/PopupWithText';\n\nimport { setLoading, clearLoading } from '../../actions/loadingScreenActions';\nimport { resetPassword } from '../../actions/userActions';\n\nclass ForgetPasswordContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    const { location } = this.props;\n    let token = null;\n    try {\n      token = location.search.substring(_.findIndex(location.search, char => char === '=') + 1);\n    } catch (error) {\n      console.log('Token parse error');\n    }\n\n    this.state = {\n      token,\n    };\n\n    this.submitCallback = this.submitCallback.bind(this);\n  }\n\n  async submitCallback(password) {\n    const { token } = this.state;\n    const { loading, loadingEnd } = this.props;\n\n    loading();\n    const result = await resetPassword(password, token);\n    loadingEnd();\n\n    const message = result ? 'Your password has been reset successfully.' : 'Password reset failed. Please try again.';\n    setTimeout(() => this.popup.openPopupWithText(message, result), 300);\n  }\n\n  render() {\n    const { token } = this.state;\n    const { history } = this.props;\n\n    if (!token) {\n      return null;\n    }\n\n    return (\n      <Fragment>\n        <ForgetPassword\n          submitCallback={this.submitCallback}\n        />\n        <PopupWithText\n          ref={node => this.popup = node}\n          onConfirm={() => history.push('/')}\n        />\n      </Fragment>\n    );\n  }\n}\nForgetPasswordContainer.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  login: state.login,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loading: (callBack, errorMsg, time) => {\n    dispatch(setLoading(callBack, errorMsg, time));\n  },\n  loadingEnd: () => {\n    dispatch(clearLoading());\n  },\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ForgetPasswordContainer));\n","/**\n * PopupWithText.js\n * Popup with custom text\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/FormsV3/Button/Button';\nimport Popup from '../Popup/Popup';\n\n\nimport './PopupWithText.scss';\n\nclass PopupWithText extends Component {\n  constructor(props) {\n    super(props);\n\n    const { onConfirm } = this.props;\n\n    this.state = {\n      text: '',\n      jsx: null,\n      useConfirm: true,\n      onConfirm,\n    };\n    this.openPopupWithText = this.openPopupWithText.bind(this);\n  }\n\n  openPopupWithText(text, useConfirm = true, onConfirm = null) {\n    this.setState({\n      text,\n      useConfirm,\n    });\n\n    if (onConfirm) {\n      this.setState({\n        onConfirm,\n      });\n    }\n    setTimeout(this.popupRef.openPopup, 10);\n  }\n\n  openPopupWithJSX(jsx, useConfirm = true, onConfirm = null) {\n    this.setState({\n      jsx,\n      useConfirm,\n    });\n\n    if (onConfirm) {\n      this.setState({\n        onConfirm,\n      });\n    }\n    setTimeout(this.popupRef.openPopup, 10);\n  }\n\n  render() {\n    const {\n      text, jsx, useConfirm, onConfirm,\n    } = this.state;\n    const { showCancelButton, hideCloseButton } = this.props;\n    return (\n      <div className=\"popup-with-text\">\n        <Popup\n          hideCloseButton={hideCloseButton}\n          ref={(r) => { this.popupRef = r; }}\n        >\n          <Fragment>\n            <div className=\"check-out-popup\">\n              <div className=\"upper-container upper-margin-down\">\n                {\n                  jsx || (\n                    <p>\n                      <span className=\"focus-text\">{text}</span>\n                    </p>\n                  )\n                }\n              </div>\n              <div className=\"button-container\">\n                {\n                  showCancelButton ?\n                    <Button\n                      className=\"checkout-button\"\n                      variant=\"medium-flat\"\n                      width={166}\n                      height={72}\n                      onClick={() => {\n                        this.popupRef.closePopup();\n                      }}\n                    >\n                      <p>Cancel</p>\n                    </Button>\n                  :\n                    null\n                }\n                <Button\n                  className=\"checkout-button\"\n                  variant=\"medium-flat-green\"\n                  width={166}\n                  height={72}\n                  onClick={() => {\n                    if (useConfirm) {\n                      onConfirm();\n                    }\n                    this.popupRef.closePopup();\n                  }}\n                >\n                  <p>Confirm</p>\n                </Button>\n              </div>\n            </div>\n          </Fragment>\n        </Popup>\n      </div>\n    );\n  }\n}\n\nPopupWithText.defaultProps = {\n  onConfirm: () => {},\n  showCancelButton: false,\n  hideCloseButton: false,\n};\n\nPopupWithText.propTypes = {\n  onConfirm: PropTypes.func,\n  showCancelButton: PropTypes.bool,\n  hideCloseButton: PropTypes.bool,\n};\n\nexport default PopupWithText;\n"],"sourceRoot":""}