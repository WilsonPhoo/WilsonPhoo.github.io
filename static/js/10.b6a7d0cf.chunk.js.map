{"version":3,"sources":["components/FormsV3/Button/Button.js","assets/images/forms/arrow.svg","components/Page/Page.js","assets/logo.png","components/Templates/Popup/Popup.js","components/Templates/SpinnerAnimation/SpinnerAnimation.js","assets/images/forms/magnifyGlass.svg","assets/images/forms/cross.svg","components/FormsV3/FormInputWrapper/FormInputWrapper.js","assets/images/common/CloseIcon.svg","components/Templates/ModalPopup/ModalPopup.js","components/FormsV3/DropDown/DropDown.js"],"names":["Button","props","_this","Object","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","variantStyle","getVariantClassString","prevProps","variant","setState","concat","_this$props","onClick","type","children","disabled","width","height","className","isLoading","disabledStyle","newWidth","newHeight","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","tabIndex","onKeyUp","style","minHeight","_Templates_SpinnerAnimation_SpinnerAnimation__WEBPACK_IMPORTED_MODULE_6__","Component","defaultProps","module","exports","__webpack_require__","p","SITE_URL","defaultImage","logo","Page","pathname","title","_ref","description","image","contentType","twitter","noCrawl","published","updated","category","tags","theTitle","substring","theDescription","theImage","metaTags","itemprop","content","name","property","push","id","rest","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","react_helmet__WEBPACK_IMPORTED_MODULE_8___default","htmlAttributes","lang","itemscope","undefined","itemtype","schema","link","rel","href","location","meta","getMetaTags","withRouter","Popup","isOpen","closeCallback","openPopup","bind","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","closePopup","setCloseCallBack","document","body","scroll","overflowY","callback","flag","arguments","length","togglePopup","isFromPop","_this2","hideCloseButton","react__WEBPACK_IMPORTED_MODULE_7___default","role","onKeyPress","src","CloseIcon","alt","React","Children","map","child","cloneElement","closePopUp","SpinnerAnimation","dotsColor","backgroundColor","FormInputWrapper","extraInfo","desc","errorString","smallMargin","isDateRange","join","ModalPopup","showModal","setHiddenAuto","nextProps","clearInterval","setHiddenInterval","setInterval","_","includes","overflow","closeModal","header","footer","backdropClassName","zIndex","react__WEBPACK_IMPORTED_MODULE_8___default","reactstrap__WEBPACK_IMPORTED_MODULE_9__","size","tag","toggle","maxItemsDisplay","defaultHeight","resultNullString","display_name","value","DropDown","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","dropList","numItemsDisplay","isMultiple","numItems","maxheight","min","isOpened","listItems","selectedString","listHeight","multipleSelectedElements","listElementsCounter","clientHeight","extraPadding","noTransition","updateDimensions","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","handleClickOutside","renderListItems","renderTextInput","handleSelectClick","handleOnInputChange","handleSetMultipleSelectedItem","handleDestroySelected","handleInputKeyPress","handleItemKeyPress","handleChange","handleExit","handleBlur","handleFocus","prevState","isEqual","initialListItems","_this$props2","addEventListener","window","overrideValue","_this$props3","isElements","isEmpty","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","removeEventListener","_this$state","selectedItemsContainer","childElementCount","getBoundingClientRect","bottom","top","error","inputValue","_this$props4","onChange","notForm","valueChangeCallback","inputField","event","wrapperRef","contains","target","isFromFocus","_this$state2","_this$props5","placeholderString","key","preventDefault","index","Math","max","listElements","focus","stopPropagation","isOpenOnly","_this$state3","_this$props6","item","_this$state4","_this$state5","newArr","find","i","selectedContainer","slice","indexOf","splice","result","filter","toString","toUpperCase","relatedTarget","_this$state7","_this$props7","resultValue","isError","finalString","some","obj","toLowerCase","_this3","_this$state8","react__WEBPACK_IMPORTED_MODULE_12___default","handleSelectItemClick","onKeyDown","ref","node","_this4","onMouseUp","Cross","_this5","_this$props8","isDisableTyping","reactstrap__WEBPACK_IMPORTED_MODULE_13__","placeholder","autoComplete","_this6","_this$state9","_this$props9","maxWidth","noInternalDesc","actualListheight","dropDownOpenStyle","arrowStyle","transitionStyle","listStyle","multipleStyle","isErrorStyle","noInternalDescStyle","titleStyle","marginTop","marginBottom","logoImg","MagnifyGlass","zIndexStyle","_FormInputWrapper_FormInputWrapper__WEBPACK_IMPORTED_MODULE_15__","onBlur","onFocus","paddingTop","paddingBottom","renderMultipleSelectedElements","Arrow","react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_14__","listContainer"],"mappings":"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","file":"static/js/10.b6a7d0cf.chunk.js","sourcesContent":["/**\n * Button.js\n * Custom Button\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SpinnerAnimation from '../../Templates/SpinnerAnimation/SpinnerAnimation';\nimport './Button.scss';\n\n/**\n * Custom Button class\n */\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      variantStyle: this.getVariantClassString(),\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { variant } = this.props;\n    if (variant !== prevProps.variant) {\n      this.setState({\n        variantStyle: this.getVariantClassString(),\n      });\n    }\n  }\n\n  getVariantClassString() {\n    const { variant } = this.props;\n\n    // Default to medium color\n    const classString = variant ? `button-${variant}` : 'button-medium-color';\n\n    return classString;\n  }\n\n  render() {\n    const { variantStyle } = this.state;\n\n    const {\n      onClick,\n      type,\n      children,\n      disabled,\n      width,\n      height,\n      className,\n      isLoading,\n    } = this.props;\n\n    const disabledStyle = disabled ? 'disabled' : '';\n    const newWidth = width ? `${width}px` : '101%';\n    const newHeight = height ? `${height}px` : '100%';\n\n    return (\n      <button\n        type={type}\n        className={`${className} ${variantStyle} ${disabledStyle}`}\n        onClick={() => { if (isLoading) return; onClick(); }}\n        tabIndex={0}\n        onKeyUp={() => { if (isLoading) return; onClick(); }}\n        disabled={disabled}\n        style={{ width: newWidth, minHeight: newHeight }}\n      >\n        {\n          isLoading ?\n            <SpinnerAnimation />\n          :\n           children\n        }\n      </button>\n    );\n  }\n}\n\nButton.defaultProps = {\n  type: 'button',\n  onClick: () => {},\n  disabled: false,\n  width: '',\n  height: '',\n  className: '',\n  isLoading: false,\n};\n\n\nButton.propTypes = {\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n  variant: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  width: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  height: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  className: PropTypes.string,\n  isLoading: PropTypes.bool,\n};\n\nexport default Button;\n","module.exports = __webpack_public_path__ + \"static/media/arrow.bf1f0d90.svg\";","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport Helmet from 'react-helmet';\nimport logo from '../../assets/logo.png';\n\nconst SITE_URL =\n  process.env.NODE_ENV === 'development'\n    ? 'http://localhost:3000'\n    : 'https://web.policypal.com';\n\nconst FACEBOOK_APP_ID = 'XXXXXXXXX';\n\nconst defaultTitle = 'My Website';\nconst defaultDescription =\n  'This is a really awesome website where we can render on the server. Supa cool.';\nconst defaultImage = `${SITE_URL}${logo}`;\nconst defaultTwitter = '@cereallarceny';\nconst defaultSep = ' | ';\n\nclass Page extends Component {\n  getMetaTags(\n    {\n      title,\n      description,\n      image,\n      contentType,\n      twitter,\n      noCrawl,\n      published,\n      updated,\n      category,\n      tags\n    },\n    pathname\n  ) {\n    const theTitle = title\n      ? (title + defaultSep + defaultTitle).substring(0, 60)\n      : defaultTitle;\n    const theDescription = description\n      ? description.substring(0, 155)\n      : defaultDescription;\n    const theImage = image ? `${SITE_URL}${image}` : defaultImage;\n\n    const metaTags = [\n      { itemprop: 'name', content: theTitle },\n      { itemprop: 'description', content: theDescription },\n      { itemprop: 'image', content: theImage },\n      { name: 'description', content: theDescription },\n      { name: 'twitter:card', content: 'summary_large_image' },\n      { name: 'twitter:site', content: defaultTwitter },\n      { name: 'twitter:title', content: theTitle },\n      { name: 'twitter:description', content: theDescription },\n      { name: 'twitter:creator', content: twitter || defaultTwitter },\n      { name: 'twitter:image:src', content: theImage },\n      { property: 'og:title', content: theTitle },\n      { property: 'og:type', content: contentType || 'website' },\n      { property: 'og:url', content: SITE_URL + pathname },\n      { property: 'og:image', content: theImage },\n      { property: 'og:description', content: theDescription },\n      { property: 'og:site_name', content: defaultTitle },\n      { property: 'fb:app_id', content: FACEBOOK_APP_ID }\n    ];\n\n    if (noCrawl) {\n      metaTags.push({ name: 'robots', content: 'noindex, nofollow' });\n    }\n\n    if (published) {\n      metaTags.push({ name: 'article:published_time', content: published });\n    }\n    if (updated) {\n      metaTags.push({ name: 'article:modified_time', content: updated });\n    }\n    if (category) {\n      metaTags.push({ name: 'article:section', content: category });\n    }\n    if (tags) {\n      metaTags.push({ name: 'article:tag', content: tags });\n    }\n\n    return metaTags;\n  }\n\n  render() {\n    const { children, id, className, ...rest } = this.props;\n\n    return (\n      <div id={id} className={className}>\n        <Helmet\n          htmlAttributes={{\n            lang: 'en',\n            itemscope: undefined,\n            itemtype: `http://schema.org/${rest.schema || 'WebPage'}`\n          }}\n          title={\n            rest.title ? rest.title + defaultSep + defaultTitle : defaultTitle\n          }\n          link={[\n            {\n              rel: 'canonical',\n              href: SITE_URL + this.props.location.pathname\n            }\n          ]}\n          meta={this.getMetaTags(rest, this.props.location.pathname)}\n        />\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Page);\n","module.exports = __webpack_public_path__ + \"static/media/logo.f0988bd7.png\";","/**\n * Popup.js\n * Custom pop up with dynamic content\n *\n * @version 0.0.1\n * @author [Jia Hao](jiahao@policypal.com)\n */\nimport document from 'global/document';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CloseIcon from 'assets/images/common/CloseIcon.svg';\n\nimport './Popup.scss';\n\n/**\n * Custom Popup Class\n */\nclass Popup extends Component {\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   const { isOpen } = nextProps;\n\n  //   if (isOpen !== prevState.isOpen) {\n  //     if (!isOpen) {\n  //       document.body.scroll = 'yes';\n  //       document.body.style.overflowY = 'auto';\n  //       nextProps.onClose();\n  //     } else {\n  //       document.body.scroll = 'no';\n  //       document.body.style.overflowY = 'hidden';\n  //       nextProps.onOpen();\n  //     }\n  //     return { isOpen };\n  //   }\n  //   return null;\n  // }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      closeCallback: null,\n    };\n\n    this.openPopup = this.openPopup.bind(this);\n    this.closePopup = this.closePopup.bind(this);\n    this.setCloseCallBack = this.setCloseCallBack.bind(this);\n  }\n\n  componentWillUnmount() {\n    document.body.scroll = 'yes';\n    document.body.style.overflowY = 'auto';\n  }\n\n  setCloseCallBack(callback) {\n    this.setState({\n      closeCallback: callback,\n    });\n  }\n\n  togglePopup(flag) {\n    this.setState({ isOpen: flag });\n\n    if (!flag) {\n      document.body.scroll = 'yes';\n      document.body.style.overflowY = 'auto';\n      // this.props.onClose();\n    } else {\n      document.body.scroll = 'no';\n      document.body.style.overflowY = 'hidden';\n      // this.props.onOpen();\n    }\n  }\n\n  openPopup(callback = null) {\n    this.togglePopup(true);\n\n    if (callback) {\n      callback();\n    }\n  }\n\n  closePopup(callback = null, isFromPop = false) {\n    const { closeCallback } = this.state;\n\n    this.togglePopup(false);\n\n    if (callback) {\n      callback();\n      return;\n    }\n\n    if (isFromPop && closeCallback) {\n      closeCallback();\n    }\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const { closePopup, setCloseCallBack } = this;\n    const { hideCloseButton, style, className } = this.props;\n\n    return (\n      <div\n        className={\n          `popup ${(isOpen) ? 'popup-opened' : 'popup-closed'} ${className}`\n        }\n      >\n        <div className={`cont ${(isOpen) ? 'cont-opened' : 'cont-closed'}`} style={style}>\n          {\n            hideCloseButton ?\n              null\n            :\n              <div\n                role=\"button\"\n                onKeyPress={() => {}}\n                onClick={() => this.closePopup(null, true)}\n                tabIndex={-1}\n              >\n                <img src={CloseIcon} className=\"close-icon\" alt=\"close\" />\n              </div>\n          }\n          {\n            React.Children.map(this.props.children, child => (\n              React.cloneElement(child, {\n                closePopUp: closePopup,\n                setCloseCallBack,\n              })\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nPopup.propTypes = {\n  children: PropTypes.node,\n  // isOpen: PropTypes.bool, // eslint-disable-line\n  // onClose: PropTypes.func,\n  // onOpen: PropTypes.func,\n  hideCloseButton: PropTypes.bool,\n  style: PropTypes.object,\n  className: PropTypes.string,\n};\n\nPopup.defaultProps = {\n  children: null,\n  // isOpen: false,\n  // onClose: () => {},\n  // onOpen: () => {},\n  hideCloseButton: false,\n  style: {},\n  className: '',\n};\n\nexport default Popup;\n","/**\n * SpinnerAnimation.js\n * Spinner animation for loading\n *\n * @version 0.0.1\n * @author [Wilson](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SpinnerAnimation.scss';\n\nclass SpinnerAnimation extends Component {\n  render() {\n    const { dotsColor } = this.props;\n\n    return (\n      <div className=\"spinner-animation\">\n        <div className=\"dot1\" style={{ backgroundColor: dotsColor }} />\n        <div className=\"dot2\" style={{ backgroundColor: dotsColor }} />\n      </div>\n    );\n  }\n}\n\nSpinnerAnimation.defaultProps = {\n  dotsColor: '#333',\n};\n\nSpinnerAnimation.propTypes = {\n  dotsColor: PropTypes.string,\n};\n\nexport default SpinnerAnimation;\n","module.exports = __webpack_public_path__ + \"static/media/magnifyGlass.eedb8132.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.3995dd26.svg\";","/**\n * FormInputWrapper.js\n * Custom form dropdown menu with input\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FormInputWrapper.scss';\n\n/**\n * Custom Form Dropdown class\n */\nclass FormInputWrapper extends Component {\n  render() {\n    const {\n      extraInfo,\n      desc,\n      errorString,\n      smallMargin,\n      className,\n      isDateRange,\n    } = this.props;\n\n    return (\n      <div\n        className={['input-wrapper-main-v3 input-wrapper-error', smallMargin && 'my-1', className].join(' ')}\n      >\n        {\n          // eslint-disable-next-line\n          isDateRange ?\n            <div className=\"d-flex\">\n              <p className=\"input-wrapper-desc w-50\">Start Date</p>\n              <p className=\"input-wrapper-desc w-50\">End Date</p>\n            </div>\n          :\n          desc !== null ?\n            <p className=\"input-wrapper-desc\">{desc}</p>\n          :\n            null\n        }\n        {this.props.children}\n        {\n          extraInfo !== null ?\n            <div className=\"extra-info-container\">\n              {extraInfo}\n            </div>\n          :\n            null\n        }\n        {\n          errorString !== null ?\n            <div className=\"input-wrapper-error-text\">\n              <p>{errorString}</p>\n            </div>\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nFormInputWrapper.defaultProps = {\n  desc: null,\n  extraInfo: null,\n  errorString: null,\n  smallMargin: false,\n  className: '',\n  isDateRange: false,\n};\n\n\nFormInputWrapper.propTypes = {\n  desc: PropTypes.string,\n  extraInfo: PropTypes.object,\n  errorString: PropTypes.string,\n  smallMargin: PropTypes.bool,\n  className: PropTypes.string,\n  isDateRange: PropTypes.bool,\n};\n\nexport default FormInputWrapper;\n","module.exports = __webpack_public_path__ + \"static/media/CloseIcon.3a827db7.svg\";","/**\n * ChangeInitialFormData.js\n * This is the green pencil button that appears mainly on\n * the compare view which will render the Edit Detail forms\n * of each category.\n *\n * Users will be able to change that form through this component\n * and will do a callback to update any changes, eg for compare view.\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport document from 'global/document';\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport './ModalPopup.scss';\n\nclass ModalPopup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: props.showModal,\n    };\n\n    this.setHiddenAuto = this.setHiddenAuto.bind(this);\n  }\n\n  componentDidMount() {\n    const { showModal } = this.props;\n\n    if (!showModal) {\n      this.setHiddenAuto();\n    }\n  }\n\n  // Toggle modal\n  componentWillReceiveProps(nextProps) {\n    const { showModal } = this.props;\n    if (nextProps.showModal !== showModal) {\n      this.setState({ showModal: nextProps.showModal });\n\n      if (!nextProps.showModal) {\n        this.setHiddenAuto();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.setHiddenInterval);\n  }\n\n\n  setHiddenAuto() {\n    clearInterval(this.setHiddenInterval);\n    this.setHiddenInterval = setInterval(() => {\n      if (!this.props.showModal && !_.includes(document.body.style.overflow, 'auto')) {\n        document.body.style.overflow = 'hidden auto';\n        clearInterval(this.setHiddenInterval);\n      }\n    }, 100);\n  }\n\n  render() {\n    const { showModal } = this.state;\n    const {\n      closeModal,\n      header,\n      body,\n      footer,\n      className,\n      backdropClassName,\n      zIndex,\n    } = this.props;\n\n    return (\n      <Modal\n        isOpen={showModal}\n        size=\"lg\"\n        className={`modal-popup-custom ${className}`}\n        backdropClassName={backdropClassName}\n        zIndex={zIndex}\n      >\n        {\n          header &&\n          <ModalHeader\n            tag=\"h3\"\n            toggle={closeModal}\n          >\n            {header}\n          </ModalHeader>\n        }\n        {\n          body &&\n          <ModalBody>\n            {body}\n          </ModalBody>\n        }\n        {\n          footer &&\n          <ModalFooter>\n            {footer}\n          </ModalFooter>\n        }\n      </Modal>\n    );\n  }\n}\n\nModalPopup.defaultProps = {\n  showModal: false,\n  header: null,\n  body: null,\n  footer: null,\n  className: null,\n  backdropClassName: null,\n  zIndex: 1050,\n};\n\nModalPopup.propTypes = {\n  showModal: PropTypes.bool,\n  closeModal: PropTypes.func.isRequired,\n  header: PropTypes.object,\n  body: PropTypes.object,\n  footer: PropTypes.object,\n  className: PropTypes.string,\n  backdropClassName: PropTypes.string,\n  zIndex: PropTypes.number,\n};\n\nexport default ModalPopup;\n","/**\n * DropDown.js\n * Custom form dropdown menu with input\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport document from 'global/document';\nimport window from 'global/window';\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Input } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nimport FormInputWrapper from '../FormInputWrapper/FormInputWrapper';\n\nimport Arrow from '../../../assets/images/forms/arrow.svg';\nimport Cross from '../../../assets/images/forms/cross.svg';\nimport MagnifyGlass from '../../../assets/images/forms/magnifyGlass.svg';\n\nimport './DropDown.scss';\nimport './MultipleSelectDropDown.scss';\n\n// How many items to display\nconst maxItemsDisplay = 5;\n// Height for dropdown\nconst defaultHeight = 48;\n// Padding for when multiple items overflow\nconst extraPaddingForMultiple = 5;\n// Error text to display when error\nconst resultNullString = {\n  display_name: 'No results found',\n  value: null,\n};\n\n/**\n * Custom Form Dropdown class\n */\nclass DropDown extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      dropList,\n      numItemsDisplay,\n    } = nextProps;\n\n    if (!_.isEqual(dropList, prevState.initialListItems)) {\n      const height = defaultHeight;\n      const numItems = numItemsDisplay || maxItemsDisplay;\n      const maxheight = (_.min([dropList ? dropList.length : 0, numItems]) + 1) * height;\n\n      return {\n        initialListItems: dropList,\n        listItems: dropList,\n        maxheight,\n        listHeight: maxheight,\n      };\n    }\n\n    return null;\n  }\n  /**\n   * Constructor\n   *\n   * @param {object} props Component props\n   */\n  constructor(props) {\n    super(props);\n\n    // dropList - The passed down dropdown list items\n    // placeholderString - Placeholder string for input\n    // size - Size of this control\n    // numItemsDisplay - Max items to display on view\n    const {\n      dropList,\n      numItemsDisplay,\n      value,\n      isMultiple,\n    } = this.props;\n\n    // Get the control height\n    const height = defaultHeight;\n    // Get number of items to display\n    const numItems = numItemsDisplay || maxItemsDisplay;\n    // Get the max height of list\n    const maxheight = (_.min([dropList ? dropList.length : 0, numItems]) + 1) * height;\n    // isOpened - Whether dropdown is opened\n    // isError - Whether there is input error\n    // listItems - The actual dropdown list\n    // selectedString - The selected item string\n    // height - Preferred Control height\n    // numItemsDisplay - How many items to display\n    // maxheight - Max height of the list\n    // listHeight - Height of the list. (Items count + control)\n    // multipleSelectedElements - Array of multiple selected items\n    // listElementsCounter - Up down selection position\n    // clientHeight - Actual height of the control\n    this.state = {\n      isOpened: false,\n      listItems: dropList,\n      selectedString: (!isMultiple && value && value.display_name) || '',\n      height,\n      numItemsDisplay: numItems,\n      maxheight,\n      listHeight: maxheight,\n      multipleSelectedElements: null,\n      listElementsCounter: -1,\n      clientHeight: height,\n      extraPadding: 0,\n      noTransition: true,\n    };\n\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.renderListItems = this.renderListItems.bind(this);\n    this.renderTextInput = this.renderTextInput.bind(this);\n    this.handleSelectClick = this.handleSelectClick.bind(this);\n    this.handleOnInputChange = this.handleOnInputChange.bind(this);\n    this.handleSetMultipleSelectedItem = this.handleSetMultipleSelectedItem.bind(this);\n    this.handleDestroySelected = this.handleDestroySelected.bind(this);\n    this.handleInputKeyPress = this.handleInputKeyPress.bind(this);\n    this.handleItemKeyPress = this.handleItemKeyPress.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleExit = this.handleExit.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n  }\n\n  /**\n   * Lifecycle Method - componentDidMount\n   */\n  componentDidMount() {\n    const { value, isMultiple } = this.props;\n\n    // Add Handler to handle click outside of screen\n    document.addEventListener('mousedown', this.handleClickOutside);\n    // Update control height on resize in case it squeezes down\n    window.addEventListener('resize', this.updateDimensions);\n    // Update for the first time\n    this.updateDimensions();\n\n    const { overrideValue } = this.props;\n\n    if (value) {\n      if (isMultiple) {\n        this.setState({\n          multipleSelectedElements: value,\n        });\n      }\n    }\n\n    if (overrideValue) {\n      this.handleChange(overrideValue);\n    }\n\n    this.setState({ noTransition: false });\n  }\n\n  /**\n   * Lifecycle Method - componentDidUpdate\n   */\n  componentDidUpdate(prevProps) {\n    const { multipleSelectedElements } = this.state;\n    const { overrideValue, value, isMultiple } = this.props;\n\n    // Use override mode if not using form\n    if (!_.isEqual(overrideValue, prevProps.overrideValue)) {\n      this.handleChange(overrideValue);\n    }\n\n    const isElements = !_.isEmpty(multipleSelectedElements);\n\n    if (!_.isEqual(value, prevProps.value)) {\n      this.setState({\n        selectedString: (value && value.display_name) || '',\n      });\n    }\n\n    if (value) {\n      if (!isElements || (isElements && !_.isEqual(value, multipleSelectedElements))) {\n        if (isMultiple) {\n          this.setState({\n            multipleSelectedElements: [...value],\n          });\n        }\n      }\n    }\n\n    // For re-render fix where multiple changed to single\n    if (isElements && !value) {\n      this.setState({\n        multipleSelectedElements: null,\n      });\n    }\n    // Update control height if necessary, since the\n    // height may change after render\n    this.updateDimensions();\n  }\n\n  /**\n   * Lifecycle Method - componentWillUnmount\n   */\n  componentWillUnmount() {\n    // Remove Handler to handle click outside of screen\n    document.removeEventListener('mousedown', this.handleClickOutside);\n    window.removeEventListener('resize', this.updateDimensions);\n  }\n\n  /**\n   * Get client height of the selection container\n   * to determine the height of the whole control.\n   * (For multiple only)\n   *\n   * @param {object} event\n   */\n  updateDimensions() {\n    const { isMultiple } = this.props;\n\n    // Only multiple will expand\n    if (!isMultiple) {\n      return;\n    }\n\n    const {\n      clientHeight,\n      height,\n      extraPadding,\n    } = this.state;\n\n    let newHeight = defaultHeight;\n    try {\n      newHeight = this.selectedItemsContainer.children[this.selectedItemsContainer.childElementCount - 1].getBoundingClientRect().bottom - this.selectedItemsContainer.children[0].getBoundingClientRect().top;\n      newHeight = newHeight < defaultHeight ? defaultHeight : newHeight + 10;\n    } catch (error) {\n      // eslint-disable-next-line no-empty\n    }\n\n    // if client height is not same as DOM, update with padding if expanded\n    if (clientHeight !== newHeight) {\n      this.setState({\n        clientHeight: newHeight,\n        extraPadding: newHeight - 2 * extraPadding > height ? extraPaddingForMultiple : 0,\n      });\n    }\n  }\n\n  handleChange(inputValue) {\n    const {\n      name,\n      onChange,\n      notForm,\n      valueChangeCallback,\n      isMultiple,\n    } = this.props;\n\n    if (notForm) {\n      if (valueChangeCallback) {\n        valueChangeCallback(inputValue);\n      }\n      this.inputField.value = inputValue.display_name;\n      return;\n    }\n\n    onChange(isMultiple ? 'multiple-select' : 'select', name, inputValue);\n  }\n\n  /**\n   * End selection if click on outside\n   *\n   * @param {object} event\n   */\n  handleClickOutside(event) {\n    const { isOpened } = this.state;\n\n    // If clicked outside, go to exit\n    if (\n      isOpened &&\n      this.wrapperRef &&\n      !this.wrapperRef.contains(event.target)\n    ) {\n      // Close it\n      this.setState({\n        isOpened: false,\n      });\n\n      // Unset from focus\n      this.isFromFocus = false;\n    }\n  }\n\n  /**\n   * Handle on enter key\n   *\n   * @param {object} event\n   */\n  handleInputKeyPress(event) {\n    const {\n      isOpened,\n      listElementsCounter,\n      selectedString,\n      multipleSelectedElements,\n    } = this.state;\n\n    const { isMultiple, placeholderString } = this.props;\n\n    // If pressed on enter, go to exit\n    if (event.key === 'Enter') {\n      this.handleExit();\n      event.preventDefault();\n      return;\n    }\n\n    // Press down arrow from input\n    if (event.key === 'ArrowDown') {\n      if (isOpened) {\n        if (listElementsCounter === -1) {\n          event.preventDefault();\n        }\n        this.handleItemKeyPress(event);\n      } else {\n        this.setState({\n          isOpened: true,\n        });\n      }\n    }\n\n    if (\n      isMultiple &&\n      event.key === 'Backspace' &&\n      (selectedString === '' || selectedString === placeholderString) &&\n      !_.isEmpty(multipleSelectedElements)\n    ) {\n      this.handleDestroySelected(multipleSelectedElements[multipleSelectedElements.length - 1]);\n    }\n  }\n\n  /**\n   * Key press on list items\n   *\n   * @param {object} event\n   */\n  handleItemKeyPress(event, inputValue) {\n    const {\n      listElementsCounter,\n    } = this.state;\n\n    let index = listElementsCounter;\n\n    // If click enter on list item\n    if (event.key === 'Enter') {\n      // Focus input field\n      // this.inputField.focus();\n      // Handle exit with the item value\n      this.handleExit(inputValue);\n      event.preventDefault();\n      return;\n    }\n\n    // Navigate list with up down arrow\n    if (event.key === 'ArrowDown') {\n      index = listElementsCounter + 1;\n    } else if (event.key === 'ArrowUp') {\n      index = listElementsCounter - 1;\n    }\n\n    // Cap index within list\n    index = Math.max(0, Math.min(index, this.listElements.length - 1));\n    // Focus on the next item\n    this.listElements[index].focus();\n\n    // If index changed, update state\n    if (index !== listElementsCounter) {\n      this.setState({\n        listElementsCounter: index,\n      });\n    }\n\n    event.stopPropagation();\n  }\n\n  /**\n   * Handle toggling of dropdown list\n   *\n   * @param {bool} isOpenOnly - Only can open\n   */\n  handleSelectClick(isOpenOnly = false) {\n    const {\n      isOpened,\n      selectedString,\n      maxheight,\n      multipleSelectedElements,\n    } = this.state;\n\n    const {\n      dropList,\n      isMultiple,\n    } = this.props;\n\n    // If this frame is not from focus\n    if (!this.isFromFocus) {\n      // Set open state\n      if (!isOpenOnly || (isOpenOnly && !isOpened)) {\n        this.setState({\n          isOpened: !isOpened,\n        });\n      }\n\n      // If previously invalid, reset list\n      if (!selectedString || selectedString === resultNullString.display_name) {\n        this.setState({\n          listItems: dropList,\n          listHeight: maxheight,\n          listElementsCounter: -1,\n        });\n\n        if (!isMultiple || (isMultiple && _.isEmpty(multipleSelectedElements))) {\n          this.handleChange(null);\n        }\n      }\n    }\n\n    // Unlock from focus\n    this.isFromFocus = false;\n  }\n\n  /**\n   * Handles selection of dropdown item\n   *\n   * @param {object} event - Click event\n   * @param {string} item - Input string\n   */\n  handleSelectItemClick(event, item) {\n    // If click on null item return\n    if (item.value === resultNullString.value) {\n      return;\n    }\n\n    const { numItemsDisplay, height } = this.state;\n    const { dropList } = this.props;\n\n    const {\n      isMultiple,\n    } = this.props;\n\n    // Reset drop list items to all, set selected string,\n    // and reset any errors\n    this.setState({\n      listItems: dropList,\n      listHeight: (_.min([(dropList && dropList.length) || 0, numItemsDisplay]) + 1) * height,\n    });\n\n    // this.formParent.clearErrorString();\n\n    if (isMultiple) {\n      // If multiple dropdown, reset selected string\n      this.setState({\n        selectedString: '',\n      });\n\n      // Set input field text to empty\n      this.inputField.value = '';\n      // Refocus input bar\n      // this.inputField.focus();\n\n      // Set multiple selected item\n      this.handleSetMultipleSelectedItem(item);\n    } else {\n      this.setState({\n        selectedString: item.display_name,\n      }, () => {\n        // Toggle the dropdown menu\n        this.handleSelectClick();\n\n        // Update redux state\n        this.handleChange(item);\n\n        // Close dropdown\n        this.setState({\n          isOpened: false,\n        });\n      });\n    }\n\n    event.stopPropagation();\n  }\n\n  /**\n   * Selection of multi select dropdown\n   *\n   * @param {string} item\n   */\n  handleSetMultipleSelectedItem(item) {\n    const { multipleSelectedElements, height } = this.state;\n\n    const newArr = multipleSelectedElements || [];\n\n    // If item does not exists in the selected list\n    if (!_.find(newArr, i => i.value === item.value)) {\n      // Add item to list\n      newArr.push(item);\n\n      // Change state\n      this.setState({\n        multipleSelectedElements: newArr,\n        clientHeight: this.selectedContainer ? this.selectedContainer.clientHeight : height,\n        isOpened: false,\n      });\n\n      // Update redux store\n      this.handleChange(newArr);\n    }\n  }\n\n  /**\n   * Destroys multi selected item\n   *\n   * @param {string} item\n   */\n  handleDestroySelected(item) {\n    const { height } = this.state;\n\n    const { multipleSelectedElements } = this.state;\n    // Duplicate clean copy\n    let newArr = multipleSelectedElements.slice();\n    // Delete chosen item\n    const index = newArr.indexOf(item);\n    newArr.splice(index, 1);\n    // Set null if empty\n    newArr = newArr.length === 0 ? null : newArr;\n\n    // Update state\n    this.setState({\n      multipleSelectedElements: newArr,\n      clientHeight: this.selectedContainer ? this.selectedContainer.clientHeight : height,\n    });\n\n    // Update redux state\n    this.handleChange(newArr);\n    this.isFromFocus = false;\n  }\n\n  /**\n   * Handles on input changes\n   *\n   * @param {object} event\n   */\n  async handleOnInputChange(event) {\n    // Get current input value\n    const { value } = event.target;\n\n    const { dropList } = this.props;\n    const { height, numItemsDisplay } = this.state;\n\n    // Attempt to match value to list\n    const result = _.filter(\n      dropList,\n      item => item.display_name.toString().toUpperCase().indexOf(value.toString().toUpperCase()) === 0,\n    );\n\n    // Get length of new list, min 1 which is error string\n    const length = result.length ? result.length : 1;\n\n    // Set new list items, height of dropdown list,\n    // Force open list on type, and set selected string to value\n    this.setState({\n      listItems: result.length ? result : [resultNullString],\n      listHeight: (_.min([length, numItemsDisplay]) + 1) * height,\n      isOpened: true,\n      selectedString: value,\n      listElementsCounter: -1,\n    });\n  }\n\n  /**\n   * Handle Blur event\n   *\n   * @param {object} event\n   */\n  handleBlur(event) {\n    // Check if focus event contains children\n    const isChildren = this.wrapperRef.contains(event.relatedTarget);\n\n    // If outside of children\n    if (!isChildren) {\n      // Close dropdown\n      this.setState({\n        isOpened: false,\n      });\n      // Handle exit case\n      this.handleExit();\n      this.isFromFocus = false;\n    }\n  }\n\n  /**\n   * Handle Focus event\n   *\n   * @param {object} event\n   */\n  handleFocus(event) {\n    const { isOpened } = this.state;\n\n    // Check if focus event contains children\n    const isChildren = this.wrapperRef.contains(event.relatedTarget);\n    // If not from children\n    if (!isChildren) {\n      // Open dropdown\n      if (!isOpened) {\n        this.handleSelectClick(true);\n        // Prevent double click\n        this.isFromFocus = true;\n      }\n    }\n  }\n\n  /**\n   * Handle exit selection of entered input\n   *\n   * @param {string} inputValue - From selection\n   */\n  handleExit(inputValue = null) {\n    const {\n      selectedString,\n      listItems,\n    } = this.state;\n\n    const {\n      placeholderString,\n      dropList,\n      isMultiple,\n    } = this.props;\n\n    // Result string if match original list\n    let resultValue = null;\n    // If input causes an error\n    let isError = false;\n    // The string to use\n    const finalString = inputValue !== null ? inputValue.display_name : selectedString;\n\n    // If possible valid input\n    if (\n      finalString &&\n      finalString !== placeholderString &&\n      finalString !== ''\n    ) {\n      // Attempt to match finalString to original list\n      listItems.some((obj) => {\n        const result = obj.display_name.toString().toLowerCase() === finalString.toString().toLowerCase();\n        if (result) {\n          resultValue = obj;\n        }\n\n        return result;\n      });\n\n      // Check error if no match\n      isError = !resultValue;\n      // Set result string to match value or error value\n      resultValue = isError ? null : resultValue;\n\n      if (isMultiple) {\n        if (!isError) {\n          this.handleSetMultipleSelectedItem(resultValue);\n        }\n\n        this.inputField.value = '';\n      } else {\n        // Update redux value\n        this.handleChange(resultValue);\n\n        this.setState({\n          isOpened: false,\n        });\n      }\n    }\n\n    // If not error, reset list to list all,\n    // Set selected string and error if possible\n    // and close the list\n    this.setState({\n      listItems: isError ? listItems : dropList,\n      selectedString: (resultValue && resultValue.display_name) || '',\n    });\n  }\n\n  /**\n   * Renders the dropdown list items\n   */\n  renderListItems() {\n    const { listItems, height } = this.state;\n    this.listElements = [];\n\n    const result = _.map(listItems, item => (\n      <li key={item.value}>\n        <div\n          className=\"list-item text-style\"\n          style={{ height }}\n          onClick={event => this.handleSelectItemClick(event, item)}\n          role=\"button\"\n          tabIndex={-1}\n          onKeyDown={(event) => { this.handleItemKeyPress(event, item); }}\n          ref={(node) => { if (node !== null) this.listElements.push(node); }}\n        >\n          <p>{item.display_name}</p>\n        </div>\n      </li>\n    ));\n\n    return result;\n  }\n\n  /**\n   * Render the multiple selected elements in the input container\n   */\n  renderMultipleSelectedElements() {\n    const { multipleSelectedElements } = this.state;\n    const { isMultiple } = this.props;\n\n    if (!isMultiple) {\n      return null;\n    }\n\n    return _.map(multipleSelectedElements, item => (\n      <div className=\"selected-item-container\" key={item.value}>\n        <div className=\"selected-item\">\n          <p>{item.display_name}</p>\n          <button\n            type=\"button\"\n            className=\"selected-item-destroy\"\n            onMouseUp={() => this.handleDestroySelected(item)}\n            tabIndex={-1}\n          >\n            <img src={Cross} alt=\"cross.svg\" />\n          </button>\n        </div>\n      </div>\n    ));\n  }\n\n  renderTextInput() {\n    const { selectedString } = this.state;\n    const {\n      isMultiple,\n      isDisableTyping,\n      placeholderString,\n      name,\n      notForm,\n    } = this.props;\n\n    return (\n      <Input\n        value={selectedString || ''}\n        name={name}\n        placeholder={((isMultiple || notForm) && placeholderString) || ''}\n        autoComplete=\"off\"\n        ref={node => (this.inputField = node)}\n        onChange={event => this.handleOnInputChange(event)}\n        onKeyDown={event => this.handleInputKeyPress(event)}\n        onClick={() => this.handleSelectClick(true)}\n        disabled={isDisableTyping}\n      />\n    );\n  }\n\n  /**\n   * Render component\n   */\n  render() {\n    const {\n      isOpened,\n      listHeight,\n      height,\n      clientHeight,\n      extraPadding,\n      noTransition,\n    } = this.state;\n\n    // const isOpened = true;\n\n    if (height && listHeight) {\n      const {\n        maxWidth,\n        isMultiple,\n        desc,\n        extraInfo,\n        errorString,\n        noInternalDesc,\n        logo,\n        placeholderString,\n        value,\n      } = this.props;\n\n      // Actual height of the whole control\n      const actualheight = isOpened ? listHeight : height;\n      // Actual height of only the list\n      const actualListheight = actualheight - height;\n\n      // Dynamic styles\n      const dropDownOpenStyle = isOpened ? 'dropdown-container-opened' : 'dropdown-container-closed';\n      const arrowStyle = isOpened ? 'angle-up' : 'angle-down';\n      const transitionStyle = noTransition ? '' : 'do-transition';\n      const listStyle = isOpened ? `list-opened ${transitionStyle}` : `list-closed ${transitionStyle}`;\n      const multipleStyle = isMultiple || logo ? 'multi-drop-v3' : '';\n      const isErrorStyle = errorString ? 'error' : '';\n\n      const noInternalDescStyle = noInternalDesc ? 'no-internal-desc' : '';\n\n      const titleStyle = value ? 'focused-title' : '';\n      const marginTop = clientHeight > defaultHeight || isOpened ? clientHeight : 0;\n      const marginBottom = clientHeight > defaultHeight ? 6 : 0;\n\n      const logoImg = isMultiple ? MagnifyGlass : logo;\n      const zIndexStyle = isOpened ? 'drop-open' : 'drop-close';\n\n      return (\n        <FormInputWrapper\n          desc={desc}\n          extraInfo={extraInfo}\n          errorString={errorString}\n        >\n          <div\n            className={`dropdown-container-v3 ${zIndexStyle} ${multipleStyle} ${noInternalDescStyle}`}\n            style={{\n              height: clientHeight,\n              maxWidth,\n              marginBottom,\n            }}\n            ref={node => (this.wrapperRef = node)}\n            onBlur={event => this.handleBlur(event)}\n            onFocus={event => this.handleFocus(event)}\n          >\n            <div\n              className={`dropdown-container ${dropDownOpenStyle} ${isErrorStyle}`}\n            >\n              {\n                isMultiple || noInternalDesc ? null :\n                <div className={`title-header ${titleStyle}`}>\n                  {placeholderString}\n                </div>\n              }\n              <div\n                className=\"selected-container\"\n                onKeyDown={event => this.handleInputKeyPress(event)}\n                role=\"button\"\n                style={{ minHeight: height }}\n                tabIndex={-1}\n                ref={node => (this.selectedContainer = node)}\n              >\n                {\n                  logoImg ?\n                    <div className=\"icon-container\" style={{ minHeight: height }}>\n                      <img\n                        src={logoImg}\n                        alt=\"DropdownImage.svg\"\n                      />\n                    </div>\n                  :\n                    null\n                }\n                <div\n                  className=\"selected-items-container\"\n                  ref={node => this.selectedItemsContainer = node}\n                  style={{ paddingTop: extraPadding, paddingBottom: extraPadding }}\n                >\n                  {this.renderMultipleSelectedElements()}\n                  <div className=\"selected-text selected-text-multi\">\n                    {this.renderTextInput()}\n                  </div>\n                </div>\n                <div\n                  className=\"selected-arrow\"\n                  onClick={() => this.handleSelectClick()}\n                  onKeyPress={() => {}}\n                  role=\"button\"\n                  tabIndex={-1}\n                >\n                  <img\n                    src={Arrow}\n                    alt=\"arrow.svg\"\n                    className={`selected-arrow-style ${arrowStyle}`}\n                  />\n                </div>\n              </div>\n              <Scrollbars\n                className={`list-container ${listStyle}`}\n                style={{\n                  minHeight: actualListheight,\n                  marginTop,\n                }}\n                ref={node => this.listContainer = node}\n                tabIndex={-1}\n              >\n                {\n                  isOpened ?\n                    this.renderListItems()\n                  :\n                    null\n                }\n              </Scrollbars>\n            </div>\n          </div>\n        </FormInputWrapper>\n      );\n    }\n\n    return null;\n  }\n}\n\nDropDown.defaultProps = {\n  maxWidth: '100%',\n  numItemsDisplay: maxItemsDisplay,\n  isMultiple: false,\n  desc: null,\n  isDisableTyping: false,\n  extraInfo: null,\n  notForm: false,\n  overrideValue: null,\n  errorString: null,\n  dropList: null,\n  valueChangeCallback: null,\n  name: null,\n  noInternalDesc: false,\n  logo: null,\n  value: null,\n};\n\nDropDown.propTypes = {\n  dropList: PropTypes.array,\n  placeholderString: PropTypes.string.isRequired,\n  maxWidth: PropTypes.string,\n  name: PropTypes.string,\n  numItemsDisplay: PropTypes.number,\n  isMultiple: PropTypes.bool,\n  desc: PropTypes.string,\n  isDisableTyping: PropTypes.bool,\n  extraInfo: PropTypes.object,\n  notForm: PropTypes.bool,\n  overrideValue: PropTypes.string,\n  errorString: PropTypes.string,\n  valueChangeCallback: PropTypes.func,\n  noInternalDesc: PropTypes.bool,\n  logo: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\n\nexport default DropDown;\n"],"sourceRoot":""}