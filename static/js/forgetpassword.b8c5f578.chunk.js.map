{"version":3,"sources":["components/ForgetPassword/ForgetPassword.js","containers/ForgetPassword/ForgetPasswordContainer.js","components/Forms/FormInputWrapper/FormInputWrapper.js","assets/images/forms/magnifyGlass.svg","components/Templates/PopupWithText/PopupWithText.js","components/Forms/TextInput/TextInput.js"],"names":["ForgetPassword","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","errorString","handleSubmit","bind","assertThisInitialized","e","submitCallback","password1","password2","length","setState","_this$props","form","change","react_default","a","createElement","reactstrap_es","className","xs","onSubmit","TextInput","name","placeholderString","size","isPassword","desc","zIndex","Button","type","variant","width","height","Component","defaultProps","reduxForm","ForgetPasswordContainer","location","token","search","substring","_","findIndex","char","error","console","log","password","loading","loadingEnd","resetPassword","result","message","setTimeout","_this2","popup","openPopupWithText","_this3","history","react","components_ForgetPassword_ForgetPassword","PopupWithText","ref","node","onConfirm","push","withRouter","connect","login","dispatch","callBack","errorMsg","time","setLoading","clearLoading","FormInputWrapper","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","setErrorString","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","clearErrorString","nextProps","prevState","refValue","validateForm","extraInfo","react__WEBPACK_IMPORTED_MODULE_6___default","children","module","exports","__webpack_require__","p","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","text","jsx","useConfirm","arguments","undefined","popupRef","openPopup","_this$state","showCancelButton","hideCloseButton","_Popup_Popup__WEBPACK_IMPORTED_MODULE_8__","r","react__WEBPACK_IMPORTED_MODULE_6__","components_FormsV3_Button_Button__WEBPACK_IMPORTED_MODULE_7__","onClick","closePopup","mediumHeight","bigHeight","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","heightToUse","isFocus","handleFocus","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","handleBlur","setError","clearError","renderTextArea","handlePostCode","formParent","preventDefault","storeValue","addressFields","formChange","postcode","getPostal","street","concat","block","concatAddress","blkNo","address","input","_ref","react__WEBPACK_IMPORTED_MODULE_8___default","assign","placeholder","rows","cols","_this$props3","isTextArea","isPostCode","toUpper","focusStyle","passwordType","errorStyle","_FormInputWrapper_FormInputWrapper__WEBPACK_IMPORTED_MODULE_14__","style","onFocus","onBlur","redux_form__WEBPACK_IMPORTED_MODULE_10__","component","normalize","value","toUpperCase","src","MagnifyGlass","alt","ownProps","getFormValues","key"],"mappings":"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","file":"static/js/forgetpassword.b8c5f578.chunk.js","sourcesContent":["/**\r\n * ForgetPassword.js\r\n * Forget password page.\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport React, { Component } from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nimport TextInput from '../Forms/TextInput/TextInput';\r\nimport Button from '../FormsV3/Button/Button';\r\n\r\nimport './ForgetPassword.scss';\r\n\r\nclass ForgetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errorString: null,\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    const { submitCallback } = this.props;\r\n    if (!e.password1 || !e.password2) {\r\n      this.setState({\r\n        errorString: 'Please fill in both password fields.',\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (e.password1 !== e.password2) {\r\n      this.setState({\r\n        errorString: 'Password are not the same.',\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (e.password1.length < 8) {\r\n      this.setState({\r\n        errorString: 'Password must be at least 8 characters.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      errorString: null,\r\n    });\r\n\r\n    submitCallback(e.password1);\r\n  }\r\n\r\n  render() {\r\n    const { errorString } = this.state;\r\n    const { handleSubmit, form, change } = this.props;\r\n    return (\r\n      <Row className=\"reset-password\">\r\n        <Col className=\"reset-text\" xs={12}>\r\n          <p>Reset Password</p>\r\n        </Col>\r\n        <form onSubmit={handleSubmit(this.handleSubmit)}>\r\n          <Col xs={12}>\r\n            <TextInput\r\n              form={form}\r\n              change={change}\r\n              name=\"password1\"\r\n              placeholderString=\"Enter your new Password\"\r\n              size=\"medium\"\r\n              isPassword\r\n              desc=\"New Password\"\r\n              zIndex={99}\r\n            />\r\n          </Col>\r\n          <Col xs={12}>\r\n            <TextInput\r\n              form={form}\r\n              change={change}\r\n              name=\"password2\"\r\n              placeholderString=\"Confirm Password\"\r\n              size=\"medium\"\r\n              isPassword\r\n              desc=\"Confirm Password\"\r\n              zIndex={98}\r\n            />\r\n          </Col>\r\n          <Col xs={12}>\r\n            <p className=\"error-text\">{errorString}</p>\r\n          </Col>\r\n          <Col className=\"justify-content-center button\" xs={12}>\r\n            <Button type=\"submit\" variant=\"medium-color\" width={165} height={72}>\r\n              <p>Reset Password</p>\r\n            </Button>\r\n          </Col>\r\n        </form>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nForgetPassword.defaultProps = {\r\n};\r\n\r\nForgetPassword.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  form: PropTypes.string.isRequired,\r\n  change: PropTypes.func.isRequired,\r\n  submitCallback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default reduxForm({\r\n  form: 'reset-password',\r\n})(ForgetPassword);\r\n\r\n","/**\r\n * ForgetPasswordContainer.js\r\n * Used when users are resetting password.\r\n * The link will be given in the email.\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport _ from 'lodash';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ForgetPassword from '../../components/ForgetPassword/ForgetPassword';\r\nimport PopupWithText from '../../components/Templates/PopupWithText/PopupWithText';\r\n\r\nimport { setLoading, clearLoading } from '../../actions/loadingScreenActions';\r\nimport { resetPassword } from '../../actions/userActions';\r\n\r\nclass ForgetPasswordContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { location } = this.props;\r\n    let token = null;\r\n    try {\r\n      token = location.search.substring(_.findIndex(location.search, char => char === '=') + 1);\r\n    } catch (error) {\r\n      console.log('Token parse error');\r\n    }\r\n\r\n    this.state = {\r\n      token,\r\n    };\r\n\r\n    this.submitCallback = this.submitCallback.bind(this);\r\n  }\r\n\r\n  async submitCallback(password) {\r\n    const { token } = this.state;\r\n    const { loading, loadingEnd } = this.props;\r\n\r\n    loading();\r\n    const result = await resetPassword(password, token);\r\n    loadingEnd();\r\n\r\n    const message = result ? 'Your password has been reset successfully.' : 'Password reset failed. Please try again.';\r\n    setTimeout(() => this.popup.openPopupWithText(message, result), 300);\r\n  }\r\n\r\n  render() {\r\n    const { token } = this.state;\r\n    const { history } = this.props;\r\n\r\n    if (!token) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <ForgetPassword\r\n          submitCallback={this.submitCallback}\r\n        />\r\n        <PopupWithText\r\n          ref={node => this.popup = node}\r\n          onConfirm={() => history.push('/')}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nForgetPasswordContainer.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  login: state.login,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loading: (callBack, errorMsg, time) => {\r\n    dispatch(setLoading(callBack, errorMsg, time));\r\n  },\r\n  loadingEnd: () => {\r\n    dispatch(clearLoading());\r\n  },\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ForgetPasswordContainer));\r\n","/**\r\n * FormInputWrapper.js\r\n * Custom form dropdown menu with input\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './FormInputWrapper.scss';\r\n\r\n/**\r\n * Custom Form Dropdown class\r\n */\r\nclass FormInputWrapper extends Component {\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (prevState.errorString !== nextProps.errorString) {\r\n      return {\r\n        errorString: nextProps.errorString,\r\n        refValue: nextProps.refValue,\r\n      };\r\n    }\r\n\r\n    if (nextProps.validateForm && prevState.errorString && prevState.refValue !== nextProps.refValue) {\r\n      nextProps.validateForm();\r\n      return {\r\n        errorString: null,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {object} props Component props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errorString: null,\r\n    };\r\n\r\n    this.setErrorString = this.setErrorString.bind(this);\r\n    this.clearErrorString = this.clearErrorString.bind(this);\r\n  }\r\n\r\n  setErrorString(message) {\r\n    this.setState({\r\n      errorString: message,\r\n    });\r\n  }\r\n\r\n  clearErrorString() {\r\n    this.setState({\r\n      errorString: null,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      errorString,\r\n    } = this.state;\r\n\r\n    const {\r\n      desc,\r\n      extraInfo,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"input-wrapper-main input-wrapper-error\">\r\n        {\r\n          desc !== null ?\r\n            <p className=\"input-wrapper-desc\">{desc}</p>\r\n          :\r\n            null\r\n        }\r\n        {this.props.children}\r\n        {\r\n          extraInfo !== null ?\r\n            <div className=\"extra-info-container\">\r\n              {extraInfo}\r\n            </div>\r\n          :\r\n            null\r\n        }\r\n        {\r\n          errorString !== null ?\r\n            <p className=\"input-wrapper-error-text\">\r\n              {errorString}\r\n            </p>\r\n          :\r\n            null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormInputWrapper.defaultProps = {\r\n  desc: null,\r\n  extraInfo: null,\r\n};\r\n\r\n\r\nFormInputWrapper.propTypes = {\r\n  desc: PropTypes.string,\r\n  extraInfo: PropTypes.object,\r\n};\r\n\r\nexport default FormInputWrapper;\r\n","module.exports = __webpack_public_path__ + \"static/media/magnifyGlass.4cd15637.svg\";","/**\r\n * PopupWithText.js\r\n * Popup with custom text\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from 'components/FormsV3/Button/Button';\r\nimport Popup from '../Popup/Popup';\r\n\r\n\r\nimport './PopupWithText.scss';\r\n\r\nclass PopupWithText extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { onConfirm } = this.props;\r\n\r\n    this.state = {\r\n      text: '',\r\n      jsx: null,\r\n      useConfirm: true,\r\n      onConfirm,\r\n    };\r\n    this.openPopupWithText = this.openPopupWithText.bind(this);\r\n  }\r\n\r\n  openPopupWithText(text, useConfirm = true, onConfirm = null) {\r\n    this.setState({\r\n      text,\r\n      useConfirm,\r\n    });\r\n\r\n    if (onConfirm) {\r\n      this.setState({\r\n        onConfirm,\r\n      });\r\n    }\r\n    setTimeout(this.popupRef.openPopup, 10);\r\n  }\r\n\r\n  openPopupWithJSX(jsx, useConfirm = true, onConfirm = null) {\r\n    this.setState({\r\n      jsx,\r\n      useConfirm,\r\n    });\r\n\r\n    if (onConfirm) {\r\n      this.setState({\r\n        onConfirm,\r\n      });\r\n    }\r\n    setTimeout(this.popupRef.openPopup, 10);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      text, jsx, useConfirm, onConfirm,\r\n    } = this.state;\r\n    const { showCancelButton, hideCloseButton } = this.props;\r\n    return (\r\n      <div className=\"popup-with-text\">\r\n        <Popup\r\n          hideCloseButton={hideCloseButton}\r\n          ref={(r) => { this.popupRef = r; }}\r\n        >\r\n          <Fragment>\r\n            <div className=\"check-out-popup\">\r\n              <div className=\"upper-container upper-margin-down\">\r\n                {\r\n                  jsx || (\r\n                    <p>\r\n                      <span className=\"focus-text\">{text}</span>\r\n                    </p>\r\n                  )\r\n                }\r\n              </div>\r\n              <div className=\"button-container\">\r\n                {\r\n                  showCancelButton ?\r\n                    <Button\r\n                      className=\"checkout-button\"\r\n                      variant=\"medium-flat\"\r\n                      width={166}\r\n                      height={72}\r\n                      onClick={() => {\r\n                        this.popupRef.closePopup();\r\n                      }}\r\n                    >\r\n                      <p>Cancel</p>\r\n                    </Button>\r\n                  :\r\n                    null\r\n                }\r\n                <Button\r\n                  className=\"checkout-button\"\r\n                  variant=\"medium-flat-green\"\r\n                  width={166}\r\n                  height={72}\r\n                  onClick={() => {\r\n                    if (useConfirm) {\r\n                      onConfirm();\r\n                    }\r\n                    this.popupRef.closePopup();\r\n                  }}\r\n                >\r\n                  <p>Confirm</p>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        </Popup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPopupWithText.defaultProps = {\r\n  onConfirm: () => {},\r\n  showCancelButton: false,\r\n  hideCloseButton: false,\r\n};\r\n\r\nPopupWithText.propTypes = {\r\n  onConfirm: PropTypes.func,\r\n  showCancelButton: PropTypes.bool,\r\n  hideCloseButton: PropTypes.bool,\r\n};\r\n\r\nexport default PopupWithText;\r\n","/**\r\n * DropDown.js\r\n * Custom form dropdown menu with input\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, change, getFormValues } from 'redux-form';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport MagnifyGlass from 'assets/images/forms/magnifyGlass.svg';\r\n\r\nimport FormInputWrapper from '../FormInputWrapper/FormInputWrapper';\r\n\r\nimport { getPostal } from '../../../actions/insuranceActions';\r\n\r\nimport './TextInput.scss';\r\n\r\n// Height for medium dropdown\r\nconst mediumHeight = 60;\r\n// Height for big dropdown\r\nconst bigHeight = 72;\r\n\r\n/**\r\n * Custom Form Dropdown class\r\n */\r\nclass TextInput extends Component {\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {object} props Component props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // dropList - The passed down dropdown list items\r\n    // placeholderString - Placeholder string for input\r\n    // size - Size of this control\r\n    // numItemsDisplay - Max items to display on view\r\n    const {\r\n      size,\r\n      height,\r\n    } = this.props;\r\n\r\n    // Get the control height\r\n    let heightToUse = size === 'big' ? bigHeight : mediumHeight;\r\n    heightToUse = height || heightToUse;\r\n\r\n    // isOpened - Whether dropdown is opened\r\n    // listItems - The actual dropdown list\r\n    // selectedString - The selected item string\r\n    // height - Control height\r\n    // numItemsDisplay - How many items to display\r\n    // maxheight - Max height of the list\r\n    // listHeight - Height of the list. (Items count + control)\r\n    this.state = {\r\n      height: heightToUse,\r\n      isFocus: false,\r\n    };\r\n\r\n    this.handleFocus = this.handleFocus.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n    this.setError = this.setError.bind(this);\r\n    this.clearError = this.clearError.bind(this);\r\n    this.renderTextArea = this.renderTextArea.bind(this);\r\n    this.handlePostCode = this.handlePostCode.bind(this);\r\n  }\r\n\r\n  setError(message) {\r\n    this.formParent.setErrorString(message);\r\n  }\r\n\r\n  clearError() {\r\n    this.formParent.clearErrorString();\r\n  }\r\n\r\n  handleFocus() {\r\n    this.setState({\r\n      isFocus: true,\r\n    });\r\n  }\r\n\r\n  handleBlur() {\r\n    this.setState({\r\n      isFocus: false,\r\n    });\r\n  }\r\n\r\n  async handlePostCode(e) {\r\n    e.preventDefault();\r\n    const {\r\n      storeValue,\r\n      name,\r\n      addressFields,\r\n      formChange,\r\n      form,\r\n    } = this.props;\r\n\r\n    if (storeValue) {\r\n      const postcode = storeValue[name];\r\n      const result = await getPostal(postcode);\r\n      if (result) {\r\n        // const streetName = result.name === '' ? '' : `${result.name} `;\r\n        const street = result.street === '' ? '' : `${result.street} `;\r\n        const block = result.block === '' ? '' : `${result.block} `;\r\n        // let concatAddress = `${block}${streetName}${street}`;\r\n        let concatAddress = `${block}${street}`;\r\n\r\n        if (addressFields.blkNo) {\r\n          formChange(form, addressFields.blkNo, result.block);\r\n          concatAddress = street;\r\n        }\r\n\r\n        if (addressFields.address) {\r\n          formChange(form, addressFields.address, concatAddress);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  renderTextArea({ input }) {\r\n    const { placeholderString } = this.props;\r\n    return (\r\n      <div className=\"text-area\">\r\n        <textarea {...input} placeholder={placeholderString} rows=\"10\" cols=\"40\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      height,\r\n      isFocus,\r\n    } = this.state;\r\n\r\n    const {\r\n      name,\r\n      desc,\r\n      placeholderString,\r\n      zIndex,\r\n      isPassword,\r\n      extraInfo,\r\n      errorString,\r\n      isTextArea,\r\n      storeValue,\r\n      validateForm,\r\n      isPostCode,\r\n      toUpper,\r\n    } = this.props;\r\n\r\n    const focusStyle = isFocus ? 'focus' : '';\r\n    const passwordType = isPassword ? 'password' : '';\r\n    const errorStyle = errorString ? 'error' : '';\r\n\r\n    const refValue = storeValue ? storeValue[name] : null;\r\n\r\n    return (\r\n      <FormInputWrapper\r\n        desc={desc}\r\n        ref={node => (this.formParent = node)}\r\n        extraInfo={extraInfo}\r\n        errorString={errorString}\r\n        refValue={refValue}\r\n        validateForm={validateForm}\r\n      >\r\n        <div\r\n          className={`text-input-container ${focusStyle} ${errorStyle}`}\r\n          style={{ height, zIndex }}\r\n          onFocus={() => this.handleFocus()}\r\n          onBlur={() => this.handleBlur()}\r\n        >\r\n          <div className=\"text-input\">\r\n            {\r\n              isTextArea ?\r\n                <Field\r\n                  className=\"text\"\r\n                  component={this.renderTextArea}\r\n                  name={name}\r\n                  normalize={value => (value && toUpper ? value.toUpperCase() : value)}\r\n                />\r\n                :\r\n                  <Field\r\n                    className=\"text\"\r\n                    component=\"input\"\r\n                    type={passwordType}\r\n                    placeholder={placeholderString}\r\n                    name={name}\r\n                    normalize={value => (value && toUpper ? value.toUpperCase() : value)}\r\n                  />\r\n            }\r\n            {\r\n              isPostCode ?\r\n                <button\r\n                  className=\"postcode\"\r\n                  onClick={e => this.handlePostCode(e)}\r\n                >\r\n                  <img src={MagnifyGlass} alt=\"magGlass.svg\" />\r\n                </button>\r\n              :\r\n                null\r\n            }\r\n          </div>\r\n        </div>\r\n      </FormInputWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nTextInput.defaultProps = {\r\n  desc: null,\r\n  isPassword: false,\r\n  extraInfo: null,\r\n  errorString: null,\r\n  isTextArea: false,\r\n  height: null,\r\n  storeValue: null,\r\n  isPostCode: false,\r\n  addressFields: null,\r\n  validateForm: null,\r\n  toUpper: false,\r\n};\r\n\r\n\r\nTextInput.propTypes = {\r\n  placeholderString: PropTypes.string.isRequired,\r\n  size: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  zIndex: PropTypes.number.isRequired,\r\n  desc: PropTypes.string,\r\n  isPassword: PropTypes.bool,\r\n  extraInfo: PropTypes.object,\r\n  errorString: PropTypes.string,\r\n  isTextArea: PropTypes.bool,\r\n  height: PropTypes.number,\r\n  validateForm: PropTypes.func,\r\n  storeValue: PropTypes.object,\r\n  isPostCode: PropTypes.bool,\r\n  addressFields: PropTypes.object,\r\n  toUpper: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  storeValue: (getFormValues(ownProps.form)(state)),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  formChange: (form, key, value) => {\r\n    dispatch(change(form, key, value));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TextInput);\r\n"],"sourceRoot":""}