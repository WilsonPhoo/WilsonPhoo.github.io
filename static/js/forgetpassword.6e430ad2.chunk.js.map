{"version":3,"sources":["components/ForgetPassword/ForgetPassword.js","containers/ForgetPassword/ForgetPasswordContainer.js","components/Templates/PopupWithText/PopupWithText.js"],"names":["ForgetPassword","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","errorString","handleSubmit","bind","assertThisInitialized","e","submitCallback","password1","password2","length","setState","_this$props","form","change","react_default","a","createElement","reactstrap_es","className","xs","onSubmit","TextInput","name","placeholderString","size","isPassword","desc","zIndex","Button","type","variant","width","height","Component","defaultProps","reduxForm","ForgetPasswordContainer","location","token","search","substring","_","findIndex","char","error","console","log","password","loading","loadingEnd","resetPassword","result","message","setTimeout","_this2","popup","openPopupWithText","_this3","history","react","components_ForgetPassword_ForgetPassword","PopupWithText","ref","node","onConfirm","push","withRouter","connect","login","dispatch","callBack","errorMsg","time","setLoading","clearLoading","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","text","jsx","useConfirm","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","arguments","undefined","popupRef","openPopup","_this$state","showCancelButton","hideCloseButton","react__WEBPACK_IMPORTED_MODULE_6___default","_Popup_Popup__WEBPACK_IMPORTED_MODULE_8__","r","react__WEBPACK_IMPORTED_MODULE_6__","components_FormsV3_Button_Button__WEBPACK_IMPORTED_MODULE_7__","onClick","closePopup"],"mappings":"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","file":"static/js/forgetpassword.6e430ad2.chunk.js","sourcesContent":["/**\r\n * ForgetPassword.js\r\n * Forget password page.\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport React, { Component } from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nimport TextInput from '../Forms/TextInput/TextInput';\r\nimport Button from '../FormsV3/Button/Button';\r\n\r\nimport './ForgetPassword.scss';\r\n\r\nclass ForgetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errorString: null,\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    const { submitCallback } = this.props;\r\n    if (!e.password1 || !e.password2) {\r\n      this.setState({\r\n        errorString: 'Please fill in both password fields.',\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (e.password1 !== e.password2) {\r\n      this.setState({\r\n        errorString: 'Password are not the same.',\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (e.password1.length < 8) {\r\n      this.setState({\r\n        errorString: 'Password must be at least 8 characters.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      errorString: null,\r\n    });\r\n\r\n    submitCallback(e.password1);\r\n  }\r\n\r\n  render() {\r\n    const { errorString } = this.state;\r\n    const { handleSubmit, form, change } = this.props;\r\n    return (\r\n      <Row className=\"reset-password\">\r\n        <Col className=\"reset-text\" xs={12}>\r\n          <p>Reset Password</p>\r\n        </Col>\r\n        <form onSubmit={handleSubmit(this.handleSubmit)}>\r\n          <Col xs={12}>\r\n            <TextInput\r\n              form={form}\r\n              change={change}\r\n              name=\"password1\"\r\n              placeholderString=\"Enter your new Password\"\r\n              size=\"medium\"\r\n              isPassword\r\n              desc=\"New Password\"\r\n              zIndex={99}\r\n            />\r\n          </Col>\r\n          <Col xs={12}>\r\n            <TextInput\r\n              form={form}\r\n              change={change}\r\n              name=\"password2\"\r\n              placeholderString=\"Confirm Password\"\r\n              size=\"medium\"\r\n              isPassword\r\n              desc=\"Confirm Password\"\r\n              zIndex={98}\r\n            />\r\n          </Col>\r\n          <Col xs={12}>\r\n            <p className=\"error-text\">{errorString}</p>\r\n          </Col>\r\n          <Col className=\"justify-content-center button\" xs={12}>\r\n            <Button type=\"submit\" variant=\"medium-color\" width={165} height={72}>\r\n              <p>Reset Password</p>\r\n            </Button>\r\n          </Col>\r\n        </form>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nForgetPassword.defaultProps = {\r\n};\r\n\r\nForgetPassword.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  form: PropTypes.string.isRequired,\r\n  change: PropTypes.func.isRequired,\r\n  submitCallback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default reduxForm({\r\n  form: 'reset-password',\r\n})(ForgetPassword);\r\n\r\n","/**\r\n * ForgetPasswordContainer.js\r\n * Used when users are resetting password.\r\n * The link will be given in the email.\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport _ from 'lodash';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ForgetPassword from '../../components/ForgetPassword/ForgetPassword';\r\nimport PopupWithText from '../../components/Templates/PopupWithText/PopupWithText';\r\n\r\nimport { setLoading, clearLoading } from '../../actions/loadingScreenActions';\r\nimport { resetPassword } from '../../actions/userActions';\r\n\r\nclass ForgetPasswordContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { location } = this.props;\r\n    let token = null;\r\n    try {\r\n      token = location.search.substring(_.findIndex(location.search, char => char === '=') + 1);\r\n    } catch (error) {\r\n      console.log('Token parse error');\r\n    }\r\n\r\n    this.state = {\r\n      token,\r\n    };\r\n\r\n    this.submitCallback = this.submitCallback.bind(this);\r\n  }\r\n\r\n  async submitCallback(password) {\r\n    const { token } = this.state;\r\n    const { loading, loadingEnd } = this.props;\r\n\r\n    loading();\r\n    const result = await resetPassword(password, token);\r\n    loadingEnd();\r\n\r\n    const message = result ? 'Your password has been reset successfully.' : 'Password reset failed. Please try again.';\r\n    setTimeout(() => this.popup.openPopupWithText(message, result), 300);\r\n  }\r\n\r\n  render() {\r\n    const { token } = this.state;\r\n    const { history } = this.props;\r\n\r\n    if (!token) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <ForgetPassword\r\n          submitCallback={this.submitCallback}\r\n        />\r\n        <PopupWithText\r\n          ref={node => this.popup = node}\r\n          onConfirm={() => history.push('/')}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nForgetPasswordContainer.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  login: state.login,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loading: (callBack, errorMsg, time) => {\r\n    dispatch(setLoading(callBack, errorMsg, time));\r\n  },\r\n  loadingEnd: () => {\r\n    dispatch(clearLoading());\r\n  },\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ForgetPasswordContainer));\r\n","/**\r\n * PopupWithText.js\r\n * Popup with custom text\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from 'components/FormsV3/Button/Button';\r\nimport Popup from '../Popup/Popup';\r\n\r\n\r\nimport './PopupWithText.scss';\r\n\r\nclass PopupWithText extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { onConfirm } = this.props;\r\n\r\n    this.state = {\r\n      text: '',\r\n      jsx: null,\r\n      useConfirm: true,\r\n      onConfirm,\r\n    };\r\n    this.openPopupWithText = this.openPopupWithText.bind(this);\r\n  }\r\n\r\n  openPopupWithText(text, useConfirm = true, onConfirm = null) {\r\n    this.setState({\r\n      text,\r\n      useConfirm,\r\n    });\r\n\r\n    if (onConfirm) {\r\n      this.setState({\r\n        onConfirm,\r\n      });\r\n    }\r\n    setTimeout(this.popupRef.openPopup, 10);\r\n  }\r\n\r\n  openPopupWithJSX(jsx, useConfirm = true, onConfirm = null) {\r\n    this.setState({\r\n      jsx,\r\n      useConfirm,\r\n    });\r\n\r\n    if (onConfirm) {\r\n      this.setState({\r\n        onConfirm,\r\n      });\r\n    }\r\n    setTimeout(this.popupRef.openPopup, 10);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      text, jsx, useConfirm, onConfirm,\r\n    } = this.state;\r\n    const { showCancelButton, hideCloseButton } = this.props;\r\n    return (\r\n      <div className=\"popup-with-text\">\r\n        <Popup\r\n          hideCloseButton={hideCloseButton}\r\n          ref={(r) => { this.popupRef = r; }}\r\n        >\r\n          <Fragment>\r\n            <div className=\"check-out-popup\">\r\n              <div className=\"upper-container upper-margin-down\">\r\n                {\r\n                  jsx || (\r\n                    <p>\r\n                      <span className=\"focus-text\">{text}</span>\r\n                    </p>\r\n                  )\r\n                }\r\n              </div>\r\n              <div className=\"button-container\">\r\n                {\r\n                  showCancelButton ?\r\n                    <Button\r\n                      className=\"checkout-button\"\r\n                      variant=\"medium-flat\"\r\n                      width={166}\r\n                      height={72}\r\n                      onClick={() => {\r\n                        this.popupRef.closePopup();\r\n                      }}\r\n                    >\r\n                      <p>Cancel</p>\r\n                    </Button>\r\n                  :\r\n                    null\r\n                }\r\n                <Button\r\n                  className=\"checkout-button\"\r\n                  variant=\"medium-flat-green\"\r\n                  width={166}\r\n                  height={72}\r\n                  onClick={() => {\r\n                    if (useConfirm) {\r\n                      onConfirm();\r\n                    }\r\n                    this.popupRef.closePopup();\r\n                  }}\r\n                >\r\n                  <p>Confirm</p>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        </Popup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPopupWithText.defaultProps = {\r\n  onConfirm: () => {},\r\n  showCancelButton: false,\r\n  hideCloseButton: false,\r\n};\r\n\r\nPopupWithText.propTypes = {\r\n  onConfirm: PropTypes.func,\r\n  showCancelButton: PropTypes.bool,\r\n  hideCloseButton: PropTypes.bool,\r\n};\r\n\r\nexport default PopupWithText;\r\n"],"sourceRoot":""}