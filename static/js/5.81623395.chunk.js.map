{"version":3,"sources":["components/FormsV3/Button/Button.js","components/Templates/Popup/Popup.js","components/Templates/SpinnerAnimation/SpinnerAnimation.js","assets/images/common/CloseIcon.svg"],"names":["Button","props","_this","Object","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","variantStyle","getVariantClassString","prevProps","variant","setState","concat","_this$props","onClick","type","children","disabled","width","height","className","isLoading","disabledStyle","newWidth","newHeight","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","tabIndex","onKeyUp","style","minHeight","_Templates_SpinnerAnimation_SpinnerAnimation__WEBPACK_IMPORTED_MODULE_6__","Component","defaultProps","Popup","isOpen","closeCallback","openPopup","bind","C_Users_Kaiser_Desktop_policypal_web_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","closePopup","setCloseCallBack","document","body","scroll","overflowY","callback","flag","arguments","length","undefined","togglePopup","isFromPop","_this2","hideCloseButton","react__WEBPACK_IMPORTED_MODULE_7___default","role","onKeyPress","src","CloseIcon","alt","React","Children","map","child","cloneElement","closePopUp","SpinnerAnimation","dotsColor","backgroundColor","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/5.81623395.chunk.js","sourcesContent":["/**\r\n * Button.js\r\n * Custom Button\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson Phoo](wilson@policypal.com)\r\n */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SpinnerAnimation from '../../Templates/SpinnerAnimation/SpinnerAnimation';\r\nimport './Button.scss';\r\n\r\n/**\r\n * Custom Button class\r\n */\r\nclass Button extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      variantStyle: this.getVariantClassString(),\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { variant } = this.props;\r\n    if (variant !== prevProps.variant) {\r\n      this.setState({\r\n        variantStyle: this.getVariantClassString(),\r\n      });\r\n    }\r\n  }\r\n\r\n  getVariantClassString() {\r\n    const { variant } = this.props;\r\n\r\n    // Default to medium color\r\n    const classString = variant ? `button-${variant}` : 'button-medium-color';\r\n\r\n    return classString;\r\n  }\r\n\r\n  render() {\r\n    const { variantStyle } = this.state;\r\n\r\n    const {\r\n      onClick,\r\n      type,\r\n      children,\r\n      disabled,\r\n      width,\r\n      height,\r\n      className,\r\n      isLoading,\r\n    } = this.props;\r\n\r\n    const disabledStyle = disabled ? 'disabled' : '';\r\n    const newWidth = width ? `${width}px` : '101%';\r\n    const newHeight = height ? `${height}px` : '100%';\r\n\r\n    return (\r\n      <button\r\n        type={type}\r\n        className={`${className} ${variantStyle} ${disabledStyle}`}\r\n        onClick={() => { if (isLoading) return; onClick(); }}\r\n        tabIndex={0}\r\n        onKeyUp={() => { if (isLoading) return; onClick(); }}\r\n        disabled={disabled}\r\n        style={{ width: newWidth, minHeight: newHeight }}\r\n      >\r\n        {\r\n          isLoading ?\r\n            <SpinnerAnimation />\r\n          :\r\n           children\r\n        }\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n  onClick: () => {},\r\n  disabled: false,\r\n  width: '',\r\n  height: '',\r\n  className: '',\r\n  isLoading: false,\r\n};\r\n\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  variant: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool,\r\n  width: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ]),\r\n  height: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ]),\r\n  className: PropTypes.string,\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nexport default Button;\r\n","/**\r\n * Popup.js\r\n * Custom pop up with dynamic content\r\n *\r\n * @version 0.0.1\r\n * @author [Jia Hao](jiahao@policypal.com)\r\n */\r\nimport document from 'global/document';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CloseIcon from 'assets/images/common/CloseIcon.svg';\r\n\r\nimport './Popup.scss';\r\n\r\n/**\r\n * Custom Popup Class\r\n */\r\nclass Popup extends Component {\r\n  // static getDerivedStateFromProps(nextProps, prevState) {\r\n  //   const { isOpen } = nextProps;\r\n\r\n  //   if (isOpen !== prevState.isOpen) {\r\n  //     if (!isOpen) {\r\n  //       document.body.scroll = 'yes';\r\n  //       document.body.style.overflowY = 'auto';\r\n  //       nextProps.onClose();\r\n  //     } else {\r\n  //       document.body.scroll = 'no';\r\n  //       document.body.style.overflowY = 'hidden';\r\n  //       nextProps.onOpen();\r\n  //     }\r\n  //     return { isOpen };\r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      closeCallback: null,\r\n    };\r\n\r\n    this.openPopup = this.openPopup.bind(this);\r\n    this.closePopup = this.closePopup.bind(this);\r\n    this.setCloseCallBack = this.setCloseCallBack.bind(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.scroll = 'yes';\r\n    document.body.style.overflowY = 'auto';\r\n  }\r\n\r\n  setCloseCallBack(callback) {\r\n    this.setState({\r\n      closeCallback: callback,\r\n    });\r\n  }\r\n\r\n  togglePopup(flag) {\r\n    this.setState({ isOpen: flag });\r\n\r\n    if (!flag) {\r\n      document.body.scroll = 'yes';\r\n      document.body.style.overflowY = 'auto';\r\n      // this.props.onClose();\r\n    } else {\r\n      document.body.scroll = 'no';\r\n      document.body.style.overflowY = 'hidden';\r\n      // this.props.onOpen();\r\n    }\r\n  }\r\n\r\n  openPopup(callback = null) {\r\n    this.togglePopup(true);\r\n\r\n    if (callback) {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  closePopup(callback = null, isFromPop = false) {\r\n    const { closeCallback } = this.state;\r\n\r\n    this.togglePopup(false);\r\n\r\n    if (callback) {\r\n      callback();\r\n      return;\r\n    }\r\n\r\n    if (isFromPop && closeCallback) {\r\n      closeCallback();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isOpen } = this.state;\r\n    const { closePopup, setCloseCallBack } = this;\r\n    const { hideCloseButton, style, className } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={\r\n          `popup ${(isOpen) ? 'popup-opened' : 'popup-closed'} ${className}`\r\n        }\r\n      >\r\n        <div className={`cont ${(isOpen) ? 'cont-opened' : 'cont-closed'}`} style={style}>\r\n          {\r\n            hideCloseButton ?\r\n              null\r\n            :\r\n              <div\r\n                role=\"button\"\r\n                onKeyPress={() => {}}\r\n                onClick={() => this.closePopup(null, true)}\r\n                tabIndex={-1}\r\n              >\r\n                <img src={CloseIcon} className=\"close-icon\" alt=\"close\" />\r\n              </div>\r\n          }\r\n          {\r\n            React.Children.map(this.props.children, child => (\r\n              React.cloneElement(child, {\r\n                closePopUp: closePopup,\r\n                setCloseCallBack,\r\n              })\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPopup.propTypes = {\r\n  children: PropTypes.node,\r\n  // isOpen: PropTypes.bool, // eslint-disable-line\r\n  // onClose: PropTypes.func,\r\n  // onOpen: PropTypes.func,\r\n  hideCloseButton: PropTypes.bool,\r\n  style: PropTypes.object,\r\n  className: PropTypes.string,\r\n};\r\n\r\nPopup.defaultProps = {\r\n  children: null,\r\n  // isOpen: false,\r\n  // onClose: () => {},\r\n  // onOpen: () => {},\r\n  hideCloseButton: false,\r\n  style: {},\r\n  className: '',\r\n};\r\n\r\nexport default Popup;\r\n","/**\r\n * SpinnerAnimation.js\r\n * Spinner animation for loading\r\n *\r\n * @version 0.0.1\r\n * @author [Wilson](wilson@policypal.com)\r\n */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SpinnerAnimation.scss';\r\n\r\nclass SpinnerAnimation extends Component {\r\n  render() {\r\n    const { dotsColor } = this.props;\r\n\r\n    return (\r\n      <div className=\"spinner-animation\">\r\n        <div className=\"dot1\" style={{ backgroundColor: dotsColor }} />\r\n        <div className=\"dot2\" style={{ backgroundColor: dotsColor }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSpinnerAnimation.defaultProps = {\r\n  dotsColor: '#333',\r\n};\r\n\r\nSpinnerAnimation.propTypes = {\r\n  dotsColor: PropTypes.string,\r\n};\r\n\r\nexport default SpinnerAnimation;\r\n","module.exports = __webpack_public_path__ + \"static/media/CloseIcon.1c0b2e9c.svg\";"],"sourceRoot":""}