{"version":3,"sources":["assets/images/PA/policypal-personal-accident-insurance-2.svg","assets/images/PA/policypal-personal-accident-insurance-3.svg","assets/images/MainFormIcons/Family.svg","assets/images/PA/PABasic.svg","assets/images/PA/PAEssential.svg","assets/images/PA/PAElite.svg","components/PA/PAEditDetail.js","components/PA/PAMain.js","containers/PA/PAMainContainer.js","components/PA/PAChoosePlan.js","containers/PA/PAChoosePlanContainer.js","components/PA/PADetail.js","containers/PA/PADetailContainer.js","containers/PA/PARouteContainer.js","assets/images/MainFormIcons/Avatar.svg","components/Templates/MultiCompareView/MultiCompareInner.js","components/Templates/MultiCompareView/MultiCompareView.js","components/Forms/Spinner/Spinner.js","assets/images/MainFormIcons/Chest.svg","assets/images/forms/plus.svg","assets/images/forms/minus.svg","containers/PA/PACheckoutContainer.js","assets/images/PA/policypal-personal-accident-insurance-1.svg"],"names":["module","exports","__webpack_require__","p","PAEditDetail","props","_this","Object","classCallCheck","this","paFields","possibleConstructorReturn","getPrototypeOf","call","paData","remapFormFields","form_fields","state","errorStringData","minDate","slashedStringDateToDate","start_date","min_date","handleSubmit","bind","assertThisInitialized","handleCloseEdit","handleRevert","validateForm","_this$props","storeForm","setCloseCallBack","originalValues","e","_this$state","constants","fieldsToCheck","plan_type","push","family_members","errorResult","type","data","options","num_children","_","range","min","max","my_occupation","occupations","spouse_occupation","start","setState","_this2","isFirstValidate","arguments","length","undefined","_this$props2","closePopUp","setInsurFormState","setSubmit","submitCallback","history","isEmptyResult","isEmpty","dateReValidate","error","gaEvent","event_category","event_label","spouseOccupation","occupation-spouse","children","ampTag","objectSpread","occupation-self","FORMSTATES","CHOOSEPLAN","index","concat","path","_this3","_this$props3","change","resetForm","keys","forEach","key","_this4","_this$props4","form","react_default","a","createElement","reactstrap_es","className","xs","sm","DropDownV2","name","placeholderString","dropList","size","zIndex","desc","errorString","_this5","_this$state2","_this$props5","react","src","Family","alt","Selection","noEmptyTextSelection","map","description","sizeInSM","display_name","Spinner","unit","increment","initial","startDate","storeStringToDate","endDate","Date","setFullYear","getFullYear","setDate","getDate","startDateString","dateToString","endDateString","_this6","_this$state3","_this$props6","isPopUp","onSubmit","noGutters","Avatar","style","marginTop","renderFamily","renderSpouse","Chest","DatePickerV2","renderStartDate","Button","variant","width","height","onClick","RestrictionsPopup","ref","node","resPopup","Component","defaultProps","withRouter","reduxForm","destroyOnUnmount","connect","getFormValues","isRevert","editForm","insurance","dispatch","reset","setInsuranceFormState","invokeSubmit","setRestrictionPopup","PAMain","paPromoGiveAway","FormLanding","img1","PA1","img2","PA2","img3","PA3","imgAlt","promo","PA_PAEditDetail","PAMainContainer","loading","clearData","getPAFields","setFormState","MAIN","window","scrollTo","gaTag","page_title","page_path","location","search","prevProps","loadingEnd","PA_PAMain","promoGiveaways","pa","callBack","errorMsg","time","setLoading","clearLoading","clearPAData","PAChoosePlan","selectedPlanData","planType","discount","info","display","partner","insurer_slug","price","policyInfo","net_price","console","log","message","MultiCompareView","assign","category","initialIndex","planImages","basic","PABasic","essential","PAEssential","elite","PAElite","valuesToListen","value","conditions","values","Myself","Me & My Spouse","Me & My Family","editDetail","trackingTags","getAmpTags","forceFixedOnDesktop","PAChoosePlanContainer","paForm","getPlans","getInsurersList","plansData","validInsurersList","PA_PAChoosePlan","mainForm","parseForm","parsePAForm","setSelectedPlanData","DETAILFORM","loadingFailBackState","goBack","parsedForm","getPAPlans","getValidInsurersList","commonFields","myselfFields","myselfSpouseFields","childFields","PADetail","tabsNames","generateTabsNames","tabs","formNames","prefix","fields","field","errorPersons","errorTabIndex","reduce","result","newResult","displayName","myself","toConsumableArray","getFormFields","spouse","child","substring","findIndex","char","i","comma","validateResults","idtype","id_type","nationality","gender","marital","marital_status","race","occupation","industry","tabView","wrappedInstance","goToIndex","document","body","scrollHeight","isSpouse","isFamily","updatePrefix","_loop","TextInput","industries","_this7","_this8","_this$state4","_this9","_this$state5","_this10","_this$state6","_this$props7","renderEmail","nationalities","idTypes","toUpper","renderCenterPortion","renderOccupationIndustry","renderPostalMobile","renderEducation","_this11","TabView","maxTabWidthPx","isDataFadeOnly","renderForm","_this$props8","planDetails","isLoggedIn","piggyCallback","changePlan","DetailForm","errorArray","renderInner","PADetailContainer","profileValues","selectedData","logo","Logos","others","logoDesc","planName","planTotal","insurer_name","product_name","toFixed","PA_PADetail","CHECKOUT","userDetails","PetRouteContainer","resetStoreForm","formIndex","isInitialLoad","replace","resetCompare","resetInsuranceForm","getPromoGiveaways","setInitialFormState","renderStepProgress","renderPAForms","changeUserDetails","nextProps","prevState","isMounted","formState","match","routeResult","routeHandler","isEqual","changeForm","dateToStoreString","surname","firstname","firstName","email","nric","startCase","dateOfBirth","contact","postal_code","charged","StepProgressBar","maxWidth","inputList","stateList","stateDescriptions","main","PA_PAChoosePlanContainer","PA_PADetailContainer","SUBMITTED","PACheckoutContainer","PA_PAMainContainer","meta","isProduction","Helmet","content","RefreshTimer","refresher","invokeNewTimer","resultToMatch","MultiCompareInner","tabIndex","currentTab","policyTypes","handleTabClick","renderTabs","setPlanType","lowerCase","nextState","selectedIndex","categoryTab","isCameFromBackButton","currIncomingIndex","tabIndexToUse","setSelectedIndex","isInitial","oldPolicyTypes","policyTypesToUse","theIndex","image","img","tabInfo","currentTabIndex","tab","newTab","scrollPopUpCallback","buttonDesc","tabStyle","isDisableDropdown","big","CompareView","notAccordion","productChangable","ChangeInitialFormData","headerValue","Enquiry","compare","defaultInsurers","selectedInsurers","currentInsurers","parsedData","parseData","trip_type","parsedParams","setSelectedInsurers","getNewData","onInsurerClick","newDefaultInsurers","plan","slice","isLoading","setTimeout","hoveredIndex","insurer","insurerSlug","incomingInsurers","MultiCompareView_MultiCompareInner","mainMsg","array","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","oldValue","handleChange","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleOnInputKeyDown","handleInputChange","formStore","event","isMinus","newVal","Math","preventDefault","keyCode","floor","inputField","Number","isNaN","extraInfo","disableTyping","errorStyle","react__WEBPACK_IMPORTED_MODULE_6___default","_FormInputWrapper_FormInputWrapper__WEBPACK_IMPORTED_MODULE_12__","formParent","role","Minus","onBlur","redux_form__WEBPACK_IMPORTED_MODULE_8__","disabled","component","onKeyDown","Plus","ownProps","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","paDetailsForm","isAdHoc","adHocData","paramsWording","getCheckoutParamsWording","getSessionParams","headerCoverage","getCheckoutHeaderDataCoverage","params","sessionParams","session_params","SpouseAttribute","familyMemberText","num_adult","title","family","numChildren","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","headerData","mainDetails","attributes","compactCheckoutAttributes","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","end_date","subDetails","getSubDetails","isMyself","getCompactSubDetails","leftDetail","family_name","given_name","full_name","birth_date","address","unit_no","postal","mobile_number","rightDetail","familyData","childCount","full_school_education","relationship","wording","sessionId","react__WEBPACK_IMPORTED_MODULE_7___default","_components_Templates_Checkout_CheckoutWrapper__WEBPACK_IMPORTED_MODULE_13__","backToDetails","payment","cashback","rewardsID","promoCode","receipt"],"mappings":"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","file":"static/js/pa.8577ab42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/policypal-personal-accident-insurance-2.eaeeef41.svg\";","module.exports = __webpack_public_path__ + \"static/media/policypal-personal-accident-insurance-3.1e228c5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Family.453c8112.svg\";","module.exports = __webpack_public_path__ + \"static/media/PABasic.a37e0e4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/PAEssential.ba5a7d59.svg\";","module.exports = __webpack_public_path__ + \"static/media/PAElite.77ea7f2e.svg\";","/**\n * PAEditDetail.js\n * Edit Detail View for PA\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, getFormValues, reset } from 'redux-form';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'reactstrap';\n\nimport Avatar from 'assets/images/MainFormIcons/Avatar.svg';\nimport Family from 'assets/images/MainFormIcons/Family.svg';\nimport Chest from 'assets/images/MainFormIcons/Chest.svg';\n\nimport Button from 'components/FormsV3/Button/Button';\nimport Selection from '../Forms/Selection/Selection';\nimport Spinner from '../Forms/Spinner/Spinner';\nimport DropDownV2 from '../Forms/DropDown/DropDownV2';\nimport DatePickerV2 from '../Forms/DatePicker/DatePickerV2';\n\nimport RestrictionsPopup from '../Templates/RestrictionsPopup/RestrictionsPopup';\n\nimport { invokeSubmit } from '../../actions/editFormActions';\nimport { setInsuranceFormState, FORMSTATES } from '../../actions/insuranceActions';\nimport { setRestrictionPopup } from '../../actions/restrictionsActions';\nimport { validateForm, dateReValidate } from '../../lib/validators';\nimport { storeStringToDate, dateToString, slashedStringDateToDate } from '../../lib/dateFunctions';\nimport { remapFormFields } from '../../lib/helperFunctions';\nimport { gaEvent, ampTag } from '../../lib/tagFunctions';\n\nconst formName = 'pa';\n\nclass PAEditDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    const { paFields } = this.props;\n\n    const paData = remapFormFields(paFields.form_fields);\n\n    this.state = {\n      errorStringData: {},\n      paData,\n      minDate: slashedStringDateToDate(paData.start_date.min_date),\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCloseEdit = this.handleCloseEdit.bind(this);\n    this.handleRevert = this.handleRevert.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n  }\n\n  componentDidMount() {\n    const { storeForm, setCloseCallBack } = this.props;\n    this.originalValues = storeForm;\n\n    if (setCloseCallBack) {\n      setCloseCallBack(this.handleRevert);\n    }\n  }\n\n  validateForm(e) {\n    // e.preventDefault();\n    // console.log(e);\n    const { paData, minDate } = this.state;\n    const {\n      constants,\n    } = this.props;\n\n    const fieldsToCheck = [\n      'plan_type',\n      'my_occupation',\n      'start_date',\n    ];\n\n    if (e.plan_type === 'Me & My Spouse') {\n      fieldsToCheck.push('spouse_occupation');\n    }\n\n    if (e.plan_type === 'Me & My Family') {\n      fieldsToCheck.push('family_members');\n      fieldsToCheck.push('num_children');\n\n      if (e.family_members === '2 Adults') {\n        fieldsToCheck.push('spouse_occupation');\n      }\n    }\n\n    const errorResult = validateForm(e, fieldsToCheck, {\n      plan_type: { type: 'ARRAY', data: paData.plan_type.options },\n      family_members: { type: 'ARRAY', data: paData.family_members.options },\n      num_children: { type: 'ARRAY', data: _.range(paData.num_children.min, (paData.num_children.max) + 1, 1) },\n      my_occupation: { type: 'ARRAY', data: constants.occupations },\n      spouse_occupation: { type: 'ARRAY', data: constants.occupations },\n      start_date: { type: 'DATE', start: minDate },\n    });\n\n    this.setState({\n      errorStringData: errorResult,\n    });\n\n    return errorResult;\n  }\n\n  handleSubmit(e, isFirstValidate = true) {\n    // e.preventDefault();\n    // console.log(e);\n    const {\n      closePopUp,\n      setInsurFormState,\n      setSubmit,\n      storeForm,\n      submitCallback,\n      history,\n    } = this.props;\n\n    const errorResult = this.validateForm(isFirstValidate ? e : storeForm);\n    const isEmptyResult = _.isEmpty(errorResult);\n\n    if (dateReValidate(\n      isEmptyResult,\n      isFirstValidate,\n      errorResult,\n      error => this.setState({ errorStringData: error }),\n      () => this.handleSubmit(storeForm, false),\n    )) {\n      return;\n    }\n\n    if (_.isEmpty(errorResult)) {\n      setSubmit();\n      this.originalValues = storeForm;\n\n      if (submitCallback) {\n        submitCallback();\n      } else {\n        gaEvent('PersonalAccident - Get Quote', {\n          event_category: 'PersonalAccident',\n          event_label: 'Button - PersonalAccident - Get Quote',\n        });\n\n        const spouseOccupation =\n          e.plan_type === 'Me & My Spouse' ||\n            (e.plan_type === 'Me & My Family' && e.family_members === '2 Adults') ?\n            { 'occupation-spouse': e.spouse_occupation } : {};\n\n        const children = e.plan_type === 'Me & My Family' ? { children: e.num_children } : {};\n\n        ampTag('PAGetQuoteA', {\n          type: e.plan_type,\n          'occupation-self': e.my_occupation,\n          ...spouseOccupation,\n          ...children,\n        });\n      }\n\n      if (closePopUp) {\n        closePopUp();\n      }\n\n      setInsurFormState(FORMSTATES.CHOOSEPLAN.index);\n      history.push(`/personal-accident${FORMSTATES.CHOOSEPLAN.path}`);\n    }\n  }\n\n  handleRevert() {\n    const { change, resetForm } = this.props;\n    resetForm();\n    Object.keys(this.originalValues).forEach((key) => {\n      change(key, this.originalValues[key]);\n    });\n  }\n\n  handleCloseEdit() {\n    const { closePopUp } = this.props;\n    closePopUp(this.handleRevert);\n  }\n\n  renderSpouse() {\n    const { errorStringData } = this.state;\n    const {\n      change,\n      form,\n      constants,\n      storeForm,\n    } = this.props;\n\n    if (\n      storeForm &&\n      (storeForm.plan_type === 'Me & My Spouse' ||\n      (storeForm.plan_type === 'Me & My Family' && storeForm.family_members === '2 Adults'))\n    ) {\n      return (\n        <Col className=\"input-padding-left\" xs={12} sm={5}>\n          <DropDownV2\n            form={form}\n            change={change}\n            name=\"spouse_occupation\"\n            placeholderString=\"All Occupations\"\n            dropList={constants.occupations}\n            size=\"medium\"\n            zIndex={95}\n            desc=\"My spouse works as a\"\n            errorString={errorStringData.spouse_occupation}\n            validateForm={() => this.validateForm(storeForm)}\n          />\n        </Col>\n      );\n    }\n\n    return <Col className=\"input-padding-left\" xs={12} sm={5} />;\n  }\n\n  renderFamily() {\n    const { errorStringData, paData } = this.state;\n    const {\n      change,\n      form,\n      storeForm,\n    } = this.props;\n\n    if (storeForm && storeForm.plan_type === 'Me & My Family') {\n      return (\n        <Fragment>\n          <Col className=\"justify-content-center icon icon-car d-none d-sm-flex\" sm={2}>\n            <img src={Family} alt=\"Family.svg\" />\n          </Col>\n          <Col className=\"input-padding-right\" xs={12} sm={5}>\n            <Selection\n              form={form}\n              change={change}\n              name=\"family_members\"\n              type=\"text-selection\"\n              noEmptyTextSelection\n              options={_.map(paData.family_members.options, data => ({\n                key: data, description: data,\n              }))}\n              sizeInSM={6}\n              zIndex={98}\n              desc={paData.family_members.display_name}\n              errorString={errorStringData.family_members}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"input-padding-left\" xs={12} sm={5}>\n            <Spinner\n              form={form}\n              change={change}\n              zIndex={97}\n              name=\"num_children\"\n              unit=\"Children\"\n              min={paData.num_children.min}\n              max={paData.num_children.max}\n              increment={1}\n              initial={paData.num_children.min}\n              desc={paData.num_children.display_name || ''}\n              errorString={errorStringData.num_children}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n        </Fragment>\n      );\n    }\n\n    return null;\n  }\n\n  renderStartDate() {\n    const { storeForm } = this.props;\n\n    try {\n      if (storeForm && storeForm.start_date) {\n        const startDate = storeStringToDate(storeForm.start_date);\n        const endDate = new Date(startDate);\n        endDate.setFullYear(endDate.getFullYear() + 1);\n        endDate.setDate(endDate.getDate() - 1);\n\n        const startDateString = dateToString(startDate);\n        const endDateString = dateToString(endDate);\n\n        return (\n          <Fragment>\n            <Col className=\"input-padding-right\" xs={12} sm={5} />\n            <Col className=\"justify-content-center icon icon-car d-none d-sm-flex\" sm={2} />\n            <Col className=\"input-padding-right pa-start-date\" xs={12} sm={10}>\n              <p>\n                <span>I will like the plan to start from </span>\n                <span><b>{startDateString}</b></span>\n                <span> to </span>\n                <span><b>{endDateString}</b></span>\n              </p>\n            </Col>\n          </Fragment>\n        );\n      }\n    } catch (error) {\n      return null;\n    }\n\n    return null;\n  }\n\n  render() {\n    const { errorStringData, paData, minDate } = this.state;\n    const {\n      handleSubmit,\n      isPopUp,\n      change,\n      form,\n      constants,\n      storeForm,\n    } = this.props;\n\n    return (\n      <div className=\"landing-form-container\">\n        {\n          isPopUp ?\n            <p className=\"edit-header\">Edit Personal Accident Insurance Details</p>\n          :\n            null\n        }\n        <form onSubmit={handleSubmit(this.handleSubmit)}>\n          <Row className=\"input-offset\" noGutters>\n            <Col className=\"justify-content-center icon icon-car d-none d-sm-flex\" sm={2}>\n              <img src={Avatar} alt=\"Avatar.svg\" style={{ marginTop: -11 }} />\n            </Col>\n            <Col xs={12} sm={10}>\n              <Selection\n                form={form}\n                change={change}\n                name=\"plan_type\"\n                type=\"text-selection\"\n                noEmptyTextSelection\n                options={_.map(paData.plan_type.options, data => ({\n                  key: data, description: data,\n                }))}\n                sizeInSM={4}\n                zIndex={99}\n                desc={paData.plan_type.display_name}\n                errorString={errorStringData.plan_type}\n                validateForm={() => this.validateForm(storeForm)}\n              />\n            </Col>\n            {this.renderFamily()}\n            <Col className=\"justify-content-center icon icon-car d-none d-sm-flex\" sm={2} />\n            <Col className=\"input-padding-right\" xs={12} sm={5}>\n              <DropDownV2\n                form={form}\n                change={change}\n                name=\"my_occupation\"\n                placeholderString=\"All Occupations\"\n                dropList={constants.occupations}\n                size=\"medium\"\n                zIndex={96}\n                desc=\"I work as\"\n                errorString={errorStringData.my_occupation}\n                validateForm={() => this.validateForm(storeForm)}\n              />\n            </Col>\n            {this.renderSpouse()}\n            <Col className=\"justify-content-center icon icon-car d-none d-sm-flex\" sm={2}>\n              <img src={Chest} alt=\"Chest.svg\" style={{ marginTop: -11 }} />\n            </Col>\n            <Col className=\"input-padding-right\" xs={12} sm={5}>\n              <DatePickerV2\n                form={form}\n                change={change}\n                name=\"start_date\"\n                errorString={errorStringData.start_date}\n                validateForm={() => this.validateForm(storeForm)}\n                size=\"medium\"\n                zIndex={94}\n                startDate={minDate}\n                desc=\"Start Date\"\n              />\n            </Col>\n            {this.renderStartDate()}\n          </Row>\n          <Row className=\"align-items-center button-container\" noGutters>\n            {\n              isPopUp ?\n                <Col className=\"justify-content-center button\" xs={12}>\n                  <Row noGutters>\n                    <Col className=\"button-container-inner\" xs={12} sm={6}>\n                      <Button\n                        className=\"button-left\"\n                        variant=\"medium-flat\"\n                        width={165}\n                        height={72}\n                        onClick={() => this.handleCloseEdit()}\n                      >\n                        <p>Cancel</p>\n                      </Button>\n                    </Col>\n                    <Col className=\"button-container-inner\" xs={12} sm={6}>\n                      <Button\n                        type=\"submit\"\n                        variant=\"medium-flat-green\"\n                        width={165}\n                        height={72}\n                      >\n                        <p>Save</p>\n                      </Button>\n                    </Col>\n                  </Row>\n                </Col>\n              :\n                <Col className=\"justify-content-center button\" xs={12}>\n                  <Button type=\"submit\" variant=\"medium-flat-green\" width={165} height={72}>\n                    <p>Get Quote</p>\n                  </Button>\n                </Col>\n            }\n          </Row>\n        </form>\n        <RestrictionsPopup ref={node => this.resPopup = node} />\n      </div>\n    );\n  }\n}\n\nPAEditDetail.defaultProps = {\n  isPopUp: false,\n  setCloseCallBack: null,\n  closePopUp: null,\n  submitCallback: null,\n  storeForm: null,\n};\n\nPAEditDetail.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  form: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired,\n  isPopUp: PropTypes.bool,\n  resetForm: PropTypes.func.isRequired,\n  closePopUp: PropTypes.func,\n  setInsurFormState: PropTypes.func.isRequired,\n  setSubmit: PropTypes.func.isRequired,\n  submitCallback: PropTypes.func,\n  storeForm: PropTypes.object,\n  setCloseCallBack: PropTypes.func,\n  paFields: PropTypes.object.isRequired,\n  constants: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  storeForm: getFormValues(formName)(state),\n  isRevert: state.editForm.isRevert,\n  constants: state.insurance.constants,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetForm: () => {\n    dispatch(reset(formName));\n  },\n  setInsurFormState: (state) => {\n    dispatch(setInsuranceFormState(state));\n  },\n  setSubmit: () => {\n    dispatch(invokeSubmit());\n  },\n  setRestrictionPopup: (data) => {\n    dispatch(setRestrictionPopup(data));\n  },\n});\n\nexport default withRouter(reduxForm({\n  form: formName,\n  destroyOnUnmount: false,\n})(connect(mapStateToProps, mapDispatchToProps)(PAEditDetail)));\n","/**\n * PAMain.js\n * Main Landing view for PA\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport PA1 from 'assets/images/PA/policypal-personal-accident-insurance-1.svg';\nimport PA2 from 'assets/images/PA/policypal-personal-accident-insurance-2.svg';\nimport PA3 from 'assets/images/PA/policypal-personal-accident-insurance-3.svg';\n\nimport PAEditDetail from './PAEditDetail';\nimport FormLanding from '../Templates/FormLanding/FormLanding';\n\nimport './PA.scss';\n\nclass PAMain extends Component {\n  render() {\n    const { paFields, paPromoGiveAway } = this.props;\n\n    return (\n      <div className=\"pa-main-container\">\n        <FormLanding\n          img1={PA1}\n          img2={PA2}\n          img3={PA3}\n          imgAlt=\"PolicyPal Personal Accident Insurance\"\n          promo={paPromoGiveAway}\n          desc={\n            <Fragment>\n              <p>Get 5% Cashback upon purchase of</p>\n              <p>Personal Accident Insurance!</p>\n            </Fragment>\n          }\n        >\n          <PAEditDetail\n            paFields={paFields}\n          />\n        </FormLanding>\n      </div>\n    );\n  }\n}\n\nPAMain.defaultProps = {\n  paPromoGiveAway: null,\n};\n\nPAMain.propTypes = {\n  paFields: PropTypes.object.isRequired,\n  paPromoGiveAway: PropTypes.object,\n};\n\nexport default PAMain;\n","/**\n * PAMainContainer.js\n * The Main container for PA\n *\n * @version 0.0.1\n * @author [Wilson](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport PAMain from '../../components/PA/PAMain';\n\nimport { setInsuranceFormState, FORMSTATES } from '../../actions/insuranceActions';\nimport { getPAFields, clearPAData } from '../../actions/paActions';\nimport { setLoading, clearLoading } from '../../actions/loadingScreenActions';\nimport { gaTag, ampTag } from '../../lib/tagFunctions';\n\nclass PAMainContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    const {\n      loading,\n      paFields,\n      history,\n      clearData,\n    } = this.props;\n\n    clearData();\n\n    if (!paFields) {\n      loading(() => history.push('/'));\n      this.props.getPAFields();\n    }\n  }\n\n  componentDidMount() {\n    const { setFormState, history } = this.props;\n    setFormState(FORMSTATES.MAIN.index);\n    window.scrollTo(0, 0);\n\n    gaTag({\n      page_title: 'PersonalAccident',\n      page_path: `/personal-accident${history.location.search}`,\n    });\n    ampTag('PAFormS');\n  }\n\n  componentDidUpdate(prevProps) {\n    const { paFields, loadingEnd } = this.props;\n    if (!prevProps.paFields && paFields) {\n      loadingEnd();\n    }\n  }\n\n  render() {\n    const { paFields, paPromoGiveAway } = this.props;\n\n    if (!paFields) {\n      return null;\n    }\n\n    return (\n      <PAMain\n        paFields={paFields}\n        paPromoGiveAway={paPromoGiveAway}\n      />\n    );\n  }\n}\n\nPAMainContainer.defaultProps = {\n  paFields: null,\n  paPromoGiveAway: null,\n};\n\nPAMainContainer.propTypes = {\n  paPromoGiveAway: PropTypes.object,\n  paFields: PropTypes.object,\n  getPAFields: PropTypes.func.isRequired,\n  loading: PropTypes.func.isRequired,\n  loadingEnd: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n  clearData: PropTypes.func.isRequired,\n  setFormState: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  paPromoGiveAway: state.insurance.promoGiveaways.pa,\n  paFields: state.pa.paFields,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPAFields: () => {\n    dispatch(getPAFields());\n  },\n  loading: (callBack, errorMsg, time) => {\n    dispatch(setLoading(callBack, errorMsg, time));\n  },\n  loadingEnd: () => {\n    dispatch(clearLoading());\n  },\n  clearData: () => {\n    dispatch(clearPAData());\n  },\n  setFormState: (state) => {\n    dispatch(setInsuranceFormState(state));\n  },\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PAMainContainer));\n","/**\n * PAChoosePlan.js\n * Choose Plan view for PA\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import Insurer Logos\nimport PABasic from 'assets/images/PA/PABasic.svg';\nimport PAEssential from 'assets/images/PA/PAEssential.svg';\nimport PAElite from 'assets/images/PA/PAElite.svg';\n\nimport MultiCompareView from '../Templates/MultiCompareView/MultiCompareView';\n\nimport PAEditDetail from './PAEditDetail';\n\nimport { gaEvent, ampTag } from '../../lib/tagFunctions';\n\nclass PAChoosePlan extends Component {\n  getAmpTags(selectedPlanData, planType) {\n    try {\n      let discount = null;\n      _.map(selectedPlanData.info.discount, (data) => {\n        discount = data.display;\n      });\n      if (_.isEmpty(discount)) {\n        discount = '0%';\n      }\n\n      return ({\n        type: planType,\n        partner: selectedPlanData.info.insurer_slug,\n        price: selectedPlanData.policyInfo[planType].net_price,\n        discount,\n      });\n    } catch (error) {\n      console.log(`Travel choose plan Buy now Amp tag failed: ${error.message}`);\n    }\n\n    return {};\n  }\n\n  render() {\n    const { paFields } = this.props;\n\n    return (\n      <div className=\"pa-compare-view\">\n        <MultiCompareView\n          {...this.props}\n          category=\"pa\"\n          form=\"pa\"\n          initialIndex={1}\n          planImages={{\n            basic: PABasic,\n            essential: PAEssential,\n            elite: PAElite,\n          }}\n          editForm={{\n            valuesToListen: [\n              { value: 'plan_type', desc: 'For' },\n              { value: 'family_members', desc: 'Members' },\n              { value: 'num_children', desc: 'Children' },\n              { value: 'start_date', desc: 'Start date' },\n              { value: 'my_occupation', desc: 'My occupation' },\n              { value: 'spouse_occupation', desc: 'Spouse\\'s occupation' },\n            ],\n            conditions: {\n              key: 'plan_type',\n              values: {\n                Myself: ['plan_type', 'start_date', 'my_occupation'],\n                'Me & My Spouse': ['plan_type', 'start_date', 'my_occupation', 'spouse_occupation'],\n                'Me & My Family': ['plan_type', 'start_date', 'num_children', 'family_members', 'my_occupation'],\n              },\n            },\n            editDetail: <PAEditDetail isPopUp paFields={paFields} />,\n          }}\n          trackingTags={{\n            basic: (selectedPlanData) => {\n              gaEvent('PersonalAccident - BuyNowBasic', {\n                event_category: 'PersonalAccident',\n                event_label: 'Button - PersonalAccident - BuyNowBasic',\n              });\n              ampTag('PABuyNowA', this.getAmpTags(selectedPlanData, 'basic'));\n            },\n            essential: (selectedPlanData) => {\n              gaEvent('PersonalAccident - BuyNowEssential', {\n                event_category: 'PersonalAccident',\n                event_label: 'Button - PersonalAccident - BuyNowEssential',\n              });\n              ampTag('PABuyNowA', this.getAmpTags(selectedPlanData, 'essential'));\n            },\n            elite: (selectedPlanData) => {\n              gaEvent('PersonalAccident - BuyNowElite', {\n                event_category: 'PersonalAccident',\n                event_label: 'Button - PersonalAccident - BuyNowElite',\n              });\n              ampTag('PABuyNowA', this.getAmpTags(selectedPlanData, 'elite'));\n            },\n          }}\n          forceFixedOnDesktop\n        />\n      </div>\n    );\n  }\n}\n\nPAChoosePlan.defaultProps = {\n};\n\nPAChoosePlan.propTypes = {\n  paFields: PropTypes.object.isRequired,\n};\n\nexport default PAChoosePlan;\n","/**\n * PAChoosePlanContainer.js\n * Choose Plan Container for PA\n *\n * @version 0.0.1\n * @author [Wilson](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getFormValues } from 'redux-form';\nimport PropTypes from 'prop-types';\n\nimport { setInsuranceFormState, FORMSTATES } from '../../actions/insuranceActions';\nimport { parsePAForm, getPAPlans, getValidInsurersList, clearPAData, setSelectedPlanData } from '../../actions/paActions';\n\nimport PAChoosePlan from '../../components/PA/PAChoosePlan';\nimport { gaTag, ampTag } from '../../lib/tagFunctions';\n\n// const defaultInsurers = ['msig', 'etiqa', 'tokio_marine'];\n\nclass PAChoosePlanContainer extends Component {\n  componentDidMount() {\n    const { setFormState } = this.props;\n    setFormState(FORMSTATES.CHOOSEPLAN.index);\n\n    gaTag({\n      page_title: 'PersonalAccident - Choose Plan',\n      page_path: '/personal-accident/chooseplan',\n    });\n    ampTag('PAResultsS');\n  }\n\n  render() {\n    const {\n      paForm,\n      getPlans,\n      getInsurersList,\n      clearData,\n      setFormState,\n      plansData,\n      validInsurersList,\n      paFields,\n      history,\n    } = this.props;\n\n    if (!paFields) {\n      return null;\n    }\n    return (\n      <PAChoosePlan\n        paFields={paFields}\n        mainForm={paForm}\n        parseForm={parsePAForm}\n        getPlans={getPlans}\n        getInsurersList={getInsurersList}\n        clearData={clearData}\n        setSelectedPlanData={this.props.setSelectedPlanData}\n        setFormState={() => {\n          setFormState(FORMSTATES.DETAILFORM.index);\n          history.push(`/personal-accident${FORMSTATES.DETAILFORM.path}`);\n        }}\n        loadingFailBackState={() => {\n          history.goBack();\n        }}\n        plansData={plansData}\n        validInsurersList={validInsurersList}\n      />\n    );\n  }\n}\n\nPAChoosePlanContainer.defaultProps = {\n  plansData: null,\n  validInsurersList: null,\n};\n\nPAChoosePlanContainer.propTypes = {\n  paForm: PropTypes.object.isRequired,\n  getPlans: PropTypes.func.isRequired,\n  getInsurersList: PropTypes.func.isRequired,\n  clearData: PropTypes.func.isRequired,\n  setSelectedPlanData: PropTypes.func.isRequired,\n  setFormState: PropTypes.func.isRequired,\n  plansData: PropTypes.array,\n  validInsurersList: PropTypes.array,\n  paFields: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  paFields: state.pa.paFields,\n  paForm: getFormValues('pa')(state),\n  plansData: state.pa.plansData,\n  validInsurersList: state.pa.validInsurersList,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setFormState: (state) => {\n    dispatch(setInsuranceFormState(state));\n  },\n  getPlans: (parsedForm) => {\n    dispatch(getPAPlans(parsedForm));\n  },\n  getInsurersList: (parsedForm) => {\n    dispatch(getValidInsurersList(parsedForm));\n  },\n  clearData: () => {\n    dispatch(clearPAData());\n  },\n  setSelectedPlanData: (data) => {\n    dispatch(setSelectedPlanData(data));\n  },\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PAChoosePlanContainer));\n","/**\n * PADetail.js\n * Detail View for PA\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, getFormValues } from 'redux-form';\nimport { Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\n// Import Insurer Logos\nimport DetailForm from '../Templates/DetailForm/DetailForm';\nimport TabView from '../Templates/TabView/TabView';\n\nimport TextInput from '../Forms/TextInput/TextInput';\nimport DatePickerV2 from '../Forms/DatePicker/DatePickerV2';\nimport DropDownV2 from '../Forms/DropDown/DropDownV2';\nimport Selection from '../Forms/Selection/Selection';\n\nimport { validateForm, dateReValidate } from '../../lib/validators';\nimport { gaEvent, ampTag } from '../../lib/tagFunctions';\n// import { getPostal } from '../../actions/insuranceActions';\n\nconst commonFields = [\n  'name',\n  'nationality',\n  'id_type',\n  'nric',\n  'birth_date',\n  'gender',\n];\n\nconst myselfFields = [\n  'email',\n  'postal',\n  'mobile_number',\n  'race',\n  'marital_status',\n];\n\nconst myselfSpouseFields = [\n  'occupation',\n  'industry',\n];\n\nconst childFields = [\n  'education',\n];\n\nconst formName = 'pa-detail';\n\nclass PADetail extends Component {\n  constructor(props) {\n    super(props);\n\n    const tabsNames = this.generateTabsNames();\n\n    this.state = {\n      errorStringData: {},\n      errorString: null,\n      tabs: tabsNames.tabs,\n      formNames: tabsNames.formNames,\n      prefix: '',\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n  }\n\n  getFormFields(prefix, fields) {\n    return _.map(fields, field => (`${prefix}${field}`));\n  }\n\n  async validateForm(e/* , isSubmit = false */) {\n    // console.log(e);\n    const { formNames } = this.state;\n\n    const errorPersons = [];\n    let errorString = null;\n    let errorTabIndex = -1;\n\n    const errorResult = _.reduce(formNames, (result, name, index) => {\n      let newResult = {};\n      let displayName = '';\n      if (name === '') {\n        const myself = [\n          ...this.getFormFields(name, commonFields),\n          ...this.getFormFields(name, myselfFields),\n          ...this.getFormFields(name, myselfSpouseFields),\n        ];\n\n        newResult = validateForm(e, myself);\n        displayName = 'Myself';\n      } else if (name === 'spouse-') {\n        const spouse = [\n          ...this.getFormFields(name, commonFields),\n          ...this.getFormFields(name, myselfSpouseFields),\n        ];\n\n        newResult = validateForm(e, spouse);\n        displayName = 'Spouse';\n      } else {\n        const child = [\n          ...this.getFormFields(name, commonFields),\n          ...this.getFormFields(name, childFields),\n        ];\n\n        newResult = validateForm(e, child);\n        displayName = `Child ${name.substring(_.findIndex(name, char => char === '_') + 1, name.length - 1)}`;\n      }\n\n      if (!_.isEmpty(newResult)) {\n        errorPersons.push(displayName);\n        if (errorTabIndex === -1) {\n          errorTabIndex = index;\n        }\n      }\n\n      return { ...result, ...newResult };\n    }, {});\n\n    /* if (isSubmit) {\n      const postalResult = await getPostal(e.postal);\n      if (!postalResult) {\n        errorResult.postal = 'Invalid postal code';\n\n        if (errorTabIndex === -1) {\n          errorTabIndex = 0;\n        }\n\n        if (!_.find(errorPersons, person => person === 'Myself')) {\n          errorPersons.push('Myself');\n        }\n      }\n    } */\n\n    this.setState({\n      errorStringData: errorResult,\n    });\n\n    if (errorPersons.length > 0) {\n      errorString = 'Errors found in form(s): ';\n      for (let i = 0; i < errorPersons.length; ++i) {\n        const comma = i !== errorPersons.length - 1 ? ', ' : '';\n        errorString = `${errorString}${errorPersons[i]}${comma}`;\n      }\n\n      this.setState({\n        errorString: [<p className=\"error-string\" key=\"error-1\">{errorString}</p>],\n      });\n    } else {\n      this.setState({\n        errorString: null,\n      });\n    }\n\n    return { errorResult, errorTabIndex };\n  }\n\n  async handleSubmit(e, isFirstValidate = true) {\n    // console.log(e);\n    const { submitCallback, storeForm } = this.props;\n\n    const validateResults = await this.validateForm(isFirstValidate ? e : storeForm, true);\n    const isEmptyResult = _.isEmpty(validateResults.errorResult);\n\n    if (dateReValidate(\n      isEmptyResult,\n      isFirstValidate,\n      validateResults.errorResult,\n      error => this.setState({ errorStringData: error, errorString: null }),\n      () => this.handleSubmit(storeForm, false),\n    )) {\n      return;\n    }\n\n    if (isEmptyResult) {\n      gaEvent('PersonalAccident - DetailForm - Checkout', {\n        event_category: 'PersonalAccident',\n        event_label: 'PersonalAccident - DetailForm - Checkout',\n      });\n      ampTag('PACheckoutA', {\n        idtype: e.id_type,\n        nationality: e.nationality,\n        gender: e.gender,\n        marital: e.marital_status,\n        race: e.race,\n        occupation: e.occupation,\n        industry: e.industry,\n      });\n\n      submitCallback();\n    } else if (this.tabView && validateResults.errorTabIndex !== -1) {\n      this.tabView.wrappedInstance.goToIndex(validateResults.errorTabIndex);\n    }\n\n    window.scrollTo(0, document.body.scrollHeight);\n  }\n\n  updatePrefix(name) {\n    this.setState({\n      prefix: name,\n    });\n  }\n\n  generateTabsNames() {\n    const { paForm } = this.props;\n    const tabs = [];\n    const formNames = [''];\n\n    const isSpouse = paForm.plan_type === 'Me & My Spouse';\n    const isFamily = paForm.plan_type === 'Me & My Family';\n\n    tabs.push({\n      desc: 'Me',\n      onClick: () => { this.updatePrefix(''); },\n    });\n\n    if (isSpouse || (isFamily && paForm.family_members === '2 Adults')) {\n      const name = 'spouse-';\n      tabs.push({\n        desc: 'Spouse',\n        onClick: () => { this.updatePrefix(name); },\n      });\n      formNames.push(name);\n    }\n\n    if (isFamily) {\n      for (let i = 0; i < paForm.num_children; ++i) {\n        const name = `fam-child_${i + 1}-`;\n        tabs.push({\n          desc: `Child ${i + 1}`,\n          onClick: () => { this.updatePrefix(name); },\n        });\n        formNames.push(name);\n      }\n    }\n\n    return {\n      tabs: tabs.length > 1 ? tabs : null,\n      formNames,\n    };\n  }\n\n  renderEmail() {\n    const { errorStringData, prefix } = this.state;\n    const {\n      form,\n      change,\n      storeForm,\n    } = this.props;\n\n    if (prefix === '') {\n      return (\n        <Col xs={12}>\n          <TextInput\n            form={form}\n            change={change}\n            name={`${prefix}email`}\n            placeholderString=\"\"\n            size=\"medium\"\n            zIndex={99}\n            desc=\"Email Address\"\n            errorString={errorStringData[`${prefix}email`]}\n            validateForm={() => this.validateForm(storeForm)}\n          />\n        </Col>\n      );\n    }\n\n    return null;\n  }\n\n  renderOccupationIndustry() {\n    const { errorStringData, prefix } = this.state;\n    const {\n      form,\n      change,\n      constants,\n      storeForm,\n    } = this.props;\n\n    if (prefix === '' || prefix === 'spouse-') {\n      return (\n        <Fragment>\n          <Col className=\"right-padding\" xs={12} sm={6}>\n            <DropDownV2\n              form={form}\n              change={change}\n              name={`${prefix}occupation`}\n              placeholderString=\"Select occupation\"\n              dropList={constants.occupations}\n              size=\"medium\"\n              zIndex={92}\n              desc=\"Occupation\"\n              errorString={errorStringData[`${prefix}occupation`]}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"left-padding\" xs={12} sm={6}>\n            <DropDownV2\n              form={form}\n              change={change}\n              name={`${prefix}industry`}\n              placeholderString=\"Select industry\"\n              dropList={constants.industries}\n              size=\"medium\"\n              zIndex={91}\n              desc=\"Industry\"\n              errorString={errorStringData[`${prefix}industry`]}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n        </Fragment>\n      );\n    }\n\n    return null;\n  }\n\n  renderPostalMobile() {\n    const { errorStringData, prefix } = this.state;\n    const {\n      form,\n      change,\n      storeForm,\n    } = this.props;\n\n    if (prefix === '') {\n      return (\n        <Fragment>\n          <Col className=\"right-padding\" xs={12} sm={6}>\n            <TextInput\n              form={form}\n              change={change}\n              name={`${prefix}postal`}\n              placeholderString=\"\"\n              size=\"medium\"\n              zIndex={90}\n              desc=\"Postal Code\"\n              errorString={errorStringData[`${prefix}postal`]}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"left-padding\" xs={12} sm={6}>\n            <TextInput\n              form={form}\n              change={change}\n              name={`${prefix}mobile_number`}\n              placeholderString=\"\"\n              size=\"medium\"\n              zIndex={89}\n              desc=\"Mobile Number\"\n              errorString={errorStringData[`${prefix}mobile_number`]}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n        </Fragment>\n      );\n    }\n\n    return null;\n  }\n\n  renderEducation() {\n    const { errorStringData, prefix } = this.state;\n    const {\n      form,\n      change,\n      storeForm,\n    } = this.props;\n\n    if (prefix !== '' && prefix !== 'spouse-') {\n      return (\n        <Col className=\"right-padding\" xs={12} sm={6}>\n          <Selection\n            form={form}\n            change={change}\n            name={`${prefix}education`}\n            type=\"text-selection\"\n            noEmptyTextSelection\n            options={[\n              { key: 'Yes', description: 'Yes' },\n              { key: 'No', description: 'No' },\n            ]}\n            sizeInSM={6}\n            desc=\"Full school education\"\n            errorString={errorStringData[`${prefix}education`]}\n            validateForm={() => this.validateForm(storeForm)}\n          />\n        </Col>\n      );\n    }\n\n    return null;\n  }\n\n  renderCenterPortion() {\n    const { errorStringData, prefix } = this.state;\n    const {\n      form,\n      change,\n      constants,\n      storeForm,\n    } = this.props;\n\n    if (prefix === '') {\n      return (\n        <Fragment>\n          <Col className=\"right-padding\" xs={12} sm={6}>\n            <DropDownV2\n              form={form}\n              change={change}\n              name={`${prefix}race`}\n              placeholderString=\"Select race\"\n              dropList={constants.race}\n              size=\"medium\"\n              zIndex={94}\n              desc=\"Race\"\n              errorString={errorStringData[`${prefix}race`]}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"left-padding\" xs={12} sm={6}>\n            <Selection\n              form={form}\n              change={change}\n              name={`${prefix}gender`}\n              type=\"text-selection\"\n              noEmptyTextSelection\n              options={[\n                { key: 'Male', description: 'Male' },\n                { key: 'Female', description: 'Female' },\n              ]}\n              sizeInSM={6}\n              desc=\"Gender\"\n              errorString={errorStringData[`${prefix}gender`]}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"right-padding\" xs={12} sm={6}>\n            <DatePickerV2\n              form={form}\n              change={change}\n              name={`${prefix}birth_date`}\n              size=\"medium\"\n              zIndex={93}\n              desc=\"Date of birth\"\n              errorString={errorStringData[`${prefix}birth_date`]}\n              validateForm={() => this.validateForm(storeForm)}\n              endDate={new Date()}\n            />\n          </Col>\n          <Col className=\"left-padding\" xs={12} sm={6}>\n            <Selection\n              form={form}\n              change={change}\n              name={`${prefix}marital_status`}\n              type=\"text-selection\"\n              noEmptyTextSelection\n              options={[\n                { key: 'Single', description: 'Single' },\n                { key: 'Married', description: 'Married' },\n              ]}\n              sizeInSM={6}\n              desc=\"Marital Status\"\n              errorString={errorStringData[`${prefix}marital_status`]}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n        </Fragment>\n      );\n    }\n\n    return (\n      <Fragment>\n        <Col className=\"right-padding\" xs={12} sm={6}>\n          <DatePickerV2\n            form={form}\n            change={change}\n            name={`${prefix}birth_date`}\n            size=\"medium\"\n            zIndex={93}\n            desc=\"Date of birth\"\n            errorString={errorStringData[`${prefix}birth_date`]}\n            validateForm={() => this.validateForm(storeForm)}\n            endDate={new Date()}\n          />\n        </Col>\n        <Col className=\"left-padding\" xs={12} sm={6}>\n          <Selection\n            form={form}\n            change={change}\n            name={`${prefix}gender`}\n            type=\"text-selection\"\n            noEmptyTextSelection\n            options={[\n              { key: 'Male', description: 'Male' },\n              { key: 'Female', description: 'Female' },\n            ]}\n            sizeInSM={6}\n            desc=\"Gender\"\n            errorString={errorStringData[`${prefix}gender`]}\n            validateForm={() => this.validateForm(storeForm)}\n          />\n        </Col>\n      </Fragment>\n    );\n  }\n\n  renderForm() {\n    const { errorStringData, prefix } = this.state;\n    const {\n      form,\n      change,\n      constants,\n      storeForm,\n    } = this.props;\n\n    return (\n      <Row className=\"main-form\" noGutters>\n        {this.renderEmail()}\n        <Col className=\"right-padding\" xs={12} sm={6}>\n          <TextInput\n            form={form}\n            change={change}\n            name={`${prefix}name`}\n            placeholderString=\"\"\n            size=\"medium\"\n            zIndex={98}\n            desc=\"Full Name\"\n            errorString={errorStringData[`${prefix}name`]}\n            validateForm={() => this.validateForm(storeForm)}\n          />\n        </Col>\n        <Col className=\"left-padding\" xs={12} sm={6}>\n          <DropDownV2\n            form={form}\n            change={change}\n            name={`${prefix}nationality`}\n            placeholderString=\"Select nationality\"\n            dropList={constants.nationalities}\n            size=\"medium\"\n            zIndex={97}\n            desc=\"Nationality\"\n            errorString={errorStringData[`${prefix}nationality`]}\n            validateForm={() => this.validateForm(storeForm)}\n          />\n        </Col>\n        <Col className=\"right-padding\" xs={12} sm={6}>\n          <DropDownV2\n            form={form}\n            change={change}\n            name={`${prefix}id_type`}\n            placeholderString=\"Select ID Type\"\n            dropList={constants.idTypes}\n            size=\"medium\"\n            zIndex={96}\n            desc=\"Type of ID\"\n            errorString={errorStringData[`${prefix}id_type`]}\n            validateForm={() => this.validateForm(storeForm)}\n          />\n        </Col>\n        <Col className=\"left-padding\" xs={12} sm={6}>\n          <TextInput\n            form={form}\n            change={change}\n            name={`${prefix}nric`}\n            placeholderString=\"\"\n            size=\"medium\"\n            zIndex={95}\n            desc=\"ID Number\"\n            errorString={errorStringData[`${prefix}nric`]}\n            validateForm={() => this.validateForm(storeForm)}\n            toUpper\n          />\n        </Col>\n        {this.renderCenterPortion()}\n        {this.renderOccupationIndustry()}\n        {this.renderPostalMobile()}\n        {this.renderEducation()}\n      </Row>\n    );\n  }\n\n  renderInner() {\n    const { tabs } = this.state;\n\n    if (!tabs) {\n      return this.renderForm();\n    }\n\n    return (\n      <TabView\n        maxTabWidthPx={128}\n        ref={node => this.tabView = node}\n        className=\"tabview-margin-top\"\n        tabs={tabs}\n        isDataFadeOnly\n        name=\"pa-detail-tab\"\n      >\n        {this.renderForm()}\n      </TabView>\n    );\n  }\n\n  render() {\n    const { errorString } = this.state;\n    const {\n      form,\n      change,\n      planDetails,\n      isLoggedIn,\n      piggyCallback,\n      changePlan,\n    } = this.props;\n\n    return (\n      <DetailForm\n        category=\"pa\"\n        changePlan={changePlan}\n        handleSubmit={this.props.handleSubmit}\n        onSubmit={this.handleSubmit}\n        change={change}\n        form={form}\n        planDetails={planDetails}\n        isLoggedIn={isLoggedIn}\n        piggyCallback={piggyCallback}\n        errorArray={errorString}\n      >\n        {this.renderInner()}\n      </DetailForm>\n    );\n  }\n}\n\nPADetail.defaultProps = {\n  storeForm: null,\n};\n\nPADetail.propTypes = {\n  paForm: PropTypes.object.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  submitCallback: PropTypes.func.isRequired,\n  form: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired,\n  planDetails: PropTypes.object.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  piggyCallback: PropTypes.func.isRequired,\n  changePlan: PropTypes.func.isRequired,\n  constants: PropTypes.object.isRequired,\n  storeForm: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n  storeForm: getFormValues(formName)(state),\n  constants: state.insurance.constants,\n});\n\nexport default reduxForm({\n  form: formName,\n  destroyOnUnmount: false,\n})(connect(mapStateToProps)(PADetail));\n","/**\n * PADetailContainer.js\n * The Detail container for PA\n *\n * @version 0.0.1\n * @author [Wilson](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getFormValues } from 'redux-form';\nimport PropTypes from 'prop-types';\n\n// Import Insurer Logos\nimport Logos from 'assets/images/InsurerLogos';\n\nimport PADetail from '../../components/PA/PADetail';\nimport { setInsuranceFormState, FORMSTATES } from '../../actions/insuranceActions';\nimport { gaTag, gaEvent, ampTag } from '../../lib/tagFunctions';\n\nclass PADetailContainer extends Component {\n  componentDidMount() {\n    const { setFormState } = this.props;\n    setFormState(FORMSTATES.DETAILFORM.index);\n    gaTag({\n      page_title: 'PersonalAccident - Detail Form',\n      page_path: '/personal-accident/detailform',\n    });\n    ampTag('PADetailsS');\n  }\n\n  render() {\n    const {\n      plansData,\n      isLoggedIn,\n      setFormState,\n      profileValues,\n      piggyCallback,\n      paForm,\n      history,\n    } = this.props;\n\n    const selectedData = plansData;\n\n    let planDetails = {\n      logo: Logos.others,\n      logoDesc: '',\n      planName: '',\n      planTotal: null,\n    };\n\n    try {\n      planDetails = {\n        logo: Logos[selectedData.info.insurer_slug],\n        logoDesc: `${selectedData.info.insurer_name}.svg`,\n        planName: selectedData.info.product_name,\n        planTotal: `$${selectedData.policyInfo[selectedData.planType].net_price.toFixed(2)}`,\n      };\n    } catch (error) {\n      console.log('Get plan details failed');\n    }\n\n    return (\n      <PADetail\n        paForm={paForm}\n        selectedData={selectedData}\n        planDetails={planDetails}\n        isLoggedIn={isLoggedIn}\n        piggyCallback={piggyCallback}\n        changePlan={() => {\n          history.goBack();\n          gaEvent('PersonalAccident - DetailForm - ChangePlan', {\n            event_category: 'PersonalAccident',\n            event_label: 'PersonalAccident - DetailForm - ChangePlan',\n          });\n        }}\n        profileValues={profileValues}\n        submitCallback={() => {\n          setFormState(FORMSTATES.CHECKOUT.index);\n          history.push(`/personal-accident${FORMSTATES.CHECKOUT.path}`);\n        }}\n      />\n    );\n  }\n}\n\nPADetailContainer.defaultProps = {\n};\n\nPADetailContainer.propTypes = {\n  plansData: PropTypes.object.isRequired,\n  piggyCallback: PropTypes.func.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  setFormState: PropTypes.func.isRequired,\n  profileValues: PropTypes.object.isRequired,\n  paForm: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = state => ({\n  paForm: getFormValues('pa')(state),\n  profileValues: state.userDetails,\n  plansData: state.pa.selectedPlanData,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setFormState: (state) => {\n    dispatch(setInsuranceFormState(state));\n  },\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PADetailContainer));\n","/**\n * PARouteContainer.js\n * The wrapper container for PA\n *\n * @version 0.0.1\n * @author [Wilson](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { change, reset } from 'redux-form';\nimport { /* Prompt, */ withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { resetCompare } from '../../actions/compareActions';\nimport { getPromoGiveaways, resetInsuranceForm, FORMSTATES } from '../../actions/insuranceActions';\nimport { clearPAData } from '../../actions/paActions';\nimport { isProduction } from '../../lib/tagFunctions';\n\nimport StepProgressBar from '../../components/Templates/StepProgressBar/StepProgressBar';\nimport RefreshTimer from '../../components/Templates/RefreshTimer/RefreshTimer';\n\nimport PAMainContainer from './PAMainContainer';\nimport PAChoosePlanContainer from './PAChoosePlanContainer';\nimport PADetailContainer from './PADetailContainer';\nimport PACheckoutContainer from './PACheckoutContainer';\n\nimport { dateToStoreString } from '../../lib/dateFunctions';\nimport { routeHandler } from '../../lib/helperFunctions';\n\nconst form = 'pa';\nconst detailFormName = 'pa-detail';\n\nclass PetRouteContainer extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { formIndex, isMounted } = prevState;\n    const { formState, match, history } = nextProps;\n\n    if (isMounted) {\n      const routeResult = routeHandler('personal-accident', formState, formIndex, match, history);\n      if (routeResult && routeResult.formIndex !== null) {\n        return ({\n          formIndex: routeResult.formIndex,\n        });\n      }\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    const {\n      resetStoreForm,\n      paPromoGiveAway,\n      clearData,\n      history,\n    } = this.props;\n\n    this.state = {\n      formIndex: 0,\n      isInitialLoad: true,\n    };\n\n    history.replace(`/personal-accident${history.location.search}`);\n\n    clearData();\n    this.props.resetCompare();\n    this.props.resetInsuranceForm();\n\n    resetStoreForm('pa');\n    resetStoreForm('pa-detail');\n\n    if (paPromoGiveAway === undefined) {\n      this.props.getPromoGiveaways();\n    }\n\n    this.setInitialFormState = this.setInitialFormState.bind(this);\n    this.renderStepProgress = this.renderStepProgress.bind(this);\n    this.renderPAForms = this.renderPAForms.bind(this);\n    this.changeUserDetails = this.changeUserDetails.bind(this);\n  }\n\n  componentDidMount() {\n    // window.addEventListener('beforeunload', this.handleLeavePage);\n    this.setInitialFormState();\n    this.setState({\n      // eslint-disable-next-line\n      isMounted: true,\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { isInitialLoad } = this.state;\n    const { userDetails } = this.props;\n\n    if (isInitialLoad && _.isEqual(userDetails, prevProps.userDetails)) {\n      this.changeUserDetails();\n    }\n  }\n\n  componentWillUnmount() {\n    const { clearData, resetStoreForm } = this.props;\n    clearData();\n    this.props.resetCompare();\n    this.props.resetInsuranceForm();\n\n    resetStoreForm('pa');\n    resetStoreForm('pa-detail');\n  }\n\n  setInitialFormState() {\n    const { changeForm } = this.props;\n\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() + 1);\n\n    changeForm(form, 'my_occupation', 'Accountant');\n    changeForm(form, 'start_date', dateToStoreString(startDate));\n\n    this.changeUserDetails();\n  }\n\n  changeUserDetails() {\n    const { isInitialLoad } = this.state;\n    const { userDetails, changeForm } = this.props;\n\n    if (userDetails) {\n      const surname = userDetails && userDetails.surname ? userDetails.surname : '';\n      const firstname = userDetails && userDetails.firstName ? ` ${userDetails.firstName}` : '';\n\n      changeForm(detailFormName, 'email', userDetails.email);\n      changeForm(detailFormName, 'name', `${surname}${firstname}`);\n      changeForm(detailFormName, 'nationality', userDetails.nationality);\n      changeForm(detailFormName, 'id_type', userDetails.id_type);\n      changeForm(detailFormName, 'nric', userDetails.nric);\n      changeForm(detailFormName, 'race', userDetails.race);\n      changeForm(detailFormName, 'gender', _.startCase(userDetails.gender));\n      changeForm(detailFormName, 'birth_date', userDetails.dateOfBirth);\n      changeForm(detailFormName, 'marital_status', _.startCase(userDetails.marital_status));\n      changeForm(detailFormName, 'occupation', userDetails.occupation);\n      changeForm(detailFormName, 'mobile_number', userDetails.contact);\n      changeForm(detailFormName, 'postal', userDetails.postal_code);\n\n      if (isInitialLoad) {\n        this.setState({\n          isInitialLoad: false,\n        });\n      }\n    }\n  }\n\n  renderStepProgress() {\n    const { formIndex } = this.state;\n    const { charged } = this.props;\n    return (\n      <StepProgressBar\n        maxWidth=\"556px\"\n        formState={formIndex}\n        inputList={[\n          'Choose Plan',\n          'Details',\n          'Checkout',\n        ]}\n        form=\"pa\"\n        stateList={[\n          FORMSTATES.CHOOSEPLAN,\n          FORMSTATES.DETAILFORM,\n          FORMSTATES.CHECKOUT,\n        ]}\n        stateDescriptions={[\n          { main: ''/* , 'Choose your Plan', sub: 'Compare price plans from multiple companies' */ },\n          { main: 'Details' },\n          { main: 'Checkout' },\n        ]}\n        charged={charged}\n      />\n    );\n  }\n\n  renderPAForms() {\n    const { formIndex } = this.state;\n    const {\n      userDetails,\n      charged,\n    } = this.props;\n\n    const isLoggedIn = !_.isEmpty(userDetails);\n\n\n    switch (formIndex) {\n      case FORMSTATES.CHOOSEPLAN.index:\n        return <PAChoosePlanContainer isLoggedIn={isLoggedIn} />;\n      case FORMSTATES.DETAILFORM.index:\n        return (\n          <PADetailContainer\n            isLoggedIn={isLoggedIn}\n            piggyCallback={this.changeUserDetails}\n          />\n        );\n      case FORMSTATES.CHECKOUT.index:\n      case FORMSTATES.SUBMITTED.index:\n        return <PACheckoutContainer isLoggedIn={isLoggedIn} charged={charged} />;\n      default:\n        return <PAMainContainer isLoggedIn={isLoggedIn} />;\n    }\n  }\n\n  render() {\n    const { paPromoGiveAway, constants } = this.props;\n\n    if (!constants || paPromoGiveAway === undefined) {\n      return null;\n    }\n\n    const meta = isProduction ? 'PolicyPal, personal accident insurance, singapore personal accident Insurance, PA insurance, accident insurance, accident insurance singapore, personal accident' : '';\n    return (\n      <Fragment>\n        <Helmet>\n          <meta name=\"keywords\" content={meta} />\n          <title>PolicyPal 2.0 - Personal Accident Insurance</title>\n          <meta name=\"title\" content=\"PolicyPal 2.0 - Personal Accident Insurance\" />\n          <meta name=\"description\" content=\"Browse products for personal accident insurance.\" />\n        </Helmet>\n        {/* {\n          formState !== FORMSTATES.MAIN ?\n            <Prompt\n              when={true}\n              message=\"Are you sure you want to leave current page?\"\n            />\n          :\n            null\n        } */}\n        {this.renderStepProgress()}\n        {this.renderPAForms()}\n        <RefreshTimer ref={(node) => {\n            if (!this.refresher) {\n              node.invokeNewTimer();\n            }\n            this.refresher = node;\n          }}\n        />\n      </Fragment>\n    );\n  }\n}\n\nPetRouteContainer.defaultProps = {\n  userDetails: null,\n  charged: null,\n  paPromoGiveAway: undefined,\n  constants: null,\n};\n\nPetRouteContainer.propTypes = {\n  clearData: PropTypes.func.isRequired,\n  resetCompare: PropTypes.func.isRequired,\n  getPromoGiveaways: PropTypes.func.isRequired,\n  resetInsuranceForm: PropTypes.func.isRequired,\n  changeForm: PropTypes.func.isRequired,\n  resetStoreForm: PropTypes.func.isRequired,\n  userDetails: PropTypes.object,\n  formState: PropTypes.number.isRequired,\n  charged: PropTypes.bool,\n  paPromoGiveAway: PropTypes.object,\n  constants: PropTypes.object,\n  history: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  paPromoGiveAway: state.insurance.promoGiveaways.pa,\n  formState: state.insurance.formState,\n  constants: state.insurance.constants,\n  charged: state.insurance.charged,\n  userDetails: state.userDetails.data,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeForm: (form, key, value) => (\n    dispatch(change(form, key, value))\n  ),\n  resetInsuranceForm: () => (\n    dispatch(resetInsuranceForm())\n  ),\n  resetStoreForm: form => (\n    dispatch(reset(form))\n  ),\n  getPromoGiveaways: () => {\n    dispatch(getPromoGiveaways('pa'));\n  },\n  resetCompare: () => {\n    dispatch(resetCompare());\n  },\n  clearData: () => {\n    dispatch(clearPAData());\n  },\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PetRouteContainer));\n","module.exports = __webpack_public_path__ + \"static/media/Avatar.b01356d4.svg\";","/**\n * MultiCompareInner.js\n * Multi Compare view with different insurers\n * Contains the main policy type tab view logic\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Row } from 'reactstrap';\n\nimport TabView from '../../Templates/TabView/TabView';\nimport CompareView from '../../Templates/CompareView/CompareView';\nimport ChangeInitialFormData from '../../Templates/ChangeInitialFormData/ChangeInitialFormData';\n\nimport Enquiry from '../../Templates/Enquiry/Enquiry';\n\nimport { setPlanType, setSelectedIndex } from '../../../actions/compareActions';\n\n// The default tabs array\nconst resultToMatch = ['basic', 'essential', 'elite', 'default'];\n\nclass MultiCompareInner extends Component {\n  /**\n   * Lifecycle Method - getDerivedStateFromProps\n   */\n  static getDerivedStateFromProps(nextProps, prevState) {\n    // Goes here first before did mount\n    // Get new policy available policy types\n    if (nextProps.data.policyTypes !== prevState.policyTypes) {\n      return ({\n        policyTypes: nextProps.data.policyTypes,\n      });\n    }\n\n    return null;\n  }\n\n  /**\n   * Lifecycle Method - constructor\n   */\n  constructor(props) {\n    super(props);\n\n    const { data } = this.props;\n    // tabIndex - The current tab index in effect\n    // currentTab - The name of the current tab\n    // tabs - The tabs array data\n    // policyTypes - The possible policy types to display\n    this.state = {\n      tabIndex: 0,\n      currentTab: null,\n      tabs: null,\n      policyTypes: data.policyTypes,\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.renderTabs = this.renderTabs.bind(this);\n  }\n\n  /**\n   * Lifecycle Method - componentDidMount\n   */\n  componentDidMount() {\n    // Render inital tabs\n    const tabs = this.renderTabs(null, true);\n    // Set initial plan type\n    this.props.setPlanType(_.lowerCase(tabs.currentTab));\n  }\n\n  /**\n   * Lifecycle Method - shouldComponentUpdate\n   */\n  shouldComponentUpdate(nextProps, nextState) {\n    const { policyTypes, tabs, currentTab } = this.state;\n    const { data } = this.props;\n\n    // Render new tabs if policy types are changed\n    if (!_.isEqual(policyTypes, nextState.policyTypes)) {\n      this.renderTabs(nextState.policyTypes);\n    }\n\n    // Update only when tabs or data are updated\n    return tabs !== nextState.tabs ||\n          currentTab !== nextState.currentTab ||\n          data !== nextProps.data;\n  }\n\n  /**\n   * Lifecycle Method - componentDidUpdate\n   */\n  componentDidUpdate(prevProps, prevState) {\n    const { tabs, tabIndex } = this.state;\n    const { selectedIndex, initialIndex } = this.props;\n\n    // If new tabs\n    if (tabs !== prevState.tabs) {\n      if (this.categoryTab && this.categoryTab.wrappedInstance) {\n        // If using back previous selected index and not the same state as local index\n        const isCameFromBackButton = selectedIndex && selectedIndex !== tabIndex;\n        // If this is the first time user enter compare view\n        const isFirstTime = selectedIndex === null && initialIndex;\n\n        if (isCameFromBackButton || isFirstTime) {\n          const currIncomingIndex = isCameFromBackButton ? selectedIndex : initialIndex;\n          // Check if previous selected index is still within range\n          const tabIndexToUse = currIncomingIndex < tabs.length ? currIncomingIndex : 0;\n          // Go to the tab and set new state;\n          this.categoryTab.wrappedInstance.goToIndex(tabIndexToUse, true);\n          this.setState({ tabIndex: tabIndexToUse });\n\n          // Set index to store\n          this.props.setSelectedIndex(tabIndexToUse);\n          return;\n        }\n\n        // This happens when tabs are not the same when changing form within\n        // compare view. It will try to go to the last selected plan type\n        this.categoryTab.wrappedInstance.goToIndex(tabIndex);\n      }\n    }\n  }\n\n  /**\n   * When clicked on main tabs\n   *\n   * @param {string} type - Selected plan type\n   * @param {number} index - Tab index\n   */\n  handleTabClick(type, index) {\n    // Set current plan type\n    this.setState({\n      currentTab: type,\n    });\n\n    this.props.setPlanType(type);\n    this.props.setSelectedIndex(index);\n  }\n\n  /**\n   * Render Main tabs\n   *\n   * @param {array} policyTypes - The avaliable policy types\n   * @param {bool} isInitial - If is initial first time load\n   */\n  renderTabs(policyTypes = null, isInitial = false) {\n    const { policyTypes: oldPolicyTypes, currentTab } = this.state;\n    const { planImages } = this.props;\n\n    // Use new policy types if avaliable\n    const policyTypesToUse = policyTypes || oldPolicyTypes;\n\n    // The tab index\n    let index = 0;\n\n    // Match possible policy types to default types,\n    // with positioning in consideration\n    const tabs = _.reduce(resultToMatch, (result, type) => {\n      if (_.findIndex(policyTypesToUse, planType => planType === type) !== -1) {\n        const theIndex = index;\n        const image = planImages ? planImages[type] : null;\n        // Set desc, image, and onClick for the tab\n        result.push({\n          desc: _.startCase(type),\n          img: image,\n          onClick: () => {\n            this.handleTabClick(type, theIndex);\n          },\n        });\n        index += 1;\n      }\n      return result;\n    }, []);\n\n    // Default currenTab name is from first item\n    let tabInfo = { currentTab: _.lowerCase(tabs[0].desc) };\n\n    // If tabs is changed while navigating in compare view\n    if (!isInitial) {\n      // Try to find if the old tab name still exists in new one\n      const currentTabIndex = _.findIndex(tabs, tab => _.lowerCase(tab.desc) === currentTab);\n      // Use 0 if no longer exists\n      const tabIndexToUse = currentTabIndex !== -1 ? currentTabIndex : 0;\n      // New tab\n      const newTab = _.lowerCase(tabs[tabIndexToUse].desc);\n      // Set new tab info\n      tabInfo = {\n        tabIndex: tabIndexToUse,\n        currentTab: newTab,\n      };\n\n      // Set store data\n      this.props.setPlanType(newTab);\n      this.props.setSelectedIndex(tabIndexToUse);\n    }\n\n    // Return tabs\n    const result = {\n      ...tabInfo,\n      tabs,\n    };\n\n    this.setState(result);\n\n    return result;\n  }\n\n  /**\n   * Render\n   */\n  render() {\n    const {\n      currentTab,\n      tabs,\n    } = this.state;\n\n    const {\n      data,\n      scrollPopUpCallback,\n      submitCallback,\n      editForm,\n      form,\n      buttonDesc,\n      forceFixedOnDesktop,\n      category,\n    } = this.props;\n\n    // console.log(plansData);\n    if (!data || !tabs || !currentTab) {\n      return null;\n    }\n\n    const tabStyle = currentTab === 'default' ? 'inner-form-no-tabs' : '';\n\n    return (\n      <Fragment>\n        <Row className={`inner-form-container ${tabStyle} inner-form-extra-padding`} noGutters>\n          <TabView\n            tabs={tabs}\n            isDataFadeOnly\n            isDisableDropdown\n            big\n            name={`${form}-tab`}\n            ref={node => this.categoryTab = node}\n          >\n            {[<CompareView\n              category={category}\n              key=\"overview\"\n              className=\"overview-container-padding\"\n              notAccordion\n              data={data}\n              currentTab={currentTab}\n              scrollPopUpCallback={scrollPopUpCallback}\n              productChangable\n              editForm={\n                <ChangeInitialFormData\n                  submitCallback={submitCallback}\n                  form={form}\n                  headerValue={editForm.headerValue}\n                  valuesToListen={editForm.valuesToListen}\n                  conditions={editForm.conditions}\n                >\n                  {editForm.editDetail}\n                </ChangeInitialFormData>\n              }\n              buttonDesc={buttonDesc}\n              forceFixedOnDesktop={forceFixedOnDesktop}\n            />]}\n          </TabView>\n          <Enquiry />\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\nMultiCompareInner.defaultProps = {\n  initialIndex: 0,\n  selectedIndex: null,\n  data: null,\n  planImages: null,\n  buttonDesc: null,\n  forceFixedOnDesktop: false,\n  category: null,\n};\n\nMultiCompareInner.propTypes = {\n  initialIndex: PropTypes.number,\n  selectedIndex: PropTypes.number,\n  setSelectedIndex: PropTypes.func.isRequired,\n  setPlanType: PropTypes.func.isRequired,\n  data: PropTypes.object,\n  planImages: PropTypes.object,\n  scrollPopUpCallback: PropTypes.func.isRequired,\n  submitCallback: PropTypes.func.isRequired,\n  editForm: PropTypes.object.isRequired,\n  form: PropTypes.string.isRequired,\n  buttonDesc: PropTypes.string,\n  forceFixedOnDesktop: PropTypes.bool,\n  category: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n  selectedIndex: state.compare.selectedIndex,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setSelectedIndex: (index) => {\n    dispatch(setSelectedIndex(index));\n  },\n  setPlanType: (type) => {\n    dispatch(setPlanType(type));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultiCompareInner);\n","/**\n * MultiCompareView.js\n * Multi Compare view with different insurers\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { parseData } from '../../../actions/insuranceActions';\nimport { setSelectedInsurers } from '../../../actions/compareActions';\nimport { setLoading, clearLoading } from '../../../actions/loadingScreenActions';\nimport { setRestrictionPopup } from '../../../actions/restrictionsActions';\nimport MultiCompareInner from './MultiCompareInner';\n\nclass MultiCompareView extends Component {\n  /**\n   * Lifecycle Method - getDerivedStateFromProps\n   */\n  static getDerivedStateFromProps(nextProps, prevState) {\n    try {\n      const {\n        currentInsurers,\n      } = prevState;\n\n      const {\n        plansData,\n        validInsurersList,\n        setFormState,\n        loadingEnd,\n        mainForm,\n        setSelectedPlanData,\n        trackingTags,\n      } = nextProps;\n\n      if (plansData && plansData[0] === 'INVALID') {\n        return null;\n      }\n\n      // If plansData and validInsurersList are retrieved, parse data for display\n      if (validInsurersList && plansData) {\n        let newDefaultInsurers = currentInsurers || {};\n        if (!currentInsurers && plansData) {\n          newDefaultInsurers = _.map(plansData, plan => plan.info.insurer_slug);\n          newDefaultInsurers = newDefaultInsurers.slice(0, 3);\n          nextProps.setSelectedInsurers(newDefaultInsurers);\n        }\n\n        return {\n          parsedData: parseData(\n            plansData,\n            validInsurersList,\n            newDefaultInsurers,\n            mainForm.trip_type,\n            () => {\n              setFormState();\n            },\n            setSelectedPlanData,\n            loadingEnd,\n            nextProps.setRestrictionPopup,\n            null,\n            trackingTags,\n          ),\n          currentInsurers: newDefaultInsurers,\n        };\n      }\n    } catch (error) {\n      return null;\n    }\n\n    return null;\n  }\n\n  /**\n   * Lifecycle Method - constructor\n   */\n  constructor(props) {\n    super(props);\n\n    const {\n      mainForm,\n      parseForm,\n      getPlans,\n      getInsurersList,\n      loading,\n      defaultInsurers,\n      plansData,\n      validInsurersList,\n      selectedInsurers,\n      setSelectedPlanData,\n      loadingEnd,\n      setFormState,\n      loadingFailBackState,\n      clearData,\n      trackingTags,\n    } = this.props;\n\n    try {\n      // If fresh init\n      if (!plansData || !validInsurersList) {\n        // Initally, get the params from mainform and default insurers\n        const parsedParams = parseForm(mainForm, defaultInsurers);\n\n        // Set loading\n        loading(() => {\n          clearData();\n          loadingFailBackState();\n        }, 'No available plans found.', 30000, '');\n\n        // Get plans and valid insurers list\n        getPlans(parsedParams);\n        getInsurersList(parsedParams);\n\n        // Set initial default insurers\n        this.props.setSelectedInsurers(defaultInsurers);\n\n        // currentInsurers: Current selected list of insurers\n        // parsedData: The parsed data to display\n        // hoveredIndex: The current hovered index on the insurer selection dropdown, default is 0\n        this.state = {\n          currentInsurers: defaultInsurers,\n          parsedData: null,\n        };\n      } else {\n        // Set existing selected insurers and get old parsed data\n        // (Will reach this condition when using the back button)\n        this.state = {\n          currentInsurers: selectedInsurers,\n          parsedData: parseData(\n            plansData,\n            validInsurersList,\n            selectedInsurers,\n            mainForm.trip_type,\n            () => setFormState(),\n            setSelectedPlanData,\n            loadingEnd,\n            this.props.setRestrictionPopup,\n            null,\n            trackingTags,\n          ),\n        };\n      }\n    } catch (error) {\n      // eslint-disable-next-line\n    }\n\n    this.getNewData = this.getNewData.bind(this);\n    this.onInsurerClick = this.onInsurerClick.bind(this);\n  }\n\n  componentDidUpdate() {\n    const {\n      plansData,\n      loadingEnd,\n      loading,\n      clearData,\n      loadingFailBackState,\n    } = this.props;\n\n    if (plansData && plansData[0] === 'INVALID') {\n      loadingEnd();\n      if (!this.isLoading) {\n        this.isLoading = true;\n        setTimeout(() =>\n          loading(() => {\n            clearData();\n            loadingFailBackState();\n            this.isLoading = false;\n          }, 'No available plans found.', 50, ''), 500);\n      }\n    }\n  }\n  /**\n   * Lifecycle Method - shouldComponentUpdate\n   */\n  /* shouldComponentUpdate(nextProps, nextState) {\n    const { parsedData } = this.state;\n\n    // Render only is new or policyTypes changed\n    return !(parsedData && nextState.parsedData) ||\n          !_.isEqual(parsedData.policyTypes, nextState.parsedData.policyTypes);\n  } */\n\n  /**\n   * Handle selection on insurer list\n   *\n   * @param {object} data - The insurer list item data\n   */\n  onInsurerClick(data, hoveredIndex) {\n    // parsedData: The parsed data to display\n    const { parsedData } = this.state;\n\n    // Remap current insurers as sometimes when change form data, the insurers\n    // can be less than 3.\n    // console.log(parsedData.selectedInsurers, hoveredIndex);\n    const currentInsurers = _.reduce(parsedData.selectedInsurers, (result, insurer) => {\n      if (insurer) {\n        result.push(insurer.insurerSlug);\n      }\n      return result;\n    }, []);\n\n    // Change insurer of current selected position\n    currentInsurers[hoveredIndex] = data.insurer_slug;\n\n    // Set current insurers\n    this.setState({\n      currentInsurers,\n    });\n\n    // Set current insurers in store\n    this.props.setSelectedInsurers(currentInsurers);\n\n    // Get new compare data based on the new selected insurers\n    this.getNewData(currentInsurers);\n  }\n\n  /**\n   * Get new compare data.\n   * Used when changing insurers or changing form fields.\n   *\n   * @param {array} incomingInsurers - selected insurers\n   */\n  getNewData(incomingInsurers = null) {\n    const { currentInsurers } = this.state;\n    const {\n      loading,\n      getPlans,\n      getInsurersList,\n      clearData,\n      mainForm,\n      parseForm,\n      loadingFailBackState,\n    } = this.props;\n\n    // If init, use default, else the current array\n    const insurerToUse = incomingInsurers || currentInsurers;\n    // Parse the form for params\n    const parsedParams = parseForm(mainForm, insurerToUse);\n    // Clear data in store first, so it will detect as fresh props from store\n    clearData();\n    // Set loading screen\n    loading(() => {\n      clearData();\n      loadingFailBackState();\n    }, 'No available plans found.', 30000, '');\n    // Get plans and insurer lists\n    getPlans(parsedParams);\n    getInsurersList(parsedParams);\n  }\n\n  /**\n   * Render\n   */\n  render() {\n    try {\n      const { parsedData } = this.state;\n      const {\n        editForm,\n        form,\n        planImages,\n        initialIndex,\n        buttonDesc,\n        forceFixedOnDesktop,\n        category,\n      } = this.props;\n\n      // Do not render if no data\n      if (!parsedData) {\n        return null;\n      }\n\n      // console.log(parsedData);\n      return (\n        <MultiCompareInner\n          category={category}\n          initialIndex={initialIndex}\n          planImages={planImages}\n          data={parsedData}\n          form={form}\n          editForm={editForm}\n          scrollPopUpCallback={this.onInsurerClick}\n          submitCallback={this.getNewData}\n          buttonDesc={buttonDesc}\n          forceFixedOnDesktop={forceFixedOnDesktop}\n        />\n      );\n    } catch (error) {\n      return null;\n    }\n  }\n}\n\nMultiCompareView.defaultProps = {\n  initialIndex: 0,\n  plansData: null,\n  validInsurersList: null,\n  selectedInsurers: null,\n  trackingTags: null,\n  planImages: null,\n  defaultInsurers: null,\n  buttonDesc: null,\n  forceFixedOnDesktop: false,\n  category: null,\n};\n\nMultiCompareView.propTypes = {\n  setSelectedInsurers: PropTypes.func.isRequired,\n  mainForm: PropTypes.object.isRequired,\n  parseForm: PropTypes.func.isRequired,\n  getPlans: PropTypes.func.isRequired,\n  getInsurersList: PropTypes.func.isRequired,\n  clearData: PropTypes.func.isRequired,\n  loading: PropTypes.func.isRequired,\n  defaultInsurers: PropTypes.array,\n  editForm: PropTypes.object.isRequired,\n  form: PropTypes.string.isRequired,\n  planImages: PropTypes.object,\n  initialIndex: PropTypes.number,\n  plansData: PropTypes.array,\n  validInsurersList: PropTypes.array,\n  selectedInsurers: PropTypes.array,\n  setSelectedPlanData: PropTypes.func.isRequired,\n  loadingEnd: PropTypes.func.isRequired,\n  setFormState: PropTypes.func.isRequired,\n  setRestrictionPopup: PropTypes.func.isRequired,\n  loadingFailBackState: PropTypes.func.isRequired,\n  trackingTags: PropTypes.object,\n  buttonDesc: PropTypes.string,\n  forceFixedOnDesktop: PropTypes.bool,\n  category: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n  selectedInsurers: state.compare.selectedInsurers,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loading: (callBack, errorMsg, time, mainMsg) => {\n    dispatch(setLoading(callBack, errorMsg, time, mainMsg));\n  },\n  loadingEnd: () => {\n    dispatch(clearLoading());\n  },\n  setRestrictionPopup: (data) => {\n    dispatch(setRestrictionPopup(data));\n  },\n  setSelectedInsurers: (array) => {\n    dispatch(setSelectedInsurers(array));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultiCompareView);\n","/**\n * Spinner.js\n * Custom Spinner\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, getFormValues } from 'redux-form';\nimport PropTypes from 'prop-types';\n\nimport Plus from 'assets/images/forms/plus.svg';\nimport Minus from 'assets/images/forms/minus.svg';\n\nimport FormInputWrapper from '../FormInputWrapper/FormInputWrapper';\n\nimport './Spinner.scss';\n\n/**\n * Custom Button class\n */\nclass Spinner extends Component {\n  constructor(props) {\n    super(props);\n\n    const { initial } = this.props;\n\n    this.state = {\n      oldValue: initial,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleOnInputKeyDown = this.handleOnInputKeyDown.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      name,\n      formStore,\n      change,\n      initial,\n    } = this.props;\n\n    if (!(formStore && formStore[name])) {\n      change(name, initial);\n      return;\n    }\n\n    this.setState({\n      oldValue: formStore[name],\n    });\n  }\n\n  handleChange(event, isMinus) {\n    const { oldValue } = this.state;\n    const {\n      max,\n      min,\n      name,\n      increment,\n      change,\n    } = this.props;\n\n    const newVal = isMinus ? Math.max(oldValue - increment, min) :\n      Math.min(oldValue + increment, max);\n\n    this.setState({\n      oldValue: newVal,\n    });\n\n    change(name, newVal);\n    event.preventDefault();\n  }\n\n  handleOnInputKeyDown(event) {\n    if (event.keyCode === 13) {\n      this.handleInputChange();\n      event.preventDefault();\n    }\n  }\n\n  handleInputChange() {\n    const { oldValue } = this.state;\n\n    const {\n      min,\n      max,\n      name,\n      change,\n    } = this.props;\n\n    const newVal = Math.floor(this.inputField.value);\n    if (!Number.isNaN(newVal) && min <= newVal && newVal <= max) {\n      change(name, newVal);\n    } else {\n      change(name, oldValue);\n    }\n  }\n\n  render() {\n    const {\n      name,\n      unit,\n      desc,\n      extraInfo,\n      errorString,\n      disableTyping,\n    } = this.props;\n\n    const errorStyle = errorString ? 'error' : '';\n\n    return (\n      <FormInputWrapper\n        desc={desc}\n        ref={node => (this.formParent = node)}\n        extraInfo={extraInfo}\n        errorString={errorString}\n      >\n        <div\n          className={`spinner-container ${errorStyle}`}\n          tabIndex={0}\n          role=\"button\"\n        >\n          <button\n            onClick={event => this.handleChange(event, true)}\n            tabIndex={-1}\n          >\n            <img src={Minus} alt=\"minus.svg\" />\n          </button>\n          <div\n            className=\"inner-container\"\n            onBlur={this.handleInputChange}\n          >\n            <Field\n              disabled={disableTyping}\n              name={name}\n              component=\"input\"\n              size=\"3\"\n              tabIndex={-1}\n              onKeyDown={event => this.handleOnInputKeyDown(event)}\n              ref={node => (this.inputField = node)}\n            />\n            <div className=\"unit-container\">\n              <p>{unit}</p>\n            </div>\n          </div>\n          <button\n            onClick={event => this.handleChange(event, false)}\n            tabIndex={-1}\n          >\n            <img src={Plus} alt=\"plus.svg\" />\n          </button>\n        </div>\n      </FormInputWrapper>\n    );\n  }\n}\n\nSpinner.defaultProps = {\n  unit: '',\n  desc: null,\n  formStore: null,\n  extraInfo: null,\n  errorString: null,\n  disableTyping: false,\n};\n\n\nSpinner.propTypes = {\n  initial: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  min: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  increment: PropTypes.number.isRequired,\n  change: PropTypes.func.isRequired,\n  unit: PropTypes.string,\n  desc: PropTypes.string,\n  formStore: PropTypes.object,\n  extraInfo: PropTypes.object,\n  errorString: PropTypes.string,\n  disableTyping: PropTypes.bool,\n};\n\n\nconst mapStateToProps = (state, ownProps) => ({\n  formStore: (getFormValues(ownProps.form)(state)),\n});\n\nexport default connect(mapStateToProps, null)(Spinner);\n","module.exports = __webpack_public_path__ + \"static/media/Chest.8cdb5cd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.809f9c39.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus.779e715c.svg\";","/**\n * PACheckoutContainer.js\n * Checkout Container for PA\n *\n * @version 0.0.1\n * @author [Wilson](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getFormValues } from 'redux-form';\nimport PropTypes from 'prop-types';\n\nimport { getSessionParams } from '../../actions/paActions';\nimport { setInsuranceFormState, FORMSTATES } from '../../actions/insuranceActions';\nimport CheckoutWrapper from '../../components/Templates/Checkout/CheckoutWrapper';\nimport { gaTag, gaEvent, ampTag } from '../../lib/tagFunctions';\n\nimport {\n  compactCheckoutAttributes,\n  getCheckoutParamsWording,\n  getCheckoutHeaderDataCoverage,\n  getCompactSubDetails,\n} from '../../lib/helperFunctions';\n\nclass PACheckoutContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    const {\n      paForm,\n      paDetailsForm,\n      selectedPlanData,\n      isAdHoc,\n      adHocData,\n    } = this.props;\n\n    const paramsWording = getCheckoutParamsWording(\n      isAdHoc,\n      adHocData,\n      selectedPlanData,\n      () => getSessionParams(paForm, paDetailsForm, selectedPlanData),\n    );\n\n    const headerCoverage = getCheckoutHeaderDataCoverage('Personal Accident Insurance', isAdHoc, adHocData, selectedPlanData, paramsWording.params);\n    const sessionParams = isAdHoc ? adHocData.data.session_params : paramsWording.params.sessionParams.session_params;\n    const isSpouse = sessionParams.num_adult === '2';\n    let SpouseAttribute = [];\n    let familyMemberText = isAdHoc ? null : '1 Adult';\n    if (isSpouse) {\n      SpouseAttribute = [\n        { title: 'My spouse\\'s occupation', description: sessionParams.family[0].occupation },\n      ];\n      familyMemberText = '2 Adults';\n    }\n\n    const numChildren = isAdHoc ? null : '0';\n\n    this.state = {\n      headerData: headerCoverage.headerData,\n      mainDetails: {\n        title: 'Insurance',\n        attributes: compactCheckoutAttributes([\n          { title: 'Plan type', description: sessionParams.plan_type },\n          { title: 'Family members', description: sessionParams.family_members || familyMemberText },\n          { title: 'Number of children', description: sessionParams.num_children || numChildren },\n          { title: 'My occupation', description: sessionParams.occupation },\n          ...SpouseAttribute,\n          { title: 'Start Date', description: sessionParams.start_date },\n          { title: 'End Date', description: sessionParams.end_date },\n          // { title: 'Coverage', description: headerCoverage.coverage },\n        ]),\n      },\n      subDetails: this.getSubDetails(paramsWording.params.sessionParams),\n      ...paramsWording,\n    };\n  }\n\n  componentDidMount() {\n    const { setFormState } = this.props;\n    setFormState(FORMSTATES.CHECKOUT.index);\n\n    gaTag({\n      page_title: 'PersonalAccident - Checkout',\n      page_path: '/personal-accident/checkout',\n    });\n    ampTag('PAReviewS');\n  }\n\n  getSubDetails(sessionParams) {\n    const isMyself = sessionParams.session_params.plan_type === 'Myself';\n\n    const myself = getCompactSubDetails({\n      key: 'Myself',\n      leftDetail: {\n        title: 'Details',\n        attributes: compactCheckoutAttributes([\n          { title: 'Email', description: sessionParams.session_params.email },\n          { title: 'Family Name', description: sessionParams.session_params.family_name },\n          { title: 'Given Name', description: sessionParams.session_params.given_name },\n          { title: 'Full Name', description: sessionParams.session_params.full_name },\n          { title: 'Nationality', description: sessionParams.session_params.nationality },\n          { title: 'ID type', description: sessionParams.session_params.id_type },\n          { title: 'ID number', description: sessionParams.session_params.nric },\n          { title: 'Race', description: sessionParams.session_params.race },\n          { title: 'Gender', description: sessionParams.session_params.gender },\n          { title: 'Date of birth', description: sessionParams.session_params.birth_date },\n          { title: 'Marital Status', description: sessionParams.session_params.marital_status },\n          { title: 'Address', description: sessionParams.session_params.address },\n          { title: 'Unit no', description: sessionParams.session_params.unit_no },\n          { title: 'Postal', description: sessionParams.session_params.postal },\n          { title: 'Mobile number', description: sessionParams.session_params.mobile_number },\n        ]),\n      },\n      rightDetail: {\n        title: 'Work Details',\n        attributes: compactCheckoutAttributes([\n          { title: 'Occupation', description: sessionParams.session_params.occupation },\n          { title: 'Industry', description: sessionParams.session_params.industry },\n        ]),\n      },\n    });\n\n    const familyData = [];\n    if (!isMyself && sessionParams.session_params.family) {\n      let childCount = 1;\n      for (let i = 0; i < sessionParams.session_params.family.length; ++i) {\n        const isSpouse = i === 0 && sessionParams.session_params.num_adult === '2';\n        const data = sessionParams.session_params.family[i];\n\n        let rightDetail = null;\n        if (isSpouse) {\n          childCount = 0;\n          rightDetail = {\n            title: 'Work Details',\n            attributes: compactCheckoutAttributes([\n              { title: 'Occupation', description: data.occupation },\n              { title: 'Industry', description: data.industry },\n            ]),\n          };\n        } else {\n          rightDetail = {\n            title: 'Education Details',\n            attributes: compactCheckoutAttributes([\n              { title: 'Full school education', description: data.full_school_education },\n            ]),\n          };\n        }\n\n        const key = isSpouse ? 'Spouse' : `Children ${childCount + i}`;\n\n        familyData.push(getCompactSubDetails({\n          key,\n          leftDetail: {\n            title: 'Details',\n            attributes: compactCheckoutAttributes([\n              { title: 'Full Name', description: data.full_name },\n              { title: 'Nationality', description: data.nationality },\n              { title: 'ID type', description: data.id_type },\n              { title: 'ID number', description: data.nric },\n              { title: 'Relationship', description: data.relationship },\n              { title: 'Gender', description: data.gender },\n              { title: 'Date of birth', description: data.birth_date },\n            ]),\n          },\n          rightDetail,\n        }));\n      }\n    }\n\n    return [myself, ...familyData];\n  }\n\n  render() {\n    const {\n      headerData,\n      mainDetails,\n      subDetails,\n      wording,\n      params,\n    } = this.state;\n\n    const {\n      isLoggedIn,\n      charged,\n      history,\n      isAdHoc,\n      adHocData,\n      sessionId,\n      setFormState,\n    } = this.props;\n\n    return (\n      <CheckoutWrapper\n        headerData={headerData}\n        mainDetails={mainDetails}\n        subDetails={subDetails}\n        sessionId={sessionId}\n        isLoggedIn={isLoggedIn}\n        charged={charged}\n        backToDetails={() => {\n          history.goBack();\n        }}\n        wording={wording}\n        isAdHoc={isAdHoc}\n        adHocData={adHocData}\n        params={params}\n        category=\"pa\"\n        trackingTags={{\n          payment: (data) => {\n            gaEvent('PersonalAccident - CheckoutPage_ProceedPayment', {\n              event_category: 'PersonalAccident',\n              event_label: 'PersonalAccident - CheckoutPage_ProceedPayment',\n            });\n            ampTag('PAProceedPayA', {\n              cashback: data.rewardsID !== null,\n              promo: data.promoCode !== null && data.promoCode !== '',\n            });\n          },\n          receipt: () => {\n            if (!isAdHoc) {\n              setFormState(FORMSTATES.SUBMITTED.index);\n              history.push(`/personal-accident${FORMSTATES.SUBMITTED.path}`);\n            }\n            gaTag({\n              page_title: 'PersonalAccident - Receipt',\n              page_path: '/personal-accident/Receipt',\n            });\n            ampTag('PAConfirmationS');\n          },\n        }}\n      />\n    );\n  }\n}\n\nPACheckoutContainer.defaultProps = {\n  charged: null,\n  sessionId: null,\n  adHocData: null,\n  isAdHoc: false,\n  paForm: null,\n  paDetailsForm: null,\n  selectedPlanData: null,\n  isLoggedIn: false,\n};\n\nPACheckoutContainer.propTypes = {\n  charged: PropTypes.bool,\n  sessionId: PropTypes.string,\n  isLoggedIn: PropTypes.bool,\n  paForm: PropTypes.object,\n  paDetailsForm: PropTypes.object,\n  selectedPlanData: PropTypes.object,\n  adHocData: PropTypes.object,\n  isAdHoc: PropTypes.bool,\n  history: PropTypes.object.isRequired,\n  setFormState: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const sessionId = ownProps.isAdHoc ? ownProps.sessionId : state.insurance.sessionId;\n\n  return ({\n    paForm: getFormValues('pa')(state),\n    paDetailsForm: getFormValues('pa-detail')(state),\n    selectedPlanData: state.pa.selectedPlanData,\n    sessionId,\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setFormState: (state) => {\n    dispatch(setInsuranceFormState(state));\n  },\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PACheckoutContainer));\n","module.exports = __webpack_public_path__ + \"static/media/policypal-personal-accident-insurance-1.deeeeedc.svg\";"],"sourceRoot":""}