{"version":3,"sources":["components/Templates/APILoader/APILoader.js","containers/Travel/TravelRouteContainer.js","components/Templates/PopupWithText/PopupWithText.js","components/Templates/RefreshTimer/RefreshTimer.js","components/Templates/LoadingScreenV2/LogoSlider.js","components/Templates/LoadingScreenV2/LoadingScreenV2.js","components/FormsNew/FormInputWrapper/FormInputWrapper.js","components/FormsNew/DropDown/DropDownV2.js","components/FormsNew/Slider/SliderNew.js","components/FormsV3/Slider/SliderNew.js","components/Templates/StepProgressBar/StepProgressBarNew.js"],"names":["APILoader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showLoading","showLoadingError","errorMsg","errorCallback","handleAPI","bind","assertThisInitialized","show","Promise","resolve","_this2","setState","_this3","apiCallback","overwriteWarning","clearInterval","showLoadigInterval","setInterval","_this4","result","showError","console","log","_context3","t0","_this$state","react_default","a","createElement","react","LoadingScreenV2","isLoading","isLoadingError","message","noLogos","Component","defaultProps","TravelMain","Loadable","loader","all","__webpack_require__","e","then","loading","modules","TravelChoosePlan","TravelDetail","TravelCheckout","TravelRouteContainer","_this$props","match","isXploraJapan","history","params","insurer","product","newValues","objectSpread","defaultValues","countries","type","value","display_name","region","formIndex","selectedArray","selectionButtonIndex","planType","bypassParams","values","errors","detailValues","detailErrors","plansData","selectedPlanData","charged","apiLoader","isInitialLoad","renderStepProgress","renderTravelForms","setCharged","setSelectedArray","setSelectionButtonIndex","setPlanType","setPlansData","setSelectedPlanData","changeUserDetails","handleProductPage","onChangeValue","onChangeDetailValue","onUpdateValues","validateForm","validateDetailsForm","nextProps","prevState","isMounted","formState","routeResult","routeHandler","_this$props2","setFormState","travelPromoGiveAway","doGetPromoGiveaways","FORMSTATES","CHOOSEPLAN","index","push","concat","path","undefined","window","scrollTo","prevProps","userDetails","_","isEqual","name","fields","error","newError","validateFormValue","defineProperty","detailName","array","_this5","newPlansData","insurances_all","toConsumableArray","insurances","insurances_prex","each","plansArray","plan","info","insurer_slug","product_slug","insurer_product_slug","callback","specialFields","newErrors","_this6","isEmpty","formName","_this7","_this$state5","adult_0","email","given_name","firstName","family_name","surname","id_type","nric","nationality","birth_date","moment","dateOfBirth","toDate","gender","marital_status","race","occupation","mobile_number","contact","address","unit_no","postal","postal_code","insurerSlug","productSlug","_this$state6","StepProgressBarNew","inputList","form","stateList","DETAILFORM","CHECKOUT","stateDescriptions","main","_this$state7","mainFields","isLoggedIn","assign","piggyCallback","SUBMITTED","_this8","_this$state8","constants","checkoutStyle","isProduction","Page","id","className","RefreshTimer","ref","node","refresher","invokeNewTimer","Templates_APILoader_APILoader","withRouter","connect","insurance","promoGiveaways","travel","data","login","dispatch","setInsuranceFormState","getPromoGiveaways","PopupWithText","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","onConfirm","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","text","jsx","useConfirm","openPopupWithText","_Users_wilson_policypal_web_reactjs_2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","arguments","length","setTimeout","popupRef","openPopup","showCancelButton","hideCloseButton","react__WEBPACK_IMPORTED_MODULE_6___default","_Popup_Popup__WEBPACK_IMPORTED_MODULE_8__","r","react__WEBPACK_IMPORTED_MODULE_6__","components_FormsV3_Button_Button__WEBPACK_IMPORTED_MODULE_7__","variant","width","height","onClick","closePopup","oldTime","Date","timeout","setTimer","interval","addEventListener","clearTimeout","removeEventListener","popupTimer","refreshTimer","confirmResult","confirm","timeDiff","location","react__WEBPACK_IMPORTED_MODULE_7___default","react__WEBPACK_IMPORTED_MODULE_7__","_PopupWithText_PopupWithText__WEBPACK_IMPORTED_MODULE_8__","popup","LogoSlider","logos","map","Logos","small","logo","keyFrameLogo","keyframes","_templateObject","AnimatedContainer","styled","div","_templateObject2","renderLogos","key","src","alt","overwriteShowWarning","closeLoading","handleChange","timer","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","loadingStyle","SpinnerAnimation","LoadingScreenV2_LogoSlider","ModalPopup","showModal","closeModal","backdropClassName","header","body","zIndex","footer","Button","FormInputWrapper","errorString","setErrorString","clearErrorString","refValue","extraInfo","desc","children","maxItemsDisplay","mediumHeight","bigHeight","DropDownV2","dropList","placeholderString","size","numItemsDisplay","numItems","maxheight","min","isOpened","listItems","selectedString","listHeight","multipleSelectedElements","listElementsCounter","clientHeight","extraPadding","noTransition","updateDimensions","handleClickOutside","renderListItems","renderTextInput","handleSelectClick","handleOnInputChange","handleSetMultipleSelectedItem","handleDestroySelected","handleInputKeyPress","handleItemKeyPress","handleExit","handleBlur","handleFocus","initialListItems","document","formStore","overrideValue","formValues","constructor","Array","_this$props3","isForm","isElements","isMultiple","newHeight","selectedItemsContainer","childElementCount","getBoundingClientRect","bottom","top","_this$props4","formChange","notForm","valueChangeCallback","inputField","event","wrapperRef","contains","target","isFromFocus","_this$state2","_this$props5","preventDefault","listElements","getAttribute","Math","max","focus","stopPropagation","isOpenOnly","_this$state3","_this$props6","item","_this$state4","newArr","indexOf","selectedContainer","slice","splice","filter","toString","toUpperCase","relatedTarget","inputString","_this$props7","resultString","isError","finalString","some","obj","toLowerCase","style","handleSelectItemClick","role","tabIndex","onKeyDown","onMouseUp","Cross","_this$props8","isDisableTyping","component","placeholder","autoComplete","onChange","disabled","Field","_this$props9","maxWidth","noInternalDesc","noExternalDesc","actualListheight","dropDownOpenStyle","arrowStyle","transitionStyle","listStyle","multipleStyle","isErrorStyle","noInternalDescStyle","titleStyle","marginTop","marginBottom","logoImg","MagnifyGlass","externalDesc","zIndexStyle","FormsNew_FormInputWrapper_FormInputWrapper","formParent","minHeight","onBlur","onFocus","paddingTop","paddingBottom","renderMultipleSelectedElements","onKeyPress","Arrow","lib","listContainer","ownProps","getFormValues","change","marginTopDefault","SLIDERSTATE","ONIDLE","ONDOWN","ONUP","SliderNew","sliderWidth","sliderState","activeIndex","isUseDropDown","renderKnobs","renderSummary","handleResize","handleSliderDown","handleSliderMove","handleSliderUp","storeForm","formStateList","indexToChange","selectedTabString","selectedTabIndex","formStateIndex","findIndex","listState","isProductSlider","hideWidth","isDrop","innerWidth","rect","sliderStart","position","clientX","x","handleClick","len","indexToUse","handleProductSlider","round","newWidth","IDLE","isValidSelection","displayList","inputLength","leftOffset","isProductPassedPage","activeStyle","sliderStyle","dataToUse","descStyle","left","prefix","suffix","valueToUse","knobColor1","knobColor2","DropDown_DropDownV2","slider","onMouseDown","FormsV3_FormInputWrapper_FormInputWrapper","DropDown_DropDown","getStateList","renderDescription","currIndex","s","go","mainDesc","subDesc","sub","reactstrap_es","xs","goBack","formStates","v3Slider","MAIN","noGutters","components_FormsV3_Slider_SliderNew","FormsNew_Slider_SliderNew","setInsurFormState"],"mappings":"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","file":"static/js/travel.3a7fe292.chunk.js","sourcesContent":["/**\n * Checkout.js\n * This is the checkout view that will render the summary\n * of details and handle all the promo, cashback and stripe\n * APIs.\n *\n * There is 2 state to this view. Checkout or receipt. It will\n * toggle accordingly if charged/ahHocCharged.\n *\n * Upon successful payment, it will update the user data again\n * to check if any cashback is used.\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component, Fragment } from 'react';\n// import PropTypes from 'prop-types';\n\nimport LoadingScreenV2 from 'components/Templates/LoadingScreenV2/LoadingScreenV2';\n\nconst defaultMsg = 'Please try again.';\n\nclass APILoader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showLoading: false,\n      showLoadingError: false,\n      errorMsg: null,\n      errorCallback: null,\n    };\n\n    this.handleAPI = this.handleAPI.bind(this);\n    this.showLoading = this.showLoading.bind(this);\n    this.showLoadingError = this.showLoadingError.bind(this);\n  }\n\n  async showLoading(show) {\n    await new Promise((resolve) => { this.setState({ showLoading: show }, resolve); });\n  }\n\n  async showLoadingError(show) {\n    await new Promise((resolve) => { this.setState({ showLoadingError: show }, resolve); });\n  }\n\n  async handleAPI(apiCallback, overwriteWarning = false, errorMsg = null, errorCallback = null) {\n    try {\n      clearInterval(this.showLoadigInterval);\n      this.showLoadigInterval = setInterval(() => this.setState({\n        showLoading: true,\n      }), 300);\n\n      const result = await apiCallback();\n\n      clearInterval(this.showLoadigInterval);\n\n      const showError = overwriteWarning ? false : !result;\n\n      this.setState({\n        showLoadingError: showError,\n        showLoading: showError,\n        errorMsg,\n        errorCallback,\n      });\n      return result;\n    } catch (error) {\n      // eslint-disable-next-line\n      console.log(error);\n    }\n\n    this.setState({\n      showLoadingError: true,\n      showLoading: true,\n      errorMsg,\n      errorCallback,\n    });\n\n    return null;\n  }\n\n  render() {\n    const {\n      showLoading,\n      showLoadingError,\n      errorMsg,\n      errorCallback,\n    } = this.state;\n\n    return (\n      <Fragment>\n        <LoadingScreenV2\n          isLoading={showLoading}\n          isLoadingError={showLoadingError}\n          message={<h5>{errorMsg || defaultMsg}</h5>}\n          showLoading={this.showLoading}\n          showLoadingError={this.showLoadingError}\n          errorCallback={errorCallback}\n          noLogos\n        />\n      </Fragment>\n    );\n  }\n}\n\nAPILoader.defaultProps = {\n};\n\nAPILoader.propTypes = {\n};\n\nexport default APILoader;\n","/**\n * TravelRouteContainer.js\n * The wrapper container for travel\n *\n * @version 0.0.1\n * @author [Wilson](wilson@policypal.com)\n */\nimport window from 'global/window';\nimport _ from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Page from 'components/Page/Page';\nimport Loadable from 'react-loadable';\n\nimport StepProgressBar from 'components/Templates/StepProgressBar/StepProgressBarNew';\nimport RefreshTimer from 'components/Templates/RefreshTimer/RefreshTimer';\n\nimport { getPromoGiveaways, setInsuranceFormState, FORMSTATES } from 'actions/insuranceActions';\nimport { isProduction } from 'lib/tagFunctions';\nimport { routeHandler } from 'lib/helperFunctions';\nimport { validateForm, validateFormValue } from 'lib/validatorsV2';\n\nimport APILoader from 'components/Templates/APILoader/APILoader';\n// import TravelMainContainer from './TravelMainContainer';\n// import TravelChoosePlanContainer from './TravelChoosePlanContainer';\n// import TravelDetailContainer from './TravelDetailContainer';\n// import TravelCheckoutContainer from './TravelCheckoutContainer';\n\n// Default values\nimport { defaultValues } from './Travel.constants';\n\nconst TravelMain = Loadable({\n  loader: () => import(/* webpackChunkName: \"TravelMain\" */ './TravelMainContainer'),\n  loading: () => null,\n  modules: ['TravelMain']\n});\n\nconst TravelChoosePlan = Loadable({\n  loader: () => import(/* webpackChunkName: \"TravelChoosePlan\" */ './TravelChoosePlanContainer'),\n  loading: () => null,\n  modules: ['TravelChoosePlan']\n});\n\nconst TravelDetail = Loadable({\n  loader: () => import(/* webpackChunkName: \"TravelDetailContainer\" */ './TravelDetailContainer'),\n  loading: () => null,\n  modules: ['TravelDetail']\n});\n\nconst TravelCheckout = Loadable({\n  loader: () => import(/* webpackChunkName: \"TravelCheckout\" */ './TravelCheckoutContainer'),\n  loading: () => null,\n  modules: ['TravelCheckout']\n});\n\nclass TravelRouteContainer extends Component {\n  // Route handler\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { formIndex, isMounted } = prevState;\n    const { formState, match, history } = nextProps;\n\n    if (isMounted) {\n      const routeResult = routeHandler('travel', formState, formIndex, match, history);\n      if (routeResult && routeResult.formIndex !== null) {\n        return ({\n          formIndex: routeResult.formIndex,\n        });\n      }\n    }\n\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n    const {\n      match,\n      history,\n    } = this.props;\n\n    // Check if first load is product page\n    const isProductPage = match && match.params && match.params.insurer && match.params.product;\n    // Check if first load if from TM Japan\n    const isXploraJapan = isProductPage && match.params.insurer === 'tokio_marine' && match.params.product === 'xplora_japan';\n\n    // Set default values\n    const newValues = { ...defaultValues };\n    if (isXploraJapan) {\n      newValues.countries = { type: 'multi_select', value: [{ display_name: 'Japan', value: 'Japan' }] };\n      newValues.region = { type: 'select', value: { display_name: 'Asia', value: 'Asia' } };\n    }\n\n    this.state = {\n      formIndex: 0,\n      selectedArray: [null, null, null],\n      selectionButtonIndex: 0,\n      planType: 'essential',\n      bypassParams: { ...match.params },\n      values: newValues,\n      errors: {},\n      detailValues: {},\n      detailErrors: {},\n      plansData: null,\n      selectedPlanData: null,\n      charged: false,\n      apiLoader: null,\n      isInitialLoad: true,\n    };\n\n    // Reset route\n    // history.replace(`/travel${history.location.search}`);\n\n    this.renderStepProgress = this.renderStepProgress.bind(this);\n    this.renderTravelForms = this.renderTravelForms.bind(this);\n\n    this.setCharged = this.setCharged.bind(this);\n    this.setSelectedArray = this.setSelectedArray.bind(this);\n    this.setSelectionButtonIndex = this.setSelectionButtonIndex.bind(this);\n    this.setPlanType = this.setPlanType.bind(this);\n    this.setPlansData = this.setPlansData.bind(this);\n    this.setSelectedPlanData = this.setSelectedPlanData.bind(this);\n\n    this.changeUserDetails = this.changeUserDetails.bind(this);\n    this.handleProductPage = this.handleProductPage.bind(this);\n\n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.onChangeDetailValue = this.onChangeDetailValue.bind(this);\n    this.onUpdateValues = this.onUpdateValues.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.validateDetailsForm = this.validateDetailsForm.bind(this);\n  }\n\n  componentDidMount() {\n    const { bypassParams } = this.state;\n    const {\n      history,\n      setFormState,\n      travelPromoGiveAway,\n      doGetPromoGiveaways,\n    } = this.props;\n\n    // Prefill login details\n    this.changeUserDetails();\n    // Set to mounted\n    this.setState({\n      isMounted: true,\n      apiLoader: this.APILoader,\n    });\n\n    // If is product page, straight away go to choose plan\n    const isProductPage = bypassParams && bypassParams.insurer && bypassParams.product;\n    if (isProductPage) {\n      setFormState(FORMSTATES.CHOOSEPLAN.index);\n      history.push(`/travel${FORMSTATES.CHOOSEPLAN.path}/${bypassParams.insurer}/${bypassParams.product}`);\n    }\n\n    // Get promo giveaway\n    if (travelPromoGiveAway === undefined && this.APILoader) {\n      doGetPromoGiveaways();\n    }\n\n    window.scrollTo(0, 0);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { isInitialLoad } = this.state;\n    const { userDetails } = this.props;\n\n    if (isInitialLoad && _.isEqual(userDetails, prevProps.userDetails)) {\n      this.changeUserDetails();\n    }\n  }\n\n  // Update form values on change\n  async onChangeValue(type, name, value, fields) {\n    const {\n      values,\n      errors,\n    } = this.state;\n\n    try {\n      const error = errors && errors[name];\n      let newError = {};\n\n      if (error) {\n        newError = { [name]: await validateFormValue(name, { type, value }, values, fields) };\n      }\n\n      return new Promise((resolve) => {\n        this.setState({\n          values: {\n            ...values,\n            [name]: { type, value },\n          },\n          errors: { ...errors, ...newError },\n        }, resolve);\n      });\n    } catch (error) {\n      // eslint-disable-next-line\n    }\n\n    return null;\n  }\n\n  async onChangeDetailValue(type, name, value, detailName, fields) {\n    const {\n      detailValues,\n      detailErrors,\n    } = this.state;\n\n    try {\n      const error = detailErrors && detailErrors[detailName] && detailErrors[detailName][name];\n      let newError = {};\n\n      if (error) {\n        newError = { [name]: await validateFormValue(name, { type, value }, detailValues[detailName], fields) };\n      }\n\n      return new Promise((resolve) => {\n        this.setState({\n          detailValues: {\n            ...detailValues,\n            [detailName]: {\n              ...detailValues[detailName],\n              [name]: { type, value },\n            },\n          },\n          detailErrors: {\n            ...detailErrors,\n            [detailName]: {\n              ...detailErrors[detailName],\n              ...newError,\n            },\n          },\n        }, resolve);\n      });\n    } catch (error) {\n      // eslint-disable-next-line\n    }\n\n    return null;\n  }\n\n  async onUpdateValues(values) {\n    await new Promise((resolve) => {\n      this.setState({\n        values,\n      }, resolve);\n    });\n  }\n\n  setSelectedPlanData(selectedPlanData) {\n    this.setState({ selectedPlanData });\n  }\n\n  setSelectedArray(array) {\n    this.setState({ selectedArray: array });\n  }\n\n  setSelectionButtonIndex(index) {\n    this.setState({ selectionButtonIndex: index });\n  }\n\n  setPlanType(planType) {\n    this.setState({ planType });\n  }\n\n  async setCharged(charged) {\n    await new Promise(resolve => this.setState({ charged }, resolve));\n  }\n\n  setPlansData(plansData) {\n    if (!plansData) {\n      this.setState({\n        plansData: null,\n      });\n\n      return;\n    }\n\n    const newPlansData = { ...plansData };\n\n    try {\n      newPlansData.insurances_all = [...plansData.insurances, ...(plansData.insurances_prex || {})];\n\n      _.each(newPlansData, (plansArray) => {\n        _.each(plansArray, (plan) => {\n          if (plan && plan.info && plan.info.insurer_slug && plan.info.product_slug) {\n            // eslint-disable-next-line\n            plan.info.insurer_product_slug = `${plan.info.insurer_slug}_${plan.info.product_slug}`;\n          }\n        });\n      });\n    } catch (error) {\n      // eslint-disable-next-line\n    }\n\n    this.setState({\n      plansData: newPlansData,\n    });\n  }\n\n  async validateForm(callback = null, fields = null, specialFields = null) {\n    const {\n      values,\n      errors,\n    } = this.state;\n\n    let newErrors = { ...errors };\n    try {\n      newErrors = await validateForm(values, null, fields, specialFields);\n    } catch (error) {\n      // eslint-disable-next-line\n    }\n\n    return new Promise((resolve) => {\n      this.setState({\n        errors: newErrors,\n      }, () => {\n        if (_.isEmpty(newErrors)) {\n          if (callback) {\n            callback();\n          }\n          resolve(true);\n        }\n        resolve(false);\n      });\n    });\n  }\n\n  async validateDetailsForm(formName, callback = null, fields = null, specialFields = null) {\n    const {\n      detailValues,\n      detailErrors,\n    } = this.state;\n\n    let newErrors = { ...detailErrors[formName] };\n    try {\n      newErrors = await validateForm(detailValues[formName], null, fields, specialFields);\n    } catch (error) {\n      // eslint-disable-next-line\n    }\n\n    return new Promise((resolve) => {\n      this.setState({\n        detailErrors: {\n          ...detailErrors,\n          [formName]: newErrors,\n        },\n      }, () => {\n        if (_.isEmpty(newErrors)) {\n          if (callback) {\n            callback();\n          }\n          resolve(true);\n        }\n        resolve(false);\n      });\n    });\n  }\n\n  changeUserDetails() {\n    const { detailValues, isInitialLoad } = this.state;\n    const { userDetails } = this.props;\n\n    if (userDetails) {\n      this.setState({\n        detailValues: {\n          ...detailValues,\n          adult_0: {\n            email: { type: 'email', value: userDetails.email },\n            given_name: { type: 'text', value: userDetails.firstName },\n            family_name: { type: 'text', value: userDetails.surname },\n            id_type: { type: 'select', value: { display_name: userDetails.id_type, value: userDetails.id_type } },\n            nric: { type: 'text', value: userDetails.nric },\n            nationality: { type: 'select', value: { display_name: userDetails.nationality, value: userDetails.nationality } },\n            birth_date: { type: 'date', value: moment(userDetails.dateOfBirth).toDate() },\n            gender: { type: 'select', value: { display_name: userDetails.gender, value: userDetails.gender } },\n            marital_status: { type: 'select', value: { display_name: userDetails.marital_status, value: userDetails.marital_status } },\n            race: { type: 'select', value: { display_name: userDetails.race, value: userDetails.race } },\n            occupation: { type: 'select', value: { display_name: userDetails.occupation, value: userDetails.occupation } },\n            mobile_number: { type: 'number', value: userDetails.contact },\n            address: { type: 'text', value: userDetails.address },\n            unit_no: { type: 'text', value: userDetails.unit_no },\n            postal: { type: 'text', value: userDetails.postal_code },\n          },\n        },\n        isInitialLoad: false,\n      });\n    }\n  }\n\n  handleProductPage(insurerSlug, productSlug) {\n    const { history } = this.props;\n\n    if (insurerSlug && productSlug) {\n      history.push(`/travel${FORMSTATES.CHOOSEPLAN.path}/${insurerSlug}/${productSlug}`);\n    }\n  }\n\n  renderStepProgress() {\n    const { formIndex, charged } = this.state;\n\n    return (\n      <StepProgressBar\n        formState={formIndex}\n        inputList={[\n          'Choose Plan',\n          'Details',\n          'Checkout',\n        ]}\n        form=\"travel\"\n        stateList={[\n          FORMSTATES.CHOOSEPLAN,\n          FORMSTATES.DETAILFORM,\n          FORMSTATES.CHECKOUT,\n        ]}\n        stateDescriptions={[\n          { main: '' /* 'Choose your Plan', sub: 'Compare price plans from multiple companies' */ },\n          { main: 'Details' },\n          { main: 'Checkout -  Please check your details' },\n        ]}\n        charged={charged}\n      />\n    );\n  }\n\n  renderTravelForms() {\n    const {\n      formIndex,\n      selectedArray,\n      selectionButtonIndex,\n      planType,\n      values,\n      errors,\n      detailValues,\n      detailErrors,\n      mainFields,\n      plansData,\n      selectedPlanData,\n      charged,\n      apiLoader,\n    } = this.state;\n\n    const { userDetails } = this.props;\n    const isLoggedIn = !_.isEmpty(userDetails);\n\n    const props = {\n      values,\n      errors,\n    };\n\n    switch (formIndex) {\n      case FORMSTATES.CHOOSEPLAN.index:\n        return (\n          <TravelChoosePlan\n            {...props}\n            isLoggedIn={isLoggedIn}\n            setSelectedArray={this.setSelectedArray}\n            setSelectionButtonIndex={this.setSelectionButtonIndex}\n            selectedArray={selectedArray}\n            selectionButtonIndex={selectionButtonIndex}\n            planType={planType}\n            setPlanType={this.setPlanType}\n            handleProductPage={this.handleProductPage}\n            setSelectedPlanData={this.setSelectedPlanData}\n            onChangeValue={this.onChangeValue}\n            onUpdateValues={this.onUpdateValues}\n            mainFields={mainFields}\n            plansData={plansData}\n            selectedPlanData={selectedPlanData}\n            setPlansData={this.setPlansData}\n            handleAPI={apiLoader ? apiLoader.handleAPI : () => {}}\n            validateForm={this.validateForm}\n          />\n        );\n      case FORMSTATES.DETAILFORM.index:\n        return (\n          <TravelDetail\n            isLoggedIn={isLoggedIn}\n            planType={planType}\n            piggyCallback={this.changeUserDetails}\n            values={values}\n            errors={errors}\n            onChangeValue={this.onChangeValue}\n            detailValues={detailValues}\n            detailErrors={detailErrors}\n            onChangeDetailValue={this.onChangeDetailValue}\n            plansData={plansData}\n            selectedPlanData={selectedPlanData}\n            handleAPI={apiLoader ? apiLoader.handleAPI : () => {}}\n            validateForm={this.validateDetailsForm}\n          />\n        );\n      case FORMSTATES.CHECKOUT.index:\n      case FORMSTATES.SUBMITTED.index:\n        return (\n          <TravelCheckout\n            values={values}\n            detailValues={detailValues}\n            planType={planType}\n            isLoggedIn={isLoggedIn}\n            charged={charged}\n            plansData={plansData}\n            selectedPlanData={selectedPlanData}\n            handleAPI={apiLoader ? apiLoader.handleAPI : () => {}}\n            setCharged={this.setCharged}\n          />\n        );\n      default:\n        return (\n          <TravelMain\n            isLoggedIn={isLoggedIn}\n            values={values}\n            errors={errors}\n            onChangeValue={this.onChangeValue}\n            handleAPI={apiLoader ? apiLoader.handleAPI : () => {}}\n            validateForm={this.validateForm}\n            setPlansData={this.setPlansData}\n          />\n        );\n    }\n  }\n\n  render() {\n    const { formIndex, apiLoader } = this.state;\n    const { constants } = this.props;\n\n    const checkoutStyle = formIndex === FORMSTATES.CHECKOUT.index ? 'travel-checkout-container' : '';\n    const meta = isProduction ? 'travel insurance, travel insurance \bsingapore, travel insurance discount, travel insurance promotion,  singapore travel insurance, buy travel insurance, buy travel insurance online, singapore travel insurance promotion, travel insurance singapore comparison, best travel insurance singapore, travel insurance comparison singapore, best travel insurance, travel insurance compare, compare travel insurance singapore, travel insurance comparison, travel insurance online, compare travel insurance, Annual travel insurance promotion, travel insurance direct, single trip travel insurance, policypal travel insurance' : '';\n\n    return (\n      <Page id=\"travel\">\n        <div className={checkoutStyle}>\n          {/* <Helmet>\n            <meta name=\"keywords\" content={meta} />\n            <title>PolicyPal 2.0 - Travel Insurance</title>\n            <meta name=\"title\" content=\"PolicyPal 2.0 - Travel Insurance\" />\n            <meta name=\"description\" content=\"Browse products for travel insurance.\" />\n          </Helmet> */}\n          {\n            constants && apiLoader &&\n            <Fragment>\n              {this.renderStepProgress()}\n              {this.renderTravelForms()}\n            </Fragment>\n          }\n          <RefreshTimer ref={(node) => {\n              if (!this.refresher) {\n                node.invokeNewTimer();\n              }\n              this.refresher = node;\n            }}\n          />\n          <APILoader ref={(node) => { this.APILoader = node; }} />\n        </div>\n      </Page>\n    );\n  }\n}\n\nTravelRouteContainer.defaultProps = {\n  userDetails: null,\n  travelPromoGiveAway: undefined,\n  constants: null,\n};\n\nTravelRouteContainer.propTypes = {\n  userDetails: PropTypes.object,\n  travelPromoGiveAway: PropTypes.object,\n  constants: PropTypes.object,\n  history: PropTypes.object.isRequired,\n  setFormState: PropTypes.func.isRequired,\n  match: PropTypes.object.isRequired,\n  doGetPromoGiveaways: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  formState: state.insurance.formState,\n  travelPromoGiveAway: state.insurance.promoGiveaways.travel,\n  userDetails: state.userDetails.data,\n  constants: state.insurance.constants,\n  login: state.login,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setFormState: (state) => {\n    dispatch(setInsuranceFormState(state));\n  },\n  doGetPromoGiveaways: () => dispatch(getPromoGiveaways('travel')),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TravelRouteContainer));\n","/**\n * PopupWithText.js\n * Popup with custom text\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/FormsV3/Button/Button';\nimport Popup from '../Popup/Popup';\n\n\nimport './PopupWithText.scss';\n\nclass PopupWithText extends Component {\n  constructor(props) {\n    super(props);\n\n    const { onConfirm } = this.props;\n\n    this.state = {\n      text: '',\n      jsx: null,\n      useConfirm: true,\n      onConfirm,\n    };\n    this.openPopupWithText = this.openPopupWithText.bind(this);\n  }\n\n  openPopupWithText(text, useConfirm = true, onConfirm = null) {\n    this.setState({\n      text,\n      useConfirm,\n    });\n\n    if (onConfirm) {\n      this.setState({\n        onConfirm,\n      });\n    }\n    setTimeout(this.popupRef.openPopup, 10);\n  }\n\n  openPopupWithJSX(jsx, useConfirm = true, onConfirm = null) {\n    this.setState({\n      jsx,\n      useConfirm,\n    });\n\n    if (onConfirm) {\n      this.setState({\n        onConfirm,\n      });\n    }\n    setTimeout(this.popupRef.openPopup, 10);\n  }\n\n  render() {\n    const {\n      text, jsx, useConfirm, onConfirm,\n    } = this.state;\n    const { showCancelButton, hideCloseButton } = this.props;\n    return (\n      <div className=\"popup-with-text\">\n        <Popup\n          hideCloseButton={hideCloseButton}\n          ref={(r) => { this.popupRef = r; }}\n        >\n          <Fragment>\n            <div className=\"check-out-popup\">\n              <div className=\"upper-container upper-margin-down\">\n                {\n                  jsx || (\n                    <p>\n                      <span className=\"focus-text\">{text}</span>\n                    </p>\n                  )\n                }\n              </div>\n              <div className=\"button-container\">\n                {\n                  showCancelButton ?\n                    <Button\n                      className=\"checkout-button\"\n                      variant=\"medium-flat\"\n                      width={166}\n                      height={72}\n                      onClick={() => {\n                        this.popupRef.closePopup();\n                      }}\n                    >\n                      <p>Cancel</p>\n                    </Button>\n                  :\n                    null\n                }\n                <Button\n                  className=\"checkout-button\"\n                  variant=\"medium-flat-green\"\n                  width={166}\n                  height={72}\n                  onClick={() => {\n                    if (useConfirm) {\n                      onConfirm();\n                    }\n                    this.popupRef.closePopup();\n                  }}\n                >\n                  <p>Confirm</p>\n                </Button>\n              </div>\n            </div>\n          </Fragment>\n        </Popup>\n      </div>\n    );\n  }\n}\n\nPopupWithText.defaultProps = {\n  onConfirm: () => {},\n  showCancelButton: false,\n  hideCloseButton: false,\n};\n\nPopupWithText.propTypes = {\n  onConfirm: PropTypes.func,\n  showCancelButton: PropTypes.bool,\n  hideCloseButton: PropTypes.bool,\n};\n\nexport default PopupWithText;\n","/**\n * PopupWithText.js\n * Popup with custom text\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport window from 'global/window';\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport PopupWithText from '../PopupWithText/PopupWithText';\n\n\nclass RefreshTimer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.oldTime = new Date();\n    this.timeout = null;\n    this.invokeNewTimer = this.invokeNewTimer.bind(this);\n    this.setTimer = this.setTimer.bind(this);\n  }\n\n  componentWillMount() {\n    this.interval = window.setInterval(() => {\n      if (window.addEventListener) {\n        window.addEventListener('mousemove', this.invokeNewTimer);\n        window.addEventListener('keypress', this.invokeNewTimer);\n        clearInterval(this.interval);\n      }\n    }, 100);\n  }\n\n\n  componentWillUnmount() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n\n    window.removeEventListener('mousemove', this.invokeNewTimer);\n    window.removeEventListener('keypress', this.invokeNewTimer);\n  }\n\n  setTimer() {\n    const { popupTimer, refreshTimer } = this.props;\n    this.timeout = setTimeout(() => {\n      const confirmResult = window.confirm(`Your session will expire due inactivity. Please click “OK” within ${refreshTimer / 1000 / 60} mins to continue, or “Cancel”, if you wish to leave the page.`);\n      const timeDiff = new Date() - this.oldTime;\n\n      if (confirmResult && timeDiff < popupTimer + refreshTimer) {\n        this.invokeNewTimer();\n      } else {\n        window.location.assign('/');\n      }\n    }, popupTimer);\n    this.oldTime = new Date();\n  }\n\n  invokeNewTimer() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n\n    this.setTimer();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <PopupWithText\n          hideCloseButton\n          ref={node => this.popup = node}\n        />\n      </Fragment>\n    );\n  }\n}\n\nRefreshTimer.defaultProps = {\n  popupTimer: 600000,\n  refreshTimer: 120000,\n};\n\nRefreshTimer.propTypes = {\n  popupTimer: PropTypes.number,\n  refreshTimer: PropTypes.number,\n};\n\nexport default RefreshTimer;\n","/**\n * LoadingScreen.js\n * Loading screen for anywhere use\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nimport Logos from 'assets/images/InsurerLogos';\nimport './LoadingScreenV2.scss';\n\nclass LogoSlider extends Component {\n  constructor(props) {\n    super(props);\n\n    const logos = _.map(Logos.small, logo => logo);\n    const keyFrameLogo = keyframes`\n      0%    { transform: translateX(0); }\n      100%  { transform: translateX(calc(-84px * ${logos.length})); }\n    `;\n\n    const AnimatedContainer = styled.div`\n      animation: ${keyFrameLogo} 5s linear infinite;\n    `;\n\n    this.state = {\n      logos: _.map(Logos.small, logo => logo),\n      AnimatedContainer,\n    };\n\n    this.renderLogos = this.renderLogos.bind(this);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  renderLogos(key) {\n    const { logos } = this.state;\n    return _.map(logos, (logo, index) => (\n      <img key={`loading-icon-${key}-${index}`} src={logo} alt={`loading-icon-${index}.svg`} />\n    ));\n  }\n\n  render() {\n    const { AnimatedContainer } = this.state;\n\n    return (\n      <AnimatedContainer\n        className=\"logo-container\"\n      >\n        {this.renderLogos(0)}\n        {this.renderLogos(1)}\n      </AnimatedContainer>\n    );\n  }\n}\n\nexport default LogoSlider;\n","/**\n * LoadingScreen.js\n * Loading screen for anywhere use\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ModalPopup from 'components/Templates/ModalPopup/ModalPopup';\nimport SpinnerAnimation from 'components/Templates/SpinnerAnimation/SpinnerAnimation';\nimport Button from 'components/FormsV3/Button/Button';\n\nimport LogoSlider from './LogoSlider';\n\nimport './LoadingScreenV2.scss';\n\nconst timeOutTimer = 30000;\n\nclass LoadingScreenV2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      overwriteShowWarning: false,\n    };\n\n    this.closeLoading = this.closeLoading.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleChange();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { isLoading } = this.props;\n\n    if (isLoading !== prevProps.isLoading) {\n      this.handleChange();\n    }\n  }\n\n  handleChange() {\n    const { isLoading } = this.props;\n    if (isLoading) {\n      this.timer = setTimeout(() => this.setState({ overwriteShowWarning: true }), timeOutTimer);\n    }\n\n    if (!isLoading) {\n      clearTimeout(this.timer);\n      this.setState({ overwriteShowWarning: false });\n    }\n  }\n\n  async closeLoading() {\n    const {\n      showLoadingError,\n      showLoading,\n      errorCallback,\n    } = this.props;\n\n    this.setState({ overwriteShowWarning: false }, async () => {\n      await showLoadingError(false);\n      showLoading(false);\n\n      if (errorCallback) {\n        errorCallback();\n      }\n    });\n  }\n\n  render() {\n    const { overwriteShowWarning } = this.state;\n    const {\n      isLoading,\n      isLoadingError,\n      message,\n      noLogos,\n    } = this.props;\n\n    const loadingStyle = isLoading ? 'loading-screen-active' : '';\n\n    return (\n      <Fragment>\n        <div\n          className={`loading-screen-v2 ${loadingStyle}`}\n        >\n          {\n            isLoading ?\n              <Fragment>\n                <SpinnerAnimation />\n                {\n                  !noLogos &&\n                  <div className=\"bottom-container\">\n                    <p>Searching from esteemed partners...</p>\n                    <LogoSlider />\n                  </div>\n                }\n              </Fragment>\n            : null\n          }\n        </div>\n        <ModalPopup\n          showModal={overwriteShowWarning || isLoadingError}\n          closeModal={this.closeLoading}\n          className=\"loading-modal\"\n          backdropClassName=\"blue-modal-backdrop\"\n          header={<p>An error has occured</p>}\n          body={message}\n          zIndex={1052}\n          footer={\n            <Button\n              variant=\"medium-flat-green\"\n              height={48}\n              width={162}\n              onClick={this.closeLoading}\n            >\n              <p>Close</p>\n            </Button>\n          }\n        />\n      </Fragment>\n    );\n  }\n}\n\nLoadingScreenV2.defaultProps = {\n  noLogos: false,\n  errorCallback: null,\n};\n\nLoadingScreenV2.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  isLoadingError: PropTypes.bool.isRequired,\n  message: PropTypes.object.isRequired,\n  showLoading: PropTypes.func.isRequired,\n  showLoadingError: PropTypes.func.isRequired,\n  noLogos: PropTypes.bool,\n  errorCallback: PropTypes.func,\n};\n\nexport default LoadingScreenV2;\n","/**\n * FormInputWrapper.js\n * Custom form dropdown menu with input\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FormInputWrapper.scss';\n\n/**\n * Custom Form Dropdown class\n */\nclass FormInputWrapper extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.errorString !== nextProps.errorString) {\n      return {\n        errorString: nextProps.errorString,\n        refValue: nextProps.refValue,\n      };\n    }\n\n    if (nextProps.validateForm && prevState.errorString && prevState.refValue !== nextProps.refValue) {\n      nextProps.validateForm();\n      return {\n        errorString: null,\n      };\n    }\n    return null;\n  }\n  /**\n   * Constructor\n   *\n   * @param {object} props Component props\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorString: null,\n    };\n\n    this.setErrorString = this.setErrorString.bind(this);\n    this.clearErrorString = this.clearErrorString.bind(this);\n  }\n\n  setErrorString(message) {\n    this.setState({\n      errorString: message,\n    });\n  }\n\n  clearErrorString() {\n    this.setState({\n      errorString: null,\n    });\n  }\n\n  render() {\n    const {\n      errorString,\n    } = this.state;\n\n    const {\n      extraInfo,\n      desc,\n    } = this.props;\n\n    return (\n      <div\n        className=\"input-wrapper-main-new input-wrapper-error\"\n      >\n        {\n          desc !== null ?\n            <p className=\"input-wrapper-desc\">{desc}</p>\n          :\n            null\n        }\n        {this.props.children}\n        {\n          extraInfo !== null ?\n            <div className=\"extra-info-container\">\n              {extraInfo}\n            </div>\n          :\n            null\n        }\n        {\n          errorString !== null ?\n            <div className=\"input-wrapper-error-text\">\n              <p>{errorString}</p>\n            </div>\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nFormInputWrapper.defaultProps = {\n  desc: null,\n  extraInfo: null,\n};\n\n\nFormInputWrapper.propTypes = {\n  desc: PropTypes.string,\n  extraInfo: PropTypes.object,\n};\n\nexport default FormInputWrapper;\n","/**\n * DropDown.js\n * Custom form dropdown menu with input\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport document from 'global/document';\nimport window from 'global/window';\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, getFormValues, change } from 'redux-form';\nimport PropTypes from 'prop-types';\n\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nimport FormInputWrapper from '../FormInputWrapper/FormInputWrapper';\n\nimport Arrow from '../../../assets/images/forms/arrow.svg';\nimport Cross from '../../../assets/images/forms/cross.svg';\nimport MagnifyGlass from '../../../assets/images/forms/magnifyGlass.svg';\n\nimport './DropDown.scss';\nimport './MultipleSelectDropDown.scss';\n\n// How many items to display\nconst maxItemsDisplay = 5;\n// Height for medium dropdown\nconst mediumHeight = 48;\n// Height for big dropdown\nconst bigHeight = 72;\n// Padding for when multiple items overflow\nconst extraPaddingForMultiple = 5;\n// Error text to display when error\nconst resultNullString = 'No results found';\n\n/**\n * Custom Form Dropdown class\n */\nclass DropDownV2 extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      dropList,\n      numItemsDisplay,\n      size,\n    } = nextProps;\n\n    if (!_.isEqual(dropList, prevState.initialListItems)) {\n      const height = size === 'big' ? bigHeight : mediumHeight;\n      const numItems = numItemsDisplay || maxItemsDisplay;\n      const maxheight = (_.min([dropList ? dropList.length : 0, numItems]) + 1) * height;\n\n      return {\n        initialListItems: dropList,\n        listItems: dropList,\n        maxheight,\n        listHeight: maxheight,\n      };\n    }\n\n    return null;\n  }\n  /**\n   * Constructor\n   *\n   * @param {object} props Component props\n   */\n  constructor(props) {\n    super(props);\n\n    // dropList - The passed down dropdown list items\n    // placeholderString - Placeholder string for input\n    // size - Size of this control\n    // numItemsDisplay - Max items to display on view\n    const {\n      dropList,\n      placeholderString,\n      size,\n      numItemsDisplay,\n    } = this.props;\n\n    // Get the control height\n    const height = size === 'big' ? bigHeight : mediumHeight;\n    // Get number of items to display\n    const numItems = numItemsDisplay || maxItemsDisplay;\n    // Get the max height of list\n    const maxheight = (_.min([dropList ? dropList.length : 0, numItems]) + 1) * height;\n    // isOpened - Whether dropdown is opened\n    // isError - Whether there is input error\n    // listItems - The actual dropdown list\n    // selectedString - The selected item string\n    // height - Preferred Control height\n    // numItemsDisplay - How many items to display\n    // maxheight - Max height of the list\n    // listHeight - Height of the list. (Items count + control)\n    // multipleSelectedElements - Array of multiple selected items\n    // listElementsCounter - Up down selection position\n    // clientHeight - Actual height of the control\n    this.state = {\n      isOpened: false,\n      listItems: dropList,\n      selectedString: placeholderString,\n      height,\n      numItemsDisplay: numItems,\n      maxheight,\n      listHeight: maxheight,\n      multipleSelectedElements: null,\n      listElementsCounter: -1,\n      clientHeight: height,\n      extraPadding: 0,\n      noTransition: true,\n    };\n\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.renderListItems = this.renderListItems.bind(this);\n    this.renderTextInput = this.renderTextInput.bind(this);\n    this.handleSelectClick = this.handleSelectClick.bind(this);\n    this.handleOnInputChange = this.handleOnInputChange.bind(this);\n    this.handleSetMultipleSelectedItem = this.handleSetMultipleSelectedItem.bind(this);\n    this.handleDestroySelected = this.handleDestroySelected.bind(this);\n    this.handleInputKeyPress = this.handleInputKeyPress.bind(this);\n    this.handleItemKeyPress = this.handleItemKeyPress.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleExit = this.handleExit.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n  }\n\n  /**\n   * Lifecycle Method - componentDidMount\n   */\n  componentDidMount() {\n    // Add Handler to handle click outside of screen\n    document.addEventListener('mousedown', this.handleClickOutside);\n    // Update control height on resize in case it squeezes down\n    window.addEventListener('resize', this.updateDimensions);\n    // Update for the first time\n    this.updateDimensions();\n\n    const { formStore, name, overrideValue } = this.props;\n    if (formStore && formStore[name]) {\n      const formValues = formStore[name];\n      if (formValues.constructor === Array) {\n        this.setState({\n          multipleSelectedElements: formValues,\n        });\n      }\n    }\n\n    if (overrideValue) {\n      this.handleChange(overrideValue);\n    }\n\n    this.setState({ noTransition : false });\n  }\n\n\n  /**\n   * Lifecycle Method - shouldComponentUpdate\n   *\n   * @param {object} nextProps\n   * @param {object} nextState\n   */\n  shouldComponentUpdate(nextProps) {\n    /* const {\n      isOpened,\n      selectedString,\n      multipleSelectedElements,\n      clientHeight,\n      extraPadding,\n    } = this.state;\n\n    const { formStore, name, isMultiple, overrideValue } = this.props; */\n    const { overrideValue } = this.props;\n\n    if (overrideValue !== nextProps.overrideValue) {\n      this.handleChange(nextProps.overrideValue);\n    }\n\n    return true;\n    // Render only when open state or selected string is different\n    /* return (\n      isOpened !== nextState.isOpened ||\n      selectedString !== nextState.selectedString ||\n      multipleSelectedElements !== nextState.multipleSelectedElements ||\n      clientHeight !== nextState.clientHeight ||\n      extraPadding !== nextState.extraPadding ||\n      !isMultiple && formStore && nextProps.formStore[name] && nextProps.formStore[name]\n    ); */\n  }\n\n  /**\n   * Lifecycle Method - componentDidUpdate\n   */\n  componentDidUpdate() {\n    const { multipleSelectedElements } = this.state;\n    const { formStore, name } = this.props;\n    const isForm = formStore && formStore[name];\n\n    const isElements = !_.isEmpty(multipleSelectedElements);\n    if (isForm) {\n      const formValues = formStore[name];\n\n      if (!isElements || (isElements && !_.isEqual(formValues, multipleSelectedElements))) {\n        if (formValues.constructor === Array) {\n          this.setState({\n            multipleSelectedElements: [...formValues],\n          });\n        }\n      }\n    }\n\n    if (isElements && !isForm) {\n      this.setState({\n        multipleSelectedElements: null,\n      });\n    }\n    // Update control height if necessary, since the\n    // height may change after render\n    this.updateDimensions();\n    /* const { isOpened } = this.state;\n    if (isOpened && !prevState.isOpened) {\n      setTimeout(() => {\n        const bodyRect = document.body.getBoundingClientRect();\n        const elemRect = this.wrapperRef.getBoundingClientRect();\n        const offset = elemRect.top - bodyRect.top;\n        window.scrollTo(0, offset);\n      }, 300);\n    } */\n  }\n\n  /**\n   * Lifecycle Method - componentWillUnmount\n   */\n  componentWillUnmount() {\n    // Remove Handler to handle click outside of screen\n    document.removeEventListener('mousedown', this.handleClickOutside);\n    window.removeEventListener('resize', this.updateDimensions);\n  }\n\n  /**\n   * Get client height of the selection container\n   * to determine the height of the whole control.\n   * (For multiple only)\n   *\n   * @param {object} event\n   */\n  updateDimensions() {\n    const { isMultiple } = this.props;\n\n    // Only multiple will expand\n    if (!isMultiple) {\n      return;\n    }\n\n    const {\n      clientHeight,\n      height,\n      extraPadding,\n    } = this.state;\n\n    let newHeight = mediumHeight;\n    try {\n      newHeight = this.selectedItemsContainer.children[this.selectedItemsContainer.childElementCount - 1].getBoundingClientRect().bottom - this.selectedItemsContainer.children[0].getBoundingClientRect().top;\n      newHeight = newHeight < mediumHeight ? mediumHeight : newHeight + 10;\n    } catch (error) {\n      // eslint-disable-next-line no-empty\n    }\n\n    // if client height is not same as DOM, update with padding if expanded\n    if (clientHeight !== newHeight) {\n      this.setState({\n        clientHeight: newHeight,\n        extraPadding: newHeight - 2 * extraPadding > height ? extraPaddingForMultiple : 0,\n      });\n    }\n  }\n\n  handleChange(value) {\n    const {\n      name,\n      form,\n      formChange,\n      notForm,\n      valueChangeCallback,\n    } = this.props;\n\n    if (notForm) {\n      if (valueChangeCallback) {\n        valueChangeCallback(value);\n      }\n      this.inputField.value = value;\n      return;\n    }\n\n    formChange(form, name, value);\n  }\n\n  /**\n   * End selection if click on outside\n   *\n   * @param {object} event\n   */\n  handleClickOutside(event) {\n    const { isOpened } = this.state;\n\n    // If clicked outside, go to exit\n    if (\n      isOpened &&\n      this.wrapperRef &&\n      !this.wrapperRef.contains(event.target)\n    ) {\n      // Close it\n      this.setState({\n        isOpened: false,\n      });\n\n      // Unset from focus\n      this.isFromFocus = false;\n    }\n  }\n\n  /**\n   * Handle on enter key\n   *\n   * @param {object} event\n   */\n  handleInputKeyPress(event) {\n    const {\n      isOpened,\n      listElementsCounter,\n      selectedString,\n      multipleSelectedElements,\n    } = this.state;\n\n    const { placeholderString, isMultiple } = this.props;\n\n    // If pressed on enter, go to exit\n    if (event.key === 'Enter') {\n      this.handleExit();\n      event.preventDefault();\n      return;\n    }\n\n    // Press down arrow from input\n    if (event.key === 'ArrowDown') {\n      if (isOpened) {\n        if (listElementsCounter === -1) {\n          event.preventDefault();\n        }\n        this.handleItemKeyPress(event);\n      } else {\n        this.setState({\n          isOpened: true,\n        });\n      }\n    }\n\n    if (\n      isMultiple &&\n      event.key === 'Backspace' &&\n      (selectedString === '' || selectedString === placeholderString) &&\n      !_.isEmpty(multipleSelectedElements)\n    ) {\n      this.handleDestroySelected(multipleSelectedElements[multipleSelectedElements.length - 1]);\n    }\n  }\n\n  /**\n   * Key press on list items\n   *\n   * @param {object} event\n   */\n  handleItemKeyPress(event) {\n    const {\n      listElementsCounter,\n    } = this.state;\n\n    let index = listElementsCounter;\n\n    // If click enter on list item\n    if (event.key === 'Enter') {\n      // Focus input field\n      // this.inputField.focus();\n      // Handle exit with the item value\n      this.handleExit(this.listElements[index].getAttribute('value'));\n      event.preventDefault();\n      return;\n    }\n\n    // Navigate list with up down arrow\n    if (event.key === 'ArrowDown') {\n      index = listElementsCounter + 1;\n    } else if (event.key === 'ArrowUp') {\n      index = listElementsCounter - 1;\n    }\n\n    // Cap index within list\n    index = Math.max(0, Math.min(index, this.listElements.length - 1));\n    // Focus on the next item\n    this.listElements[index].focus();\n\n    // If index changed, update state\n    if (index !== listElementsCounter) {\n      this.setState({\n        listElementsCounter: index,\n      });\n    }\n\n    event.stopPropagation();\n  }\n\n  /**\n   * Handle toggling of dropdown list\n   *\n   * @param {bool} isOpenOnly - Only can open\n   */\n  handleSelectClick(isOpenOnly = false) {\n    const {\n      isOpened,\n      selectedString,\n      maxheight,\n      multipleSelectedElements,\n    } = this.state;\n\n    const {\n      dropList,\n      isMultiple,\n    } = this.props;\n\n    // If this frame is not from focus\n    if (!this.isFromFocus) {\n      // Set open state\n      if (!isOpenOnly || (isOpenOnly && !isOpened)) {\n        this.setState({\n          isOpened: !isOpened,\n        });\n      }\n\n      // If previously invalid, reset list\n      if (!selectedString || selectedString === resultNullString) {\n        this.setState({\n          listItems: dropList,\n          listHeight: maxheight,\n          listElementsCounter: -1,\n        });\n\n        if (!isMultiple || (isMultiple && _.isEmpty(multipleSelectedElements))) {\n          this.handleChange(null);\n        }\n      }\n    }\n\n    // Unlock from focus\n    this.isFromFocus = false;\n  }\n\n  /**\n   * Handles selection of dropdown item\n   *\n   * @param {object} event - Click event\n   * @param {string} item - Input string\n   */\n  handleSelectItemClick(event, item) {\n    // If click on null item return\n    if (item === resultNullString) {\n      return;\n    }\n\n    const { dropList } = this.props;\n\n    const {\n      isMultiple,\n    } = this.props;\n\n    // Reset drop list items to all, set selected string,\n    // and reset any errors\n    this.setState({\n      listItems: dropList,\n    });\n\n    // this.formParent.clearErrorString();\n\n    if (isMultiple) {\n      // If multiple dropdown, reset selected string\n      this.setState({\n        selectedString: '',\n      });\n\n      // Set input field text to empty\n      this.inputField.value = '';\n      // Refocus input bar\n      // this.inputField.focus();\n\n      // Set multiple selected item\n      this.handleSetMultipleSelectedItem(item);\n    } else {\n      this.setState({\n        selectedString: item,\n      });\n\n      // Toggle the dropdown menu\n      this.handleSelectClick();\n\n      // Update redux state\n      this.handleChange(item);\n\n      // Close dropdown\n      this.setState({\n        isOpened: false,\n      });\n    }\n\n    event.stopPropagation();\n  }\n\n  /**\n   * Selection of multi select dropdown\n   *\n   * @param {string} item\n   */\n  handleSetMultipleSelectedItem(item) {\n    const { multipleSelectedElements, height } = this.state;\n\n    const newArr = multipleSelectedElements || [];\n\n    // If item does not exists in the selected list\n    if (newArr.indexOf(item) < 0) {\n      // Add item to list\n      newArr.push(item);\n\n      // Change state\n      this.setState({\n        multipleSelectedElements: newArr,\n        clientHeight: this.selectedContainer ? this.selectedContainer.clientHeight : height,\n        isOpened: false,\n      });\n\n      // Update redux store\n      this.handleChange(newArr);\n    }\n  }\n\n  /**\n   * Destroys multi selected item\n   *\n   * @param {string} item\n   */\n  handleDestroySelected(item) {\n    const { height } = this.state;\n\n    const { multipleSelectedElements } = this.state;\n    // Duplicate clean copy\n    let newArr = multipleSelectedElements.slice();\n    // Delete chosen item\n    const index = newArr.indexOf(item);\n    newArr.splice(index, 1);\n    // Set null if empty\n    newArr = newArr.length === 0 ? null : newArr;\n\n    // Update state\n    this.setState({\n      multipleSelectedElements: newArr,\n      clientHeight: this.selectedContainer ? this.selectedContainer.clientHeight : height,\n    });\n\n    // Update redux state\n    this.handleChange(newArr);\n    this.isFromFocus = false;\n  }\n\n  /**\n   * Handles on input changes\n   *\n   * @param {object} event\n   */\n  async handleOnInputChange(event) {\n    // Get current input value\n    const { value } = event.target;\n\n    const { dropList } = this.props;\n    const { height, numItemsDisplay } = this.state;\n\n    // Attempt to match value to list\n    const result = _.filter(\n      dropList,\n      item => item.toString().toUpperCase().indexOf(value.toString().toUpperCase()) === 0,\n    );\n\n    // Get length of new list, min 1 which is error string\n    const length = result.length ? result.length : 1;\n\n    // Set new list items, height of dropdown list,\n    // Force open list on type, and set selected string to value\n    this.setState({\n      listItems: result.length ? result : [resultNullString],\n      listHeight: (_.min([length, numItemsDisplay]) + 1) * height,\n      isOpened: true,\n      selectedString: value,\n      listElementsCounter: -1,\n    });\n  }\n\n  /**\n   * Handle Blur event\n   *\n   * @param {object} event\n   */\n  handleBlur(event) {\n    // Check if focus event contains children\n    const isChildren = this.wrapperRef.contains(event.relatedTarget);\n\n    // If outside of children\n    if (!isChildren) {\n      // Close dropdown\n      this.setState({\n        isOpened: false,\n      });\n      // Handle exit case\n      this.handleExit();\n      this.isFromFocus = false;\n    }\n  }\n\n  /**\n   * Handle Focus event\n   *\n   * @param {object} event\n   */\n  handleFocus(event) {\n    const { isOpened } = this.state;\n\n    // Check if focus event contains children\n    const isChildren = this.wrapperRef.contains(event.relatedTarget);\n    // If not from children\n    if (!isChildren) {\n      // Open dropdown\n      if (!isOpened) {\n        this.handleSelectClick(true);\n        // Prevent double click\n        this.isFromFocus = true;\n      }\n    }\n  }\n\n  /**\n   * Handle exit selection of entered input\n   *\n   * @param {string} inputString - From selection\n   */\n  handleExit(inputString = null) {\n    const {\n      selectedString,\n      listItems,\n    } = this.state;\n\n    const {\n      placeholderString,\n      dropList,\n      isMultiple,\n    } = this.props;\n\n    // Result string if match original list\n    let resultString = null;\n    // If input causes an error\n    let isError = false;\n    // The string to use\n    const finalString = inputString !== null ? inputString : selectedString;\n    // If possible valid input\n    if (\n      finalString &&\n      finalString !== placeholderString &&\n      finalString !== ''\n    ) {\n      // Attempt to match finalString to original list\n      listItems.some((obj) => {\n        const result = obj.toString().toLowerCase() === finalString.toString().toLowerCase();\n        if (result) {\n          resultString = obj;\n        }\n\n        return result;\n      });\n\n      // Check error if no match\n      isError = !resultString;\n      // Set result string to match value or error value\n      resultString = isError ? null : resultString;\n\n      if (isMultiple) {\n        if (!isError) {\n          this.handleSetMultipleSelectedItem(resultString);\n        }\n\n        this.inputField.value = '';\n      } else {\n        // Update redux value\n        this.handleChange(resultString);\n\n        this.setState({\n          isOpened: false,\n        });\n      }\n    }\n\n    // If not error, reset list to list all,\n    // Set selected string and error if possible\n    // and close the list\n    this.setState({\n      listItems: isError ? listItems : dropList,\n      selectedString: resultString,\n    });\n\n    if (isError) {\n      // this.formParent.setErrorString(resultNullString);\n    } else {\n      // this.formParent.clearErrorString();\n    }\n  }\n\n  /**\n   * Renders the dropdown list items\n   */\n  renderListItems() {\n    const { listItems, height } = this.state;\n    this.listElements = [];\n\n    const result = _.map(listItems, item => (\n      <li key={item}>\n        <div\n          className=\"list-item text-style\"\n          style={{ height }}\n          onClick={event => this.handleSelectItemClick(event, item)}\n          role=\"button\"\n          tabIndex={-1}\n          value={item}\n          onKeyDown={(event) => { this.handleItemKeyPress(event); }}\n          ref={(node) => { if (node !== null) this.listElements.push(node); }}\n        >\n          <p>{item}</p>\n        </div>\n      </li>\n    ));\n\n    return result;\n  }\n\n  /**\n   * Render the multiple selected elements in the input container\n   */\n  renderMultipleSelectedElements() {\n    const { multipleSelectedElements } = this.state;\n    const { isMultiple } = this.props;\n\n    if (!isMultiple) {\n      return null;\n    }\n\n    return _.map(multipleSelectedElements, item => (\n      <div className=\"selected-item-container\" key={item}>\n        <div className=\"selected-item\">\n          <p>{item}</p>\n          <button\n            className=\"selected-item-destroy\"\n            onMouseUp={() => this.handleDestroySelected(item)}\n            tabIndex={-1}\n          >\n            <img src={Cross} alt=\"cross.svg\" />\n          </button>\n        </div>\n      </div>\n    ));\n  }\n\n  renderTextInput() {\n    const {\n      isMultiple,\n      isDisableTyping,\n      placeholderString,\n      name,\n      notForm,\n    } = this.props;\n\n    if (isMultiple || notForm) {\n      return (\n        isDisableTyping ?\n          <input\n            component=\"input\"\n            type=\"text\"\n            placeholder={placeholderString}\n            autoComplete=\"off\"\n            ref={node => (this.inputField = node)}\n            onChange={event => this.handleOnInputChange(event)}\n            onKeyDown={event => this.handleInputKeyPress(event)}\n            onClick={() => this.handleSelectClick(true)}\n            tabIndex={0}\n            disabled\n          />\n          :\n          <input\n            component=\"input\"\n            type=\"text\"\n            placeholder={placeholderString}\n            autoComplete=\"off\"\n            ref={node => (this.inputField = node)}\n            onChange={event => this.handleOnInputChange(event)}\n            onKeyDown={event => this.handleInputKeyPress(event)}\n            onClick={() => this.handleSelectClick(true)}\n            tabIndex={0}\n          />\n      );\n    }\n\n    return (\n      isDisableTyping ?\n        <Field\n          name={name}\n          component=\"input\"\n          type=\"text\"\n          // placeholder={placeholderString}\n          autoComplete=\"off\"\n          ref={node => (this.inputField = node)}\n          onChange={event => this.handleOnInputChange(event)}\n          onKeyDown={event => this.handleInputKeyPress(event)}\n          onClick={() => this.handleSelectClick(true)}\n          tabIndex={0}\n          disabled\n        />\n        :\n        <Field\n          name={name}\n          component=\"input\"\n          type=\"text\"\n          // placeholder={placeholderString}\n          autoComplete=\"off\"\n          ref={node => (this.inputField = node)}\n          onChange={event => this.handleOnInputChange(event)}\n          onKeyDown={event => this.handleInputKeyPress(event)}\n          onClick={() => this.handleSelectClick(true)}\n          tabIndex={0}\n        />\n    );\n  }\n\n  /**\n   * Render component\n   */\n  render() {\n    const {\n      isOpened,\n      listHeight,\n      height,\n      clientHeight,\n      extraPadding,\n      noTransition,\n    } = this.state;\n\n    // const isOpened = true;\n\n    if (height && listHeight) {\n      const {\n        maxWidth,\n        isMultiple,\n        desc,\n        extraInfo,\n        errorString,\n        formStore,\n        name,\n        validateForm,\n        noInternalDesc,\n        logo,\n        noExternalDesc,\n        placeholderString,\n      } = this.props;\n\n      // Actual height of the whole control\n      const actualheight = isOpened ? listHeight : height;\n      // Actual height of only the list\n      const actualListheight = actualheight - height;\n\n      // Dynamic styles\n      const dropDownOpenStyle = isOpened ? 'dropdown-container-opened' : 'dropdown-container-closed';\n      const arrowStyle = isOpened ? 'angle-up' : 'angle-down';\n      const transitionStyle = noTransition ? '' : 'do-transition';\n      const listStyle = isOpened ? `list-opened ${transitionStyle}` : `list-closed ${transitionStyle}`;\n      const multipleStyle = isMultiple || logo ? 'multi-drop-new' : '';\n      const isErrorStyle = errorString ? 'error' : '';\n\n      const noInternalDescStyle = noInternalDesc ? 'no-internal-desc' : '';\n\n      const refValue = formStore ? formStore[name] : null;\n\n      const titleStyle = refValue ? 'focused-title' : '';\n      const marginTop = clientHeight > mediumHeight || isOpened ? clientHeight : 0;\n      const marginBottom = clientHeight > mediumHeight ? 6 : 0;\n\n      const logoImg = isMultiple ? MagnifyGlass : logo;\n      const externalDesc = noExternalDesc ? null : desc;\n      const zIndexStyle = isOpened ? 'drop-open' : 'drop-close';\n\n      return (\n        <FormInputWrapper\n          desc={externalDesc}\n          ref={node => (this.formParent = node)}\n          extraInfo={extraInfo}\n          errorString={errorString}\n          refValue={refValue}\n          validateForm={validateForm}\n          minHeight={clientHeight}\n        >\n          <div\n            className={`dropdown-new ${zIndexStyle} ${multipleStyle} ${noInternalDescStyle}`}\n            style={{\n              height: clientHeight,\n              maxWidth,\n              marginBottom,\n            }}\n            ref={node => (this.wrapperRef = node)}\n            onBlur={event => this.handleBlur(event)}\n            onFocus={event => this.handleFocus(event)}\n          >\n            <div\n              className={`dropdown-container ${dropDownOpenStyle} ${isErrorStyle}`}\n            >\n              {\n                isMultiple || noInternalDesc ? null :\n                <div className={`title-header ${titleStyle}`}>\n                  {placeholderString}\n                </div>\n              }\n              <div\n                className=\"selected-container\"\n                onKeyDown={event => this.handleInputKeyPress(event)}\n                role=\"button\"\n                style={{ minHeight: height }}\n                tabIndex={-1}\n                ref={node => (this.selectedContainer = node)}\n              >\n                {\n                  logoImg ?\n                    <div className=\"icon-container\" style={{ minHeight: height }}>\n                      <img\n                        src={logoImg}\n                        alt=\"DropdownImage.svg\"\n                      />\n                    </div>\n                  :\n                    null\n                }\n                <div\n                  className=\"selected-items-container\"\n                  ref={node => this.selectedItemsContainer = node}\n                  style={{ paddingTop: extraPadding, paddingBottom: extraPadding }}\n                >\n                  {this.renderMultipleSelectedElements()}\n                  <div className=\"selected-text selected-text-multi\">\n                    {this.renderTextInput()}\n                  </div>\n                </div>\n                <div\n                  className=\"selected-arrow\"\n                  onClick={() => this.handleSelectClick()}\n                  onKeyPress={() => {}}\n                  role=\"button\"\n                  tabIndex={-1}\n                >\n                  <img\n                    src={Arrow}\n                    alt=\"arrow.svg\"\n                    className={`selected-arrow-style ${arrowStyle}`}\n                  />\n                </div>\n              </div>\n              <Scrollbars\n                className={`list-container ${listStyle}`}\n                style={{\n                  minHeight: actualListheight,\n                  marginTop,\n                }}\n                ref={node => this.listContainer = node}\n                tabIndex={-1}\n              >\n                {\n                  isOpened ?\n                    this.renderListItems()\n                  :\n                    null\n                }\n              </Scrollbars>\n            </div>\n          </div>\n        </FormInputWrapper>\n      );\n    }\n\n    return null;\n  }\n}\n\nDropDownV2.defaultProps = {\n  maxWidth: '100%',\n  numItemsDisplay: maxItemsDisplay,\n  isMultiple: false,\n  desc: null,\n  isDisableTyping: false,\n  extraInfo: null,\n  notForm: false,\n  overrideValue: null,\n  errorString: null,\n  dropList: null,\n  formStore: null,\n  valueChangeCallback: null,\n  name: null,\n  form: null,\n  validateForm: null,\n  noInternalDesc: false,\n  noExternalDesc: false,\n  logo: null,\n};\n\nDropDownV2.propTypes = {\n  formStore: PropTypes.object,\n  dropList: PropTypes.array,\n  placeholderString: PropTypes.string.isRequired,\n  maxWidth: PropTypes.string,\n  size: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  numItemsDisplay: PropTypes.number,\n  formChange: PropTypes.func.isRequired,\n  isMultiple: PropTypes.bool,\n  desc: PropTypes.string,\n  isDisableTyping: PropTypes.bool,\n  extraInfo: PropTypes.object,\n  notForm: PropTypes.bool,\n  overrideValue: PropTypes.string,\n  errorString: PropTypes.string,\n  valueChangeCallback: PropTypes.func,\n  form: PropTypes.string,\n  validateForm: PropTypes.func,\n  noInternalDesc: PropTypes.bool,\n  noExternalDesc: PropTypes.bool,\n  logo: PropTypes.string,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  formStore: (getFormValues(ownProps.form)(state)),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  formChange: (form, key, value) => {\n    dispatch(change(form, key, value));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropDownV2);\n","/**\n * Slider.js\n * Selection with dynamic content\n *\n * @version 0.0.1\n * @author [Wilson](wilson@policypal.com)\n */\nimport document from 'global/document';\nimport window from 'global/window';\nimport React, { Component, Fragment } from 'react';\nimport { Field, getFormValues } from 'redux-form';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport FormInputWrapper from '../FormInputWrapper/FormInputWrapper';\nimport DropDownV2 from '../DropDown/DropDownV2';\n\nimport './SliderNew.scss';\n\nconst marginTopDefault = 0; // 60;\n\nconst SLIDERSTATE = {\n  ONIDLE: 0,\n  ONDOWN: 1,\n  ONUP: 2,\n};\n\n/**\n * Custom Selection Class\n */\nclass SliderNew extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      storeForm,\n      inputList,\n      name,\n      formState,\n      formStateList,\n    } = nextProps;\n\n    const { activeIndex } = prevState;\n\n    let indexToChange = null;\n    if (storeForm) {\n      const selectedTabString = storeForm[name];\n      const selectedTabIndex = inputList.indexOf(selectedTabString);\n      if (selectedTabIndex !== -1 && selectedTabIndex !== activeIndex) {\n        indexToChange = selectedTabIndex;\n      }\n    }\n\n    if (formState) {\n      const formStateIndex = _.findIndex(formStateList, listState => listState.state === formState);\n      if (formStateIndex !== activeIndex) {\n        indexToChange = formStateIndex;\n      }\n    }\n\n    if (indexToChange !== null) {\n      const len = inputList.length - 1;\n      const newWidth = indexToChange / len * 100;\n\n      return ({\n        activeIndex: indexToChange,\n        sliderWidth: newWidth,\n      });\n    }\n\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sliderWidth: 0,\n      sliderState: SLIDERSTATE.ONIDLE,\n      activeIndex: 0,\n      isUseDropDown: false,\n      marginTop: marginTopDefault,\n    };\n\n    this.renderKnobs = this.renderKnobs.bind(this);\n    this.renderSummary = this.renderSummary.bind(this);\n\n    this.handleResize = this.handleResize.bind(this);\n\n    this.handleSliderDown = this.handleSliderDown.bind(this);\n    this.handleSliderMove = this.handleSliderMove.bind(this);\n    this.handleSliderUp = this.handleSliderUp.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousemove', this.handleSliderMove);\n    document.addEventListener('mouseup', this.handleSliderUp);\n    window.addEventListener('resize', this.handleResize);\n\n    const {\n      storeForm,\n      name,\n      change,\n      inputList,\n      isProductSlider,\n    } = this.props;\n\n    if (!isProductSlider && !(storeForm && storeForm[name])) {\n      change(name, inputList[0]);\n    }\n\n    this.handleResize();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousemove', this.handleSliderMove);\n    document.removeEventListener('mouseup', this.handleSliderUp);\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  handleResize() {\n    const { hideWidth, isProductSlider } = this.props;\n    if (!isProductSlider && hideWidth > 0) {\n      const isDrop = window.innerWidth <= hideWidth;\n      this.setState({\n        isUseDropDown: isDrop,\n        marginTop: isDrop ? 0 : marginTopDefault,\n      });\n    }\n  }\n\n  handleSliderDown() {\n    const { sliderState } = this.state;\n\n    if (sliderState !== SLIDERSTATE.ONDOWN) {\n      this.setState({\n        sliderState: SLIDERSTATE.ONDOWN,\n      });\n    }\n  }\n\n  handleSliderMove(event) {\n    const { sliderState } = this.state;\n\n    if (sliderState === SLIDERSTATE.ONDOWN) {\n      const rect = this.sliderStart.getBoundingClientRect();\n      const position = Math.max(0, Math.min(event.clientX - rect.x - 5, rect.width)) / rect.width * 100;\n      this.setState({\n        sliderWidth: position,\n      });\n    }\n  }\n\n  handleSliderUp() {\n    this.handleClick();\n  }\n\n  handleClick(index = null) {\n    const { inputList, isProductSlider } = this.props;\n\n    const { sliderWidth } = this.state;\n    const len = inputList.length - 1;\n    const indexToUse = this.handleProductSlider(index === null ? Math.round(sliderWidth / 100 * len) : index);\n    const newWidth = indexToUse / len * 100;\n\n    if (!isProductSlider) {\n      const {\n        name,\n        change,\n      } = this.props;\n\n      change(name, inputList[indexToUse]);\n    }\n\n    this.setState({\n      sliderState: SLIDERSTATE.IDLE,\n      sliderWidth: newWidth,\n      activeIndex: indexToUse,\n    });\n\n    if (inputList[indexToUse].callback) {\n      inputList[indexToUse].callback();\n    }\n  }\n\n  handleProductSlider(indexToUse) {\n    const { formState, formStateList } = this.props;\n    if (!formState) {\n      return indexToUse;\n    }\n\n    const formStateIndex = _.findIndex(formStateList, listState => listState.state === formState);\n    const isValidSelection = indexToUse < formStateIndex;\n    if (isValidSelection && formStateList[indexToUse].callback) {\n      formStateList[indexToUse].callback(formState);\n    }\n\n    return isValidSelection ? indexToUse : formStateIndex;\n  }\n\n  renderKnobs() {\n    const { activeIndex } = this.state;\n    const { inputList, isProductSlider, displayList } = this.props;\n\n    const inputLength = inputList.length - 1;\n    return _.map(inputList, (data, index) => {\n      const leftOffset = index / inputLength * 100;\n      const isProductPassedPage = isProductSlider && index <= activeIndex;\n      let activeStyle = '';\n      if (isProductPassedPage || (!isProductSlider && index === activeIndex)) {\n        activeStyle = 'desc-active';\n      }\n      const sliderStyle = isProductPassedPage ? 'knob-done' : 'knob-default';\n      const indexToUse = index;\n      const dataToUse = displayList && displayList[index] ? displayList[index] : data;\n      const descStyle = isProductSlider ? 'desc-bottom' : '';\n\n      return (\n        <button\n          key={data}\n          tabIndex={-1}\n          className={`knob ${sliderStyle}`}\n          style={{ left: `${leftOffset}%` }}\n          onClick={(e) => { e.preventDefault(); this.handleClick(indexToUse); }}\n          onKeyDown={() => {}}\n        >\n          <p className={`${activeStyle} desc ${descStyle}`}>\n            {dataToUse}\n          </p>\n        </button>\n      );\n    });\n  }\n\n  renderSummary() {\n    const {\n      activeIndex,\n    } = this.state;\n\n    const {\n      inputList,\n      prefix,\n      suffix,\n      isProductSlider,\n      displayList,\n    } = this.props;\n\n    if (!isProductSlider) {\n      const value = inputList[activeIndex];\n      const valueToUse = displayList && displayList[activeIndex] ? displayList[activeIndex] : value;\n\n      return (\n        <div className=\"slider-summary-container-new\">\n          {\n            prefix ?\n              <span className=\"prefix-suffix\">{`${prefix} `}</span>\n            :\n              null\n          }\n          <span className=\"value\">{valueToUse}</span>\n          {\n            suffix ?\n              <span className=\"prefix-suffix\">{` ${suffix}`}</span>\n            :\n              null\n          }\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      sliderWidth,\n      isUseDropDown,\n      marginTop,\n    } = this.state;\n\n    const {\n      name,\n      desc,\n      form,\n      change,\n      inputList,\n      extraInfo,\n      isProductSlider,\n      maxWidth,\n      errorString,\n    } = this.props;\n\n    const knobColor1 = isProductSlider ? 'white-knob' : 'color-knob';\n    const knobColor2 = isProductSlider ? 'color-knob' : 'white-knob';\n\n    return (\n      <FormInputWrapper\n        desc={desc}\n        ref={node => (this.formParent = node)}\n        extraInfo={extraInfo}\n        errorString={errorString}\n      >\n        <Fragment>\n          {this.renderSummary()}\n          <div\n            className=\"slider-container-new\"\n            style={{ marginTop, maxWidth }}\n          >\n            {\n              isUseDropDown ?\n                <DropDownV2\n                  form={form}\n                  change={change}\n                  name={name}\n                  placeholderString=\"Enter or select your destinations\"\n                  dropList={inputList}\n                  size=\"medium\"\n                  isDisableTyping\n                />\n              :\n                <Fragment>\n                  <div\n                    className=\"line\"\n                    ref={node => this.sliderStart = node}\n                  />\n                  <div\n                    className=\"line-green\"\n                    style={{ width: `${sliderWidth}%` }}\n                  />\n                  <div\n                    className=\"knob-container\"\n                  >\n                    {this.renderKnobs()}\n                  </div>\n                  <div\n                    className=\"knob-container\"\n                  >\n                    <button\n                      tabIndex={0}\n                      className={`slider-knob ${knobColor1}`}\n                      ref={node => this.slider = node}\n                      onMouseDown={this.handleSliderDown}\n                      onClick={e => e.preventDefault()}\n                      style={{ left: `${sliderWidth}%` }}\n                    >\n                      <div className={`inner ${knobColor2}`} />\n                    </button>\n                    {\n                      isProductSlider ?\n                        null\n                      :\n                        <Field name={name} component={() => null} />\n                    }\n                  </div>\n                </Fragment>\n            }\n          </div>\n        </Fragment>\n      </FormInputWrapper>\n    );\n  }\n}\n\nSliderNew.defaultProps = {\n  desc: null,\n  hideWidth: 0,\n  prefix: null,\n  suffix: null,\n  extraInfo: null,\n  isProductSlider: false,\n  name: null,\n  change: null,\n  storeForm: null,\n  form: null,\n  maxWidth: '100%',\n  errorString: null,\n  formState: null,\n  formStateList: null,\n  displayList: null,\n};\n\nSliderNew.propTypes = {\n  isProductSlider: PropTypes.bool,\n  inputList: PropTypes.array.isRequired,\n  name: PropTypes.string,\n  change: PropTypes.func,\n  desc: PropTypes.string,\n  storeForm: PropTypes.object,\n  hideWidth: PropTypes.number,\n  form: PropTypes.string,\n  prefix: PropTypes.string,\n  suffix: PropTypes.string,\n  extraInfo: PropTypes.object,\n  maxWidth: PropTypes.string,\n  errorString: PropTypes.string,\n  formState: PropTypes.number,\n  formStateList: PropTypes.array,\n  displayList: PropTypes.array,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  storeForm: (getFormValues(ownProps.form)(state)),\n});\n\nexport default connect(mapStateToProps, null)(SliderNew);\n","/**\n * Slider.js\n * Selection with dynamic content\n *\n * @version 0.0.1\n * @author [Wilson](wilson@policypal.com)\n */\nimport document from 'global/document';\nimport window from 'global/window';\nimport React, { Component, Fragment } from 'react';\nimport { Field, getFormValues } from 'redux-form';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport FormInputWrapper from '../FormInputWrapper/FormInputWrapper';\nimport DropDownV2 from '../DropDown/DropDown';\n\nimport './SliderNew.scss';\n\nconst marginTopDefault = 0; // 60;\n\nconst SLIDERSTATE = {\n  ONIDLE: 0,\n  ONDOWN: 1,\n  ONUP: 2,\n};\n\n/**\n * Custom Selection Class\n */\nclass SliderNew extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      storeForm,\n      inputList,\n      name,\n      formState,\n      formStateList,\n    } = nextProps;\n\n    const { activeIndex } = prevState;\n\n    let indexToChange = null;\n    if (storeForm) {\n      const selectedTabString = storeForm[name];\n      const selectedTabIndex = inputList.indexOf(selectedTabString);\n      if (selectedTabIndex !== -1 && selectedTabIndex !== activeIndex) {\n        indexToChange = selectedTabIndex;\n      }\n    }\n\n    if (formState) {\n      const formStateIndex = _.findIndex(formStateList, listState => listState.state === formState);\n      if (formStateIndex !== activeIndex) {\n        indexToChange = formStateIndex;\n      }\n    }\n\n    if (indexToChange !== null) {\n      const len = inputList.length - 1;\n      const newWidth = indexToChange / len * 100;\n\n      return ({\n        activeIndex: indexToChange,\n        sliderWidth: newWidth,\n      });\n    }\n\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sliderWidth: 0,\n      sliderState: SLIDERSTATE.ONIDLE,\n      activeIndex: 0,\n      isUseDropDown: false,\n      marginTop: marginTopDefault,\n    };\n\n    this.renderKnobs = this.renderKnobs.bind(this);\n    this.renderSummary = this.renderSummary.bind(this);\n\n    this.handleResize = this.handleResize.bind(this);\n\n    this.handleSliderDown = this.handleSliderDown.bind(this);\n    this.handleSliderMove = this.handleSliderMove.bind(this);\n    this.handleSliderUp = this.handleSliderUp.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousemove', this.handleSliderMove);\n    document.addEventListener('mouseup', this.handleSliderUp);\n    window.addEventListener('resize', this.handleResize);\n\n    const {\n      storeForm,\n      name,\n      change,\n      inputList,\n      isProductSlider,\n    } = this.props;\n\n    if (!isProductSlider && !(storeForm && storeForm[name])) {\n      change(name, inputList[0]);\n    }\n\n    this.handleResize();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousemove', this.handleSliderMove);\n    document.removeEventListener('mouseup', this.handleSliderUp);\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  handleResize() {\n    const { hideWidth, isProductSlider } = this.props;\n    if (!isProductSlider && hideWidth > 0) {\n      const isDrop = window.innerWidth <= hideWidth;\n      this.setState({\n        isUseDropDown: isDrop,\n        marginTop: isDrop ? 0 : marginTopDefault,\n      });\n    }\n  }\n\n  handleSliderDown() {\n    const { sliderState } = this.state;\n\n    if (sliderState !== SLIDERSTATE.ONDOWN) {\n      this.setState({\n        sliderState: SLIDERSTATE.ONDOWN,\n      });\n    }\n  }\n\n  handleSliderMove(event) {\n    const { sliderState } = this.state;\n\n    if (sliderState === SLIDERSTATE.ONDOWN) {\n      const rect = this.sliderStart.getBoundingClientRect();\n      const position = Math.max(0, Math.min(event.clientX - rect.x - 5, rect.width)) / rect.width * 100;\n      this.setState({\n        sliderWidth: position,\n      });\n    }\n  }\n\n  handleSliderUp() {\n    this.handleClick();\n  }\n\n  handleClick(index = null) {\n    const { inputList, isProductSlider } = this.props;\n\n    const { sliderWidth } = this.state;\n    const len = inputList.length - 1;\n    const indexToUse = this.handleProductSlider(index === null ? Math.round(sliderWidth / 100 * len) : index);\n    const newWidth = indexToUse / len * 100;\n\n    if (!isProductSlider) {\n      const {\n        name,\n        change,\n      } = this.props;\n\n      change(name, inputList[indexToUse]);\n    }\n\n    this.setState({\n      sliderState: SLIDERSTATE.IDLE,\n      sliderWidth: newWidth,\n      activeIndex: indexToUse,\n    });\n\n    if (inputList[indexToUse].callback) {\n      inputList[indexToUse].callback();\n    }\n  }\n\n  handleProductSlider(indexToUse) {\n    const { formState, formStateList } = this.props;\n    if (!formState) {\n      return indexToUse;\n    }\n\n    const formStateIndex = _.findIndex(formStateList, listState => listState.state === formState);\n    const isValidSelection = indexToUse < formStateIndex;\n    if (isValidSelection && formStateList[indexToUse].callback) {\n      formStateList[indexToUse].callback(formState);\n    }\n\n    return isValidSelection ? indexToUse : formStateIndex;\n  }\n\n  renderKnobs() {\n    const { activeIndex } = this.state;\n    const { inputList, isProductSlider, displayList } = this.props;\n\n    const inputLength = inputList.length - 1;\n    return _.map(inputList, (data, index) => {\n      const leftOffset = index / inputLength * 100;\n      const isProductPassedPage = isProductSlider && index <= activeIndex;\n      let activeStyle = '';\n      if (isProductPassedPage || (!isProductSlider && index === activeIndex)) {\n        activeStyle = 'desc-active';\n      }\n      const sliderStyle = isProductPassedPage ? 'knob-done' : 'knob-default';\n      const indexToUse = index;\n      const dataToUse = displayList && displayList[index] ? displayList[index] : data;\n      const descStyle = isProductSlider ? 'desc-bottom' : '';\n\n      return (\n        <button\n          key={data}\n          tabIndex={-1}\n          className={`knob ${sliderStyle}`}\n          style={{ left: `${leftOffset}%` }}\n          onClick={(e) => { e.preventDefault(); this.handleClick(indexToUse); }}\n          onKeyDown={() => {}}\n        >\n          <p className={`${activeStyle} desc ${descStyle}`}>\n            {dataToUse}\n          </p>\n        </button>\n      );\n    });\n  }\n\n  renderSummary() {\n    const {\n      activeIndex,\n    } = this.state;\n\n    const {\n      inputList,\n      prefix,\n      suffix,\n      isProductSlider,\n      displayList,\n    } = this.props;\n\n    if (!isProductSlider) {\n      const value = inputList[activeIndex];\n      const valueToUse = displayList && displayList[activeIndex] ? displayList[activeIndex] : value;\n\n      return (\n        <div className=\"slider-summary-container-new\">\n          {\n            prefix ?\n              <span className=\"prefix-suffix\">{`${prefix} `}</span>\n            :\n              null\n          }\n          <span className=\"value\">{valueToUse}</span>\n          {\n            suffix ?\n              <span className=\"prefix-suffix\">{` ${suffix}`}</span>\n            :\n              null\n          }\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      sliderWidth,\n      isUseDropDown,\n      marginTop,\n    } = this.state;\n\n    const {\n      name,\n      desc,\n      form,\n      change,\n      inputList,\n      extraInfo,\n      isProductSlider,\n      maxWidth,\n      errorString,\n    } = this.props;\n\n    const knobColor1 = isProductSlider ? 'white-knob' : 'color-knob';\n    const knobColor2 = isProductSlider ? 'color-knob' : 'white-knob';\n\n    return (\n      <FormInputWrapper\n        desc={desc}\n        ref={node => (this.formParent = node)}\n        extraInfo={extraInfo}\n        errorString={errorString}\n      >\n        <Fragment>\n          {this.renderSummary()}\n          <div\n            className=\"slider-container-v3\"\n            style={{ marginTop, maxWidth }}\n          >\n            {\n              isUseDropDown ?\n                <DropDownV2\n                  form={form}\n                  change={change}\n                  name={name}\n                  placeholderString=\"Enter or select your destinations\"\n                  dropList={inputList}\n                  size=\"medium\"\n                  isDisableTyping\n                />\n              :\n                <Fragment>\n                  <div\n                    className=\"line\"\n                    ref={node => this.sliderStart = node}\n                  />\n                  <div\n                    className=\"line-green\"\n                    style={{ width: `${sliderWidth}%` }}\n                  />\n                  <div\n                    className=\"knob-container\"\n                  >\n                    {this.renderKnobs()}\n                  </div>\n                  <div\n                    className=\"knob-container\"\n                  >\n                    <button\n                      tabIndex={0}\n                      className={`slider-knob ${knobColor1}`}\n                      ref={node => this.slider = node}\n                      onMouseDown={this.handleSliderDown}\n                      onClick={e => e.preventDefault()}\n                      style={{ left: `${sliderWidth}%` }}\n                    >\n                      <div className={`inner ${knobColor2}`} />\n                    </button>\n                    {\n                      isProductSlider ?\n                        null\n                      :\n                        <Field name={name} component={() => null} />\n                    }\n                  </div>\n                </Fragment>\n            }\n          </div>\n        </Fragment>\n      </FormInputWrapper>\n    );\n  }\n}\n\nSliderNew.defaultProps = {\n  desc: null,\n  hideWidth: 0,\n  prefix: null,\n  suffix: null,\n  extraInfo: null,\n  isProductSlider: false,\n  name: null,\n  change: null,\n  storeForm: null,\n  form: null,\n  maxWidth: '100%',\n  errorString: null,\n  formState: null,\n  formStateList: null,\n  displayList: null,\n};\n\nSliderNew.propTypes = {\n  isProductSlider: PropTypes.bool,\n  inputList: PropTypes.array.isRequired,\n  name: PropTypes.string,\n  change: PropTypes.func,\n  desc: PropTypes.string,\n  storeForm: PropTypes.object,\n  hideWidth: PropTypes.number,\n  form: PropTypes.string,\n  prefix: PropTypes.string,\n  suffix: PropTypes.string,\n  extraInfo: PropTypes.object,\n  maxWidth: PropTypes.string,\n  errorString: PropTypes.string,\n  formState: PropTypes.number,\n  formStateList: PropTypes.array,\n  displayList: PropTypes.array,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  storeForm: (getFormValues(ownProps.form)(state)),\n});\n\nexport default connect(mapStateToProps, null)(SliderNew);\n","/**\n * StepProgressBar.js\n * Used to display the progress steps used in all categories\n *\n * @version 0.0.1\n * @author [Wilson](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'reactstrap';\n\nimport Slider from '../../FormsNew/Slider/SliderNew';\nimport SliderNew from '../../FormsV3/Slider/SliderNew';\n\nimport { setInsuranceFormState, FORMSTATES } from '../../../actions/insuranceActions';\n\nimport './StepProgressBarNew.scss';\n\nclass StepProgressBarNew extends Component {\n  constructor(props) {\n    super(props);\n    this.getStateList = this.getStateList.bind(this);\n    this.renderDescription = this.renderDescription.bind(this);\n  }\n\n  getStateList() {\n    const {\n      stateList,\n      history,\n    } = this.props;\n\n    return _.map(stateList, (state, index) => ({\n      state: state.index,\n      callback: (formState) => {\n        const currIndex = _.findIndex(stateList, s => s.index === formState);\n        history.go(-(currIndex - index));\n      },\n    }));\n  }\n\n  renderDescription() {\n    const {\n      formState,\n      stateList,\n      stateDescriptions,\n      charged,\n      history,\n    } = this.props;\n\n    try {\n      const currIndex = _.findIndex(stateList, state => state.index === formState);\n      const mainDesc = charged ? 'Receipt' : stateDescriptions[currIndex].main;\n      const subDesc = stateDescriptions[currIndex].sub;\n\n      if (!mainDesc && !subDesc) {\n        return null;\n      }\n\n      return (\n        <Col className=\"step-progress-description-container-new\" xs={12}>\n          {\n            currIndex !== 0 ?\n              <button\n                className=\"back-button\"\n                onClick={() => {\n                  history.goBack();\n                }}\n              >\n                Back\n              </button>\n            :\n              null\n          }\n          {\n            mainDesc ?\n              <p className=\"main\">{mainDesc}</p>\n            :\n              null\n          }\n          {\n            subDesc ?\n              <p className=\"sub\">{subDesc}</p>\n            :\n              null\n          }\n        </Col>\n      );\n    } catch (error) {\n      return null;\n    }\n  }\n\n  render() {\n    const {\n      formState,\n      charged,\n      inputList,\n      maxWidth,\n      className,\n      formStates,\n      v3Slider,\n    } = this.props;\n\n    const formStatesToUse = formStates || FORMSTATES;\n\n    if (formState !== formStatesToUse.MAIN.index && !charged) {\n      return (\n        <Row className={`justify-content-center ${className}`} noGutters>\n          <Col className=\"mx-auto product-slider-new\" xs={12}>\n            {\n              v3Slider ?\n                <SliderNew\n                  isProductSlider\n                  hideWidth={576}\n                  maxWidth={maxWidth}\n                  inputList={inputList}\n                  formStateList={this.getStateList()}\n                  formState={formState}\n                />\n              :\n                <Slider\n                  isProductSlider\n                  hideWidth={576}\n                  maxWidth={maxWidth}\n                  inputList={inputList}\n                  formStateList={this.getStateList()}\n                  formState={formState}\n                />\n            }\n          </Col>\n          {this.renderDescription()}\n        </Row>\n      );\n    }\n\n    return null;\n  }\n}\n\nStepProgressBarNew.defaultProps = {\n  charged: null,\n  maxWidth: '400px',\n  className: '',\n  formStates: null,\n  v3Slider: false,\n};\n\nStepProgressBarNew.propTypes = {\n  formState: PropTypes.number.isRequired,\n  // setInsurFormState: PropTypes.func.isRequired,\n  inputList: PropTypes.array.isRequired,\n  stateList: PropTypes.array.isRequired,\n  charged: PropTypes.bool,\n  stateDescriptions: PropTypes.array.isRequired,\n  maxWidth: PropTypes.string,\n  history: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  formStates: PropTypes.object,\n  v3Slider: PropTypes.bool,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setInsurFormState: (state) => {\n    dispatch(setInsuranceFormState(state));\n  },\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(StepProgressBarNew));\n"],"sourceRoot":""}