{"version":3,"sources":["assets/images/Profile/Female.png","assets/images/Profile/Male.png","components/Profile/ProfileCashback.js","components/Profile/ProfileForm.js","components/Profile/Profile.js","containers/Profile/ProfileContainer.js","components/Forms/DatePicker/DatePickerV2.js","assets/images/common/CashbackLogo.svg","assets/images/forms/dateIn.svg","assets/images/forms/dateOut.svg","components/Templates/CashbackBalance/CashbackBalance.js"],"names":["module","exports","__webpack_require__","p","ProfileCashback","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderCashbackList","bind","assertThisInitialized","renderFreshCashback","rewardData","_","map","data","index","bgSyle","date","ISOStringToFormDate","created_at","pointsSymbol","type","pointsDeductStyle","react_default","a","createElement","react","key","concat","className","colSpan","insurer","policy_name","reward_points","status","history","reactstrap_es","xs","Button","variant","width","height","onClick","push","src","CashbackLogo","alt","noGutters","responsive","Component","defaultProps","withRouter","userLabels","ProfileForm","state","errorStringData","message","handleSubmit","validateForm","nextProps","prevState","userDetails","change","result","syncStoreToForm","label","e","isSubmit","errorResult","getPostal","postal_code","setState","isFirstValidate","loading","loadingEnd","storeForm","formToUse","isEmptyResult","isEmpty","setTimeout","updateTabHeight","dateReValidate","error","_this2","token","saveProfile","_this3","_this$props2","form","constants","onSubmit","sm","TextInput","name","placeholderString","size","zIndex","desc","errorString","firstName","surname","DropDownV2","dropList","idTypes","id_type","nric","toUpper","nationalities","nationality","DatePickerV2","dateOfBirth","gender","maritalStatus","marital_status","race","occupations","occupation","contact","smoker","address","unit_no","isPostCode","addressFields","unitNo","renderMessage","reduxForm","destroyOnUnmount","connect","getFormValues","dispatch","profile","callBack","errorMsg","time","setLoading","clearLoading","Profile","renderLeftProfile","renderCashbackbalance","renderCashbackInfo","resetInsurance","onPageInsurance","NONE","resetMore","onPageMore","resetBusiness","onPageBusiness","_this$props","resetIndicatorInsurance","resetIndicatorMore","resetIndicatorBusiness","logOut","profilePic","toUpperCase","Female","Male","cashbackBalance","CashbackBalance","toString","validString","href","target","_this$props3","TabView","maxTabWidthPx","tabs","isDisableDropdown","Profile_ProfileForm","Profile_ProfileCashback","FooterContainer","marginTop","setStateInsurance","setStateMore","setStateBusiness","ProfileContainer","getRewards","logout","components_Profile_Profile","reward_points_expire_at","insurance","getRewardDetails","clearLoginData","placeholderStringDefault","monthTextMapping","mediumHeight","bigHeight","deafultYearRange","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","startDate","endDate","currDate","Date","year","getFullYear","month","getMonth","firstDay","lastDay","dateRangeStart","dateRangeEnd","placeHolder","isOpened","selectedString","currFirstDay","currLastDay","selectedStartDate","selectedEndDate","handleSelectClick","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","handleClickOutside","handleOnInputChange","handleKeyPress","handleExit","handleBlur","handleFocus","setSelectedDate","setNewDate","setCalender","onMovement","isFromFocus","updateStartEndDate","dateName","dateReformed","storeStringToDate","isRange","incomingStartDate","incomingEndDate","isDateEqual","document","addEventListener","window","formStore","dateInner","dateInnerDOM","ReactDOM","findDOMNode","datePickerDOM","wrapperRef","prevProps","_this$state","isStart","removeEventListener","toggleDateInner","_this$state2","isOverHeight","getBoundingClientRect","bottom","outerHeight","setArrowUp","top","style","left","extraState","arguments","length","undefined","selectedCallback","newYear","newMonth","_Users_wilson_PolicyPal_PolicyPal_Ecommerce_Reactjs_Dev_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","setNewState","_this$state3","focus","_this$state4","endRef","storeString","dateString","currDay","getDate","slice","currMonth","currYear","newSelectedStartDate","newSelectedEndDate","wrappedInstance","event","_this$state5","_this$props4","isTargetWithinDateRangePicker","contains","doNotBlur","charCode","preventDefault","_this$state6","_this$props5","selectedStart","start_date","selectedEnd","end_date","inputField","input","getRenderedComponent","blur","value","defaultValue","relatedTarget","isChildren","isClicked","_this$state7","_this$props6","isError","moment","isValid","selectedDate","parts","split","_this4","_this$state8","_this$props7","maxWidth","extraInfo","mainStyle","dropDownOpenStyle","isErrorStyle","rangeIcon","DateIn","DateOut","rangIconStyle","refValue","react__WEBPACK_IMPORTED_MODULE_9___default","_FormInputWrapper_FormInputWrapper__WEBPACK_IMPORTED_MODULE_18__","ref","node","formParent","onBlur","onFocus","onKeyUp","role","tabIndex","redux_form__WEBPACK_IMPORTED_MODULE_12__","withRef","component","placeholder","autoComplete","onChange","onKeyPress","onMouseDown","innerWidth","Arrow","ownProps","datepicker","datePickerInner","react__WEBPACK_IMPORTED_MODULE_5___default"],"mappings":"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","file":"static/js/profile.e3d9e0fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Female.d0efc021.png\";","module.exports = __webpack_public_path__ + \"static/media/Male.54e96d83.png\";","/**\n * ProfileCashback.js\n * Cashback portion for profile view\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Row, Col, Table } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport CashbackLogo from 'assets/images/common/CashbackLogo.svg';\nimport { ISOStringToFormDate } from 'lib/dateFunctions';\n\nimport Button from 'components/FormsV3/Button/Button';\n\nimport './Profile.scss';\n\nclass ProfileCashback extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderCashbackList = this.renderCashbackList.bind(this);\n    this.renderFreshCashback = this.renderFreshCashback.bind(this);\n  }\n\n  renderCashbackList() {\n    const { rewardData } = this.props;\n\n    return _.map(rewardData, (data, index) => {\n      const bgSyle = index % 2 ? 'cell-colored' : '';\n      const date = ISOStringToFormDate(data.created_at);\n      const pointsSymbol = data.type === 'add' ? '+' : '-';\n      const pointsDeductStyle = data.type === 'add' ? '' : 'table-amount-minus';\n\n      return (\n        <Fragment key={`casback-${index}`}>\n          <tr className=\"d-table-row d-sm-none resp-height\">\n            <td className=\"resp-height cell-header\" colSpan={3}>\n              <div className=\"table-item-container resp-height\">\n                <p className=\"table-item-text resp-text\">{data.insurer} - {data.policy_name}</p>\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td className={`d-none d-sm-table-cell ${bgSyle}`}>\n              <div className=\"table-item-container\">\n                <p className=\"table-item-text\">{data.insurer}</p>\n                <p className=\"table-item-text\">{data.policy_name}</p>\n              </div>\n            </td>\n            <td>\n              <div className={`table-item-container ${bgSyle}`}>\n                <p className=\"table-item-text\">{date}</p>\n              </div>\n            </td>\n            <td>\n              <div className={`table-item-container ${bgSyle}`}>\n                <p className={`table-amount-text ${pointsDeductStyle}`}>{`${pointsSymbol}${data.reward_points}`}</p>\n              </div>\n            </td>\n            <td>\n              <div className={`table-item-container ${bgSyle}`}>\n                <p\n                  className={`table-completed-text ${data.status === 'pending' ? 'table-pending-text' : 'table-completed-text'}`}\n                >\n                  {data.status}\n                </p>\n              </div>\n            </td>\n          </tr>\n        </Fragment>\n      );\n    });\n  }\n\n  renderFreshCashback() {\n    const { history } = this.props;\n    return (\n      <Col className=\"fresh-cashback-container\" xs={12}>\n        <p className=\"fresh-text\">No record found, start earning cashbacks by purchasing a Travel/Motor plan!</p>\n        <Button\n          variant=\"medium-flat-green\"\n          width={200}\n          height={72}\n          onClick={() => history.push('/categories')}\n        >\n          <p>Get Covered</p>\n        </Button>\n      </Col>\n    );\n  }\n\n  render() {\n    const { rewardData } = this.props;\n\n    return (\n      <Fragment>\n        <Row>\n          <Col className=\"cashback-history-container\" xs={12}>\n            <img src={CashbackLogo} alt=\"CashbackLogo.svg\" />\n            <p>Cashback History</p>\n          </Col>\n        </Row>\n        <Row className=\"profile-cashback-container\" noGutters>\n          <Table responsive>\n            <thead>\n              <tr>\n                <th className=\"d-none d-sm-table-cell\">\n                  <div className=\"table-item-container\">\n                    <p>Plan</p>\n                  </div>\n                </th>\n                <th>\n                  <div className=\"table-item-container\">\n                    <p>Date</p>\n                  </div>\n                </th>\n                <th>\n                  <div className=\"table-item-container\">\n                    <p>Amount</p>\n                  </div>\n                </th>\n                <th>\n                  <div className=\"table-item-container\">\n                    <p>Status</p>\n                  </div>\n                </th>\n              </tr>\n            </thead>\n            {\n              rewardData ?\n                <tbody>\n                  {this.renderCashbackList()}\n                </tbody>\n              :\n                null\n            }\n          </Table>\n          {\n            !rewardData ?\n              this.renderFreshCashback()\n            :\n              null\n          }\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\nProfileCashback.defaultProps = {\n  rewardData: null,\n};\n\nProfileCashback.propTypes = {\n  rewardData: PropTypes.array,\n  history: PropTypes.object.isRequired,\n};\n\nexport default withRouter(ProfileCashback);\n\n","/**\n * ProfileForm.js\n * The user detail form in profile page\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, getFormValues } from 'redux-form';\nimport { Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/FormsV3/Button/Button';\nimport DatePickerV2 from '../Forms/DatePicker/DatePickerV2';\nimport DropDownV2 from '../Forms/DropDown/DropDownV2';\nimport TextInput from '../Forms/TextInput/TextInput';\n\nimport { getPostal } from '../../actions/insuranceActions';\nimport { setLoading, clearLoading } from '../../actions/loadingScreenActions';\nimport { saveProfile } from '../../actions/userActions';\nimport { validateForm, dateReValidate } from '../../lib/validators';\n\nimport './Profile.scss';\n\nconst userLabels = [\n  'firstName',\n  'surname',\n  'id_type',\n  'nric',\n  'nationality',\n  'dateOfBirth',\n  'gender',\n  'marital_status',\n  'race',\n  'occupation',\n  'contact',\n  'smoker',\n  'address',\n  'unit_no',\n  'postal_code',\n];\n\nconst profileFormName = 'profile';\n\nclass ProfileForm extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { userDetails, change } = nextProps;\n\n    let result = null;\n    if (userDetails) {\n      if (!prevState.userDetails || userDetails.data !== prevState.userDetails.data) {\n        ProfileForm.syncStoreToForm(userDetails.data, change);\n        result = { userDetails };\n      }\n    }\n\n    return result;\n  }\n\n  static syncStoreToForm(userDetails, change) {\n    _.map(userLabels, (label) => {\n      change(label, userDetails[label]);\n    });\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorStringData: {},\n      message: null,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n  }\n\n  async validateForm(e, isSubmit = false) {\n    const errorResult = validateForm(e, userLabels);\n\n    if (isSubmit) {\n      const postalResult = await getPostal(e.postal_code);\n      if (!postalResult) {\n        errorResult.postal_code = 'Invalid postal code';\n      }\n    }\n\n    this.setState({\n      errorStringData: errorResult,\n    });\n\n    return errorResult;\n  }\n\n  async handleSubmit(e, isFirstValidate = true) {\n    const {\n      userDetails,\n      loading,\n      loadingEnd,\n      storeForm,\n    } = this.props;\n    const formToUse = isFirstValidate ? e : storeForm;\n    const errorResult = await this.validateForm(formToUse, true);\n    const isEmptyResult = _.isEmpty(errorResult);\n\n    setTimeout(this.props.updateTabHeight, 10);\n    if (dateReValidate(\n      isEmptyResult,\n      isFirstValidate,\n      errorResult,\n      error => this.setState({ errorStringData: error }),\n      () => this.handleSubmit(storeForm, false),\n    )) {\n      return;\n    }\n\n    if (isEmptyResult &&\n      userDetails &&\n      userDetails.data &&\n      userDetails.data.token) {\n      loading();\n      const result = await this.props.saveProfile(userDetails.data.token, formToUse);\n      const message = result ? 'Profile has been updated.' : 'An error has occured. Please try again.';\n      this.setState({\n        message,\n      });\n\n      loadingEnd();\n    }\n  }\n\n  renderMessage() {\n    const { message } = this.state;\n    if (message) {\n      return (\n        <Col xs={12}>\n          <p className=\"message\">{message}</p>\n        </Col>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const { errorStringData } = this.state;\n    const {\n      change,\n      form,\n      handleSubmit,\n      constants,\n      storeForm,\n    } = this.props;\n\n    return (\n      <form onSubmit={handleSubmit(this.handleSubmit)}>\n        <Row className=\"profile-form\" noGutters>\n          <Col className=\"form-right-padding\" xs={12} sm={6}>\n            <TextInput\n              form={form}\n              change={change}\n              name=\"firstName\"\n              placeholderString=\"\"\n              size=\"medium\"\n              zIndex={99}\n              desc=\"First name\"\n              errorString={errorStringData.firstName}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-left-padding\" xs={12} sm={6}>\n            <TextInput\n              form={form}\n              change={change}\n              name=\"surname\"\n              placeholderString=\"\"\n              size=\"medium\"\n              zIndex={97}\n              desc=\"Last name\"\n              errorString={errorStringData.surname}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-right-padding\" xs={12} sm={6}>\n            <DropDownV2\n              form={form}\n              change={change}\n              name=\"id_type\"\n              placeholderString=\"Select ID Type\"\n              dropList={constants.idTypes}\n              size=\"medium\"\n              zIndex={96}\n              desc=\"Type of ID\"\n              errorString={errorStringData.id_type}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-left-padding\" xs={12} sm={6}>\n            <TextInput\n              form={form}\n              change={change}\n              name=\"nric\"\n              placeholderString=\"\"\n              size=\"medium\"\n              zIndex={95}\n              desc=\"ID Number\"\n              errorString={errorStringData.nric}\n              validateForm={() => this.validateForm(storeForm)}\n              toUpper\n            />\n          </Col>\n          <Col className=\"form-right-padding\" xs={12} sm={6}>\n            <DropDownV2\n              form={form}\n              change={change}\n              name=\"nationality\"\n              placeholderString=\"Select Nationality\"\n              dropList={constants.nationalities}\n              size=\"medium\"\n              zIndex={94}\n              desc=\"Nationality\"\n              errorString={errorStringData.nationality}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-left-padding\" xs={12} sm={6}>\n            <DatePickerV2\n              form={form}\n              change={change}\n              name=\"dateOfBirth\"\n              size=\"medium\"\n              zIndex={93}\n              desc=\"Date of birth\"\n              errorString={errorStringData.dateOfBirth}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-right-padding\" xs={12} sm={6}>\n            <DropDownV2\n              form={form}\n              change={change}\n              name=\"gender\"\n              placeholderString=\"Select Gender\"\n              dropList={constants.gender}\n              size=\"medium\"\n              zIndex={92}\n              desc=\"Gender\"\n              errorString={errorStringData.gender}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-left-padding\" xs={12} sm={6}>\n            <DropDownV2\n              form={form}\n              change={change}\n              name=\"marital_status\"\n              placeholderString=\"Select Marital Status\"\n              dropList={constants.maritalStatus}\n              size=\"medium\"\n              zIndex={91}\n              desc=\"Marital Status\"\n              errorString={errorStringData.marital_status}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-right-padding\" xs={12} sm={6}>\n            <DropDownV2\n              form={form}\n              change={change}\n              name=\"race\"\n              placeholderString=\"Select Race\"\n              dropList={constants.race}\n              size=\"medium\"\n              zIndex={90}\n              desc=\"Race\"\n              errorString={errorStringData.race}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-left-padding\" xs={12} sm={6}>\n            <DropDownV2\n              form={form}\n              change={change}\n              name=\"occupation\"\n              placeholderString=\"Select Occupation\"\n              dropList={constants.occupations}\n              size=\"medium\"\n              zIndex={89}\n              desc=\"Occupation\"\n              errorString={errorStringData.occupation}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-right-padding\" xs={12} sm={6}>\n            <TextInput\n              form={form}\n              change={change}\n              name=\"contact\"\n              placeholderString=\"\"\n              size=\"medium\"\n              zIndex={88}\n              desc=\"Mobile Number\"\n              errorString={errorStringData.contact}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-left-padding\" xs={12} sm={6}>\n            <DropDownV2\n              form={form}\n              change={change}\n              name=\"smoker\"\n              placeholderString=\"Select Smoking Status\"\n              dropList={constants.smoker}\n              size=\"medium\"\n              zIndex={87}\n              desc=\"Smoking Status\"\n              errorString={errorStringData.smoker}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-seperator\" xs={12}>\n            <p>Address</p>\n          </Col>\n          <Col xs={12}>\n            <TextInput\n              form={form}\n              change={change}\n              name=\"address\"\n              placeholderString=\"\"\n              size=\"medium\"\n              zIndex={86}\n              desc=\"Address\"\n              errorString={errorStringData.address}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-right-padding\" xs={12} sm={6}>\n            <TextInput\n              form={form}\n              change={change}\n              name=\"unit_no\"\n              placeholderString=\"\"\n              size=\"medium\"\n              zIndex={85}\n              desc=\"Unit No\"\n              errorString={errorStringData.unit_no}\n              validateForm={() => this.validateForm(storeForm)}\n            />\n          </Col>\n          <Col className=\"form-left-padding\" xs={12} sm={6}>\n            <TextInput\n              form={form}\n              change={change}\n              name=\"postal_code\"\n              placeholderString=\"\"\n              size=\"medium\"\n              zIndex={84}\n              desc=\"Postcode\"\n              errorString={errorStringData.postal_code}\n              validateForm={() => this.validateForm(storeForm)}\n              isPostCode\n              addressFields={{\n                address: 'address',\n                unitNo: 'unit_no',\n              }}\n            />\n          </Col>\n          {this.renderMessage()}\n          <Col className=\"submit-container\" xs={12}>\n            <Button\n              variant=\"medium-flat-green\"\n              width={200}\n              height={72}\n              type=\"submit\"\n            >\n              <p>Save</p>\n            </Button>\n          </Col>\n        </Row>\n      </form>\n    );\n  }\n}\n\nProfileForm.defaultProps = {\n  storeForm: null,\n};\n\nProfileForm.propTypes = {\n  saveProfile: PropTypes.func.isRequired,\n  change: PropTypes.func.isRequired,\n  form: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  constants: PropTypes.object.isRequired,\n  userDetails: PropTypes.object.isRequired,\n  loading: PropTypes.func.isRequired,\n  loadingEnd: PropTypes.func.isRequired,\n  updateTabHeight: PropTypes.func.isRequired,\n  storeForm: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n  storeForm: getFormValues(profileFormName)(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  saveProfile: (token, profile) => (\n    dispatch(saveProfile(token, profile))\n  ),\n  loading: (callBack, errorMsg, time) => {\n    dispatch(setLoading(callBack, errorMsg, time));\n  },\n  loadingEnd: () => {\n    dispatch(clearLoading());\n  },\n});\n\nexport default reduxForm({\n  form: profileFormName,\n  destroyOnUnmount: false,\n})(connect(mapStateToProps, mapDispatchToProps)(ProfileForm));\n\n","/**\n * Profile.js\n * Profile view for logged in personnal\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { getFormValues } from 'redux-form';\nimport { withRouter } from 'react-router-dom';\nimport { Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport Female from 'assets/images/Profile/Female.png';\nimport Male from 'assets/images/Profile/Male.png';\nimport CashbackLogo from 'assets/images/common/CashbackLogo.svg';\n\nimport Button from 'components/FormsV3/Button/Button';\nimport CashbackBalance from '../Templates/CashbackBalance/CashbackBalance';\nimport TabView from '../Templates/TabView/TabView';\n\nimport FooterContainer from '../../containers/FooterContainer';\nimport ProfileCashback from './ProfileCashback';\nimport ProfileForm from './ProfileForm';\n\nimport './Profile.scss';\n\nimport {\n  onPageInsurance,\n  setStateInsurance,\n  onPageMore,\n  setStateMore,\n  onPageBusiness,\n  setStateBusiness,\n} from '../../actions/navActions';\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLeftProfile = this.renderLeftProfile.bind(this);\n    this.renderCashbackbalance = this.renderCashbackbalance.bind(this);\n    this.renderCashbackInfo = this.renderCashbackInfo.bind(this);\n\n    // Set Insurance Page Indicator\n    const resetInsurance = onPageInsurance.NONE;\n    // Reset More Page Indicator\n    const resetMore = onPageMore.NONE;\n\n    // Reset Business Page Indicator\n    const resetBusiness = onPageBusiness.NONE;\n\n    const {\n      resetIndicatorInsurance,\n      resetIndicatorMore,\n      resetIndicatorBusiness,\n    } = this.props;\n    resetIndicatorInsurance(resetInsurance);\n    resetIndicatorMore(resetMore);\n    resetIndicatorBusiness(resetBusiness);\n  }\n\n  renderLeftProfile() {\n    const { logOut, userDetails, storeForm } = this.props;\n    const profilePic = storeForm &&\n      storeForm.gender &&\n      storeForm.gender.toUpperCase() === 'FEMALE' ? Female : Male;\n\n    return (\n      <div className=\"profile-pic-container\">\n        <div className=\"profile-pic\">\n          <img src={profilePic} alt=\"Profile Pic\" />\n        </div>\n        <p className=\"profile-name\">{userDetails.data.surname} {userDetails.data.firstName}</p>\n        <Button\n          variant=\"medium-outline\"\n          width={132}\n          height={36}\n          onClick={logOut}\n        >\n          <p>Logout</p>\n        </Button>\n      </div>\n    );\n  }\n\n  renderCashbackbalance() {\n    const { cashbackBalance } = this.props;\n\n    return (\n      <CashbackBalance cashbackBalance={cashbackBalance.toString()} />\n    );\n  }\n\n  renderCashbackInfo() {\n    const { validString } = this.props;\n\n    if (validString) {\n      return (\n        <div className=\"cashback-how\">\n          <p className=\"valid-text\">Valid till: {validString}</p>\n        </div>\n      );\n    }\n\n    return (\n      <a className=\"cashback-how\" href=\"/cashback\" target=\"_blank\">\n        <div className=\"cashback-how-inner\">\n          <p className=\"question\">?</p>\n          <p>How to earn</p>\n          <img src={CashbackLogo} alt=\"CashbackLogo.svg\" />\n          <p>Cashback?</p>\n        </div>\n      </a>\n    );\n  }\n\n  render() {\n    const {\n      rewardData,\n      userDetails,\n      constants,\n      storeForm,\n    } = this.props;\n\n    return (\n      <Fragment>\n        <Row className=\"profile-container\" noGutters>\n          {this.renderLeftProfile()}\n          <div className=\"profile-detail-container\">\n            <Col xs={12}>\n              <p className=\"profile-header\">My Account</p>\n            </Col>\n            <Col className=\"cashback-top-container\" xs={12}>\n              <Row noGutters>\n                <Col xs={12} sm={6}>\n                  {this.renderCashbackbalance()}\n                </Col>\n                <Col xs={12} sm={6}>\n                  {this.renderCashbackInfo()}\n                </Col>\n              </Row>\n            </Col>\n            <Col xs={12}>\n              <TabView\n                maxTabWidthPx={128}\n                tabs={[\n                  'Overview',\n                  'Cashback',\n                ]}\n                isDisableDropdown\n                name=\"profile-tab\"\n              >\n                {[\n                  <ProfileForm\n                    key=\"profileForm\"\n                    userDetails={userDetails}\n                    constants={constants}\n                    storeForm={storeForm}\n                  />,\n                  <ProfileCashback\n                    key=\"profileCashback\"\n                    rewardData={rewardData}\n                  />,\n                ]}\n              </TabView>\n            </Col>\n          </div>\n        </Row>\n        <FooterContainer\n          marginTop={-50}\n        />\n      </Fragment>\n    );\n  }\n}\n\nProfile.defaultProps = {\n  rewardData: null,\n  validString: null,\n  cashbackBalance: 0,\n  storeForm: null,\n  resetIndicatorInsurance: null,\n  resetIndicatorMore: null,\n  resetIndicatorBusiness: null,\n};\n\nProfile.propTypes = {\n  rewardData: PropTypes.array,\n  validString: PropTypes.string,\n  cashbackBalance: PropTypes.number,\n  logOut: PropTypes.func.isRequired,\n  userDetails: PropTypes.object.isRequired,\n  constants: PropTypes.object.isRequired,\n  storeForm: PropTypes.object,\n  resetIndicatorInsurance: PropTypes.func,\n  resetIndicatorMore: PropTypes.func,\n  resetIndicatorBusiness: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  storeForm: getFormValues('profile')(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetIndicatorInsurance: (resetInsurance) => {\n    dispatch(setStateInsurance(resetInsurance));\n  },\n  resetIndicatorMore: (resetMore) => {\n    dispatch(setStateMore(resetMore));\n  },\n  resetIndicatorBusiness: (resetBusiness) => {\n    dispatch(setStateBusiness(resetBusiness));\n  },\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Profile));\n","/**\n * ProfileContainer.js\n * Profile Container.\n *\n * Will get cashback details only here.\n *\n * @version 0.0.1\n * @author [Wilson](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport Profile from '../../components/Profile/Profile';\n\nimport { getRewardDetails, clearLoginData } from '../../actions/userActions';\n\nclass ProfileContainer extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { userDetails, getRewards, history } = nextProps;\n\n    let result = null;\n    if (userDetails) {\n      if (userDetails.data !== prevState.userDetails.data) {\n        if (userDetails.data && userDetails.data.token) {\n          getRewards(userDetails.data.token);\n        } else {\n          history.push('/');\n        }\n\n        result = { userDetails };\n      }\n\n      if (userDetails.data && userDetails.rewardData !== prevState.userDetails.rewardData) {\n        result = { userDetails };\n      }\n    }\n\n    return result;\n  }\n\n  constructor(props) {\n    super(props);\n\n    const { userDetails, getRewards } = this.props;\n    if (userDetails && userDetails.data && !userDetails.rewardData) {\n      getRewards(userDetails.data.token);\n    }\n\n    this.state = {\n      userDetails,\n    };\n\n    this.logOut = this.logOut.bind(this);\n  }\n\n  logOut() {\n    const { logout, history } = this.props;\n\n    logout();\n    history.push('/');\n  }\n\n  render() {\n    const { userDetails } = this.state;\n    const { constants } = this.props;\n    const { data, rewardData } = userDetails;\n\n    if (!userDetails.data || !constants) {\n      return null;\n    }\n\n    return (\n      <Profile\n        userDetails={userDetails}\n        rewardData={rewardData}\n        validString={data.reward_points_expire_at}\n        cashbackBalance={data.reward_points}\n        logOut={this.logOut}\n        constants={constants}\n      />\n    );\n  }\n}\n\nProfileContainer.defaultProps = {\n  constants: null,\n};\n\nProfileContainer.propTypes = {\n  userDetails: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n  constants: PropTypes.object,\n  getRewards: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  userDetails: state.userDetails,\n  constants: state.insurance.constants,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getRewards: token => (\n    dispatch(getRewardDetails(token))\n  ),\n  logout: () => (\n    dispatch(clearLoginData())\n  ),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProfileContainer));\n","/**\n * DatePickerV2.js\n * Custom form dropdown menu with input\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { Field, getFormValues } from 'redux-form';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport Arrow from 'assets/images/forms/arrow.svg';\nimport DateIn from 'assets/images/forms/dateIn.svg';\nimport DateOut from 'assets/images/forms/dateOut.svg';\n\nimport FormInputWrapper from '../FormInputWrapper/FormInputWrapper';\nimport { isDateEqual, storeStringToDate } from '../../../lib/dateFunctions';\n\nimport '../DropDown/DropDown.scss';\nimport './DatePickerV2.scss';\n\n/**\n * Constants\n */\n// Placeholder string when no input\nconst placeholderStringDefault = 'dd/mm/yyy';\n// Month text for display\nconst monthTextMapping = [\n  'January',\n  'Feburary',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\n// Height for medium dropdown\nconst mediumHeight = 60;\n// Height for big dropdown\nconst bigHeight = 72;\n// Default year range if not user defined\nconst deafultYearRange = 100;\n\n\n/**\n * Custom Form Dropdown class\n */\nclass DatePickerV2 extends Component {\n  /**\n   * Lifecycle Method - getDerivedStateFromProps\n   *\n   * Used to set sibling date range values for\n   * selected start and end date\n   *\n   * @param {object} nextProps Component props\n   */\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const result = {};\n\n    // Update selected Start End date state\n    function updateStartEndDate(dateName, date) {\n      const dateReformed = storeStringToDate(date);\n      if (dateReformed !== -1) {\n        result[dateName] = dateReformed;\n      }\n    }\n\n    // Only valid for date range picker\n    const { isRange, endDate } = nextProps;\n\n    if (isRange) {\n      const {\n        incomingStartDate,\n        incomingEndDate,\n      } = nextProps;\n      updateStartEndDate('selectedStartDate', incomingStartDate);\n      updateStartEndDate('selectedEndDate', incomingEndDate);\n    }\n\n    // Update end date from date range picker\n    if (endDate && !isDateEqual(endDate, prevState.dateRangeEnd)) {\n      result.dateRangeEnd = endDate;\n    }\n\n    return result === {} ? null : result;\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {object} props Component props\n   */\n  constructor(props) {\n    super(props);\n\n    // size - Size of this control\n    // startDate - Start range of date\n    // endDate - End range of date\n    // currDate - Day to set current view in calender (Default to today)\n    const {\n      size,\n      startDate,\n      endDate,\n      currDate,\n      placeholderString,\n    } = this.props;\n\n    // Get the control height\n    const height = size === 'big' ? bigHeight : mediumHeight;\n\n    // Get current date\n    const date = currDate || new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    // Get first and last day of the month to display\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    // Get the calender range\n    const dateRangeStart = startDate != null ? startDate : new Date(year - deafultYearRange, month);\n    const dateRangeEnd = endDate != null ? endDate : new Date(year + deafultYearRange, month);\n\n    // Get default placeholder string\n    const placeHolder = placeholderString != null ? placeholderString : placeholderStringDefault;\n\n    // isOpened - Whether dropdown is opened\n    // isError - Whether there is input error\n    // selectedString - The selected date string\n    // height - Control height\n    // currDate - Current selected date in view\n    // currFirstDay - Current first day of the month in view\n    // currLastDay - Current last day of the month in view\n    // monthDropdownOpen - Whether month selector is opened\n    // yearDropdownOpen - Whether year selector is opened\n    // selectedStartDate - Selected start date(If single select also use this)\n    // selectedEndDate - Selected end date for date range picker\n    // dateRangeStart - The actual calender start range\n    // dateRangeEnd - The actual calender end range\n    this.state = {\n      isOpened: false,\n      selectedString: placeHolder,\n      height,\n      currDate: date,\n      currFirstDay: firstDay,\n      currLastDay: lastDay,\n      selectedStartDate: null,\n      selectedEndDate: null,\n      dateRangeStart,\n      dateRangeEnd,\n      placeHolder,\n    };\n\n    this.handleSelectClick = this.handleSelectClick.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.handleOnInputChange = this.handleOnInputChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleExit = this.handleExit.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n\n    this.setSelectedDate = this.setSelectedDate.bind(this);\n    this.setNewDate = this.setNewDate.bind(this);\n    this.setCalender = this.setCalender.bind(this);\n    this.onMovement = this.onMovement.bind(this);\n\n    this.isFromFocus = false;\n  }\n\n  /**\n   * Lifecycle Method - componentDidMount\n   */\n  componentDidMount() {\n    // Add Handler to handle click outside of screen\n    document.addEventListener('mousedown', this.handleClickOutside);\n    window.addEventListener('scroll', this.onMovement);\n    window.addEventListener('resize', this.onMovement);\n\n    const {\n      name,\n      formStore,\n      dateInner,\n    } = this.props;\n\n    // Update prefill dates\n    if (formStore && formStore[name]) {\n      this.setSelectedDate(storeStringToDate(formStore[name]));\n    }\n\n    this.setState({\n      dateInnerDOM: ReactDOM.findDOMNode(dateInner),\n      datePickerDOM: ReactDOM.findDOMNode(this.wrapperRef),\n    });\n\n    this.onMovement();\n  }\n\n  /**\n   * Lifecycle Method - componentDidUpdate\n   *\n   * Used to update dropdown position\n   * of month and year selector\n   */\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      currDate,\n      selectedStartDate,\n      selectedEndDate,\n      dateRangeEnd,\n    } = this.state;\n\n    const { isStart } = this.props;\n\n    // If end date is shorten because of start date and\n    // end date is beyond range, shift back date\n    if (!isDateEqual(prevState.dateRangeEnd, dateRangeEnd)) {\n      if (dateRangeEnd < selectedEndDate) {\n        this.setSelectedDate(dateRangeEnd);\n      }\n    }\n\n    // Set month of end date to be not lesser than start date\n    if (!isStart && selectedStartDate && currDate && currDate < selectedStartDate) {\n      this.setNewDate(selectedStartDate);\n    }\n  }\n\n  /**\n   * Lifecycle Method - componentWillUnmount\n   */\n  componentWillUnmount() {\n    const { dateInner } = this.props;\n    // Remove Handler to handle click outside of screen\n    document.removeEventListener('mousedown', this.handleClickOutside);\n    window.removeEventListener('scroll', this.onMovement);\n    window.removeEventListener('resize', this.onMovement);\n\n    if (dateInner) {\n      dateInner.toggleDateInner(false);\n    }\n  }\n\n  onMovement() {\n    const { dateInnerDOM, datePickerDOM, isOpened } = this.state;\n    const { dateInner } = this.props;\n\n    if (isOpened && dateInnerDOM && datePickerDOM) {\n      const isOverHeight = datePickerDOM.getBoundingClientRect().bottom + 540 > window.outerHeight;\n      dateInner.setArrowUp(!isOverHeight);\n      const top = isOverHeight ? datePickerDOM.getBoundingClientRect().top - 450 : datePickerDOM.getBoundingClientRect().bottom + 10;\n      dateInnerDOM.style.left = `${datePickerDOM.getBoundingClientRect().left}px`;\n      dateInnerDOM.style.top = `${top}px`;\n    }\n  }\n\n  /**\n   * setNewDate\n   *\n   * Set new current date and\n   * start and end of calender\n   *\n   * @param {date} date\n   */\n  setNewDate(date, extraState = {}, selectedCallback) {\n    const { isOpened } = this.state;\n    const { dateInner } = this.props;\n    const newYear = date.getFullYear();\n    const newMonth = date.getMonth();\n\n    // Get first and last day of visible month\n    const firstDay = new Date(newYear, newMonth, 1);\n    const lastDay = new Date(newYear, newMonth + 1, 0);\n\n    // Set new calender values\n    this.setState({\n      currDate: date,\n      currFirstDay: firstDay,\n      currLastDay: lastDay,\n      ...extraState,\n    }, () => {\n      if (selectedCallback) {\n        selectedCallback({\n          currDate: date,\n          currFirstDay: firstDay,\n          currLastDay: lastDay,\n          selectedStartDate: extraState.selectedStartDate,\n          selectedEndDate: extraState.selectedEndDate,\n        });\n      } else if (isOpened) {\n        dateInner.setNewState({\n          currDate: date,\n          currFirstDay: firstDay,\n          currLastDay: lastDay,\n        });\n      }\n    });\n  }\n\n  /**\n   * setCalender\n   *\n   * Set visible calender\n   *\n   * @param {number} month\n   * @param {number} year\n   */\n  setCalender(month, year) {\n    const {\n      dateRangeStart,\n      dateRangeEnd,\n    } = this.state;\n\n    let date = new Date(year, month);\n\n    // Cap date range\n    if (date < dateRangeStart) {\n      date = dateRangeStart;\n    } else if (date > dateRangeEnd) {\n      date = dateRangeEnd;\n    }\n\n    this.setNewDate(date);\n    this.wrapperRef.focus();\n  }\n\n  /**\n   * setSelectedDate\n   *\n   * Updated selected date to store\n   *\n   * @param {date} date\n   */\n  setSelectedDate(date, selectedCallback = () => {}) {\n    const { selectedStartDate, selectedEndDate } = this.state;\n\n    const {\n      change,\n      name,\n      isStart,\n      isRange,\n      endRef,\n      // dateInner,\n    } = this.props;\n\n    try {\n      let storeString = null;\n      let dateString = null;\n      if (date) {\n        // Get date values in string\n        const currDay = (`0${date.getDate().toString()}`).slice(-2);\n        const currMonth = (`0${(date.getMonth() + 1).toString()}`).slice(-2);\n        const currYear = date.getFullYear().toString();\n\n        // Get date in string\n        dateString = `${currDay}/${currMonth}/${currYear}`;\n        // String to store in store\n        storeString = `${currDay} ${monthTextMapping[currMonth - 1].slice(0, 3)} ${currYear}`;\n      }\n      \n      // Update the date in the store for the form\n      change(name, storeString);\n\n      let newSelectedStartDate = selectedStartDate;\n      let newSelectedEndDate = selectedEndDate;\n\n      // Set end and start to selected date\n      // Default use selectedStartDate if not range\n      if (isRange && !isStart) {\n        newSelectedEndDate = date;\n      } else {\n        newSelectedStartDate = date;\n        if (newSelectedEndDate < newSelectedStartDate) {\n          newSelectedEndDate = newSelectedStartDate;\n          \n          if (endRef && endRef.wrappedInstance) {\n            endRef.wrappedInstance.setSelectedDate(newSelectedStartDate);\n          }\n        }\n      }\n\n      // Set the new date\n      this.setNewDate(date, {\n        isOpened: false,\n        selectedString: dateString,\n        selectedEndDate: newSelectedEndDate,\n        selectedStartDate: newSelectedStartDate,\n      }, selectedCallback);\n\n      // Close the dropdown and update the selectedString\n      // Since is selection, there will be no error\n      // this.setState({\n      //   isOpened: false,\n      //   selectedString: dateString,\n      //   selectedEndDate: newSelectedEndDate,\n      //   selectedStartDate: newSelectedStartDate,\n      // });\n\n      this.isFromFocus = false;\n    } catch (error) {\n      // eslint-disable-next-line no-empty\n    }\n  }\n\n  /**\n   * End selection if click on outside\n   *\n   * @param {object} event\n   */\n  handleClickOutside(event) {\n    const { isOpened, dateInnerDOM } = this.state;\n    const { isTargetWithinDateRangePicker, dateInner } = this.props;\n\n    // If clicked outside of daterpicekr Inner or wrapper, go to exit\n    if (\n      isOpened &&\n      this.wrapperRef &&\n      !this.wrapperRef.contains(event.target) &&\n      dateInnerDOM &&\n      !dateInnerDOM.contains(event.target)\n    ) {\n      this.setState({\n        isOpened: false,\n      });\n\n      // If outside of any datepicker controls\n      if (!isTargetWithinDateRangePicker || (isTargetWithinDateRangePicker && !isTargetWithinDateRangePicker(event.target))) {\n        dateInner.toggleDateInner(false);\n      }\n\n      this.handleExit();\n\n      this.isFromFocus = false;\n      // this.handleExit();\n      this.doNotBlur = false;\n      return;\n    }\n\n    this.doNotBlur = true;\n  }\n\n  /**\n   * handleKeyPress\n   *\n   * Handle on enter key\n   *\n   * @param {object} target\n   */\n  handleKeyPress(target) {\n    const { dateInner } = this.props;\n\n    // If pressed on enter, go to exit\n    if (target.charCode === 13) {\n      target.preventDefault();\n      this.handleExit();\n      dateInner.toggleDateInner(false);\n    }\n  }\n\n  /**\n   * handleSelectClick\n   *\n   * Handle toggling of datepicker\n   */\n  handleSelectClick() {\n    const {\n      isOpened,\n      placeHolder,\n      currDate,\n      currFirstDay,\n      currLastDay,\n      selectedStartDate,\n      selectedEndDate,\n      dateRangeStart,\n      dateRangeEnd,\n    } = this.state;\n\n    const {\n      change,\n      name,\n      dateInner,\n      isRange,\n      isStart,\n      formStore,\n    } = this.props;\n\n    let selectedStart = selectedStartDate || (formStore && storeStringToDate(formStore.start_date));\n    let selectedEnd = selectedEndDate || (formStore && storeStringToDate(formStore.end_date));\n    selectedStart = selectedStart === -1 ? null : selectedStart;\n    selectedEnd = selectedEnd === -1 ? null : selectedEnd;\n\n    const selectedCallback = (extraState = {}) => {\n      dateInner.toggleDateInner(!isOpened, {\n        setNewDate: this.setNewDate,\n        setSelectedDate: this.setSelectedDate,\n        currDate,\n        currFirstDay,\n        currLastDay,\n        selectedStartDate: selectedStart,\n        selectedEndDate: selectedEnd,\n        dateRangeStart,\n        dateRangeEnd,\n        isRange,\n        isStart,\n        ...extraState,\n      });\n\n      // ]if (!this.isFromFocus) {\n      this.setState({\n        isOpened: !isOpened,\n      }, () => {\n        if (!isOpened) {\n          this.onMovement();\n        }\n      });\n\n      const { selectedString } = this.state;\n      // Open if not opened and set the input string\n      // back to date form\n      if (!isOpened) {\n        if (selectedString !== placeHolder) {\n          change(name, selectedString);\n        }\n      } else {\n        this.handleExit();\n        if (this.inputField) {\n          const input = this.inputField.getRenderedComponent();\n          if (input) {\n            setTimeout(() => input.blur(), 2);\n          }\n        }\n      }\n      // }\n\n      this.isFromFocus = false;\n    };\n\n    if (isStart && selectedStart) {\n      this.setSelectedDate(selectedStart, selectedCallback);\n    } else if (selectedEnd) {\n      this.setSelectedDate(selectedEnd, selectedCallback);\n    } else {\n      selectedCallback();\n    }\n\n    // setTimeout(() => {\n    //   dateInner.toggleDateInner(!isOpened, {\n    //     setNewDate: this.setNewDate,\n    //     setSelectedDate: this.setSelectedDate,\n    //     currDate,\n    //     currFirstDay,\n    //     currLastDay,\n    //     selectedStartDate: selectedStart,\n    //     selectedEndDate: selectedEnd,\n    //     dateRangeStart,\n    //     dateRangeEnd,\n    //     isRange,\n    //     isStart,\n    //   });\n\n    //   // ]if (!this.isFromFocus) {\n    //   this.setState({\n    //     isOpened: !isOpened,\n    //   }, () => {\n    //     if (!isOpened) {\n    //       this.onMovement();\n    //     }\n    //   });\n\n    //   const { selectedString } = this.state;\n    //   // Open if not opened and set the input string\n    //   // back to date form\n    //   if (!isOpened) {\n    //     if (selectedString !== placeHolder) {\n    //       change(name, selectedString);\n    //     }\n    //   } else {\n    //     this.handleExit();\n    //     if (this.inputField) {\n    //       const input = this.inputField.getRenderedComponent();\n    //       if (input) {\n    //         setTimeout(() => input.blur(), 2);\n    //       }\n    //     }\n    //   }\n    //   // }\n\n    //   this.isFromFocus = false;\n    // }, 10);\n  }\n\n  /**\n   * Handles on input changes\n   *\n   * @param {object} event\n   */\n  async handleOnInputChange(event) {\n    // Wait for event to finish\n    await event;\n    // Get current input value\n    const value = event.target.defaultValue;\n\n    // Set new list items, height of dropdown list,\n    // Force open list on type, and set selected string to value\n    this.setState({\n      selectedString: value,\n    });\n  }\n\n  handleBlur(event) {\n    const isChildren = this.wrapperRef.contains(event.relatedTarget);\n    if (!isChildren && !this.doNotBlur) {\n      // Hackish, but to make sure this comes after setNewDate\n      setTimeout(() => {\n        this.handleExit();\n        this.isFromFocus = false;\n      }, 100);\n    }\n\n    this.doNotBlur = false;\n  }\n\n  handleFocus(event) {\n    const isChildren = this.wrapperRef.contains(event.relatedTarget);\n    if (event.relatedTarget && !isChildren && !this.isClicked) {\n      this.handleSelectClick();\n      this.isFromFocus = true;\n    }\n\n    this.isClicked = false;\n  }\n  /**\n   * handleExit\n   *\n   * Handle exit selection of entered input\n   */\n  handleExit() {\n    const {\n      selectedString,\n      dateRangeEnd,\n      dateRangeStart,\n      selectedStartDate,\n    } = this.state;\n\n    const {\n      change,\n      name,\n      isRange,\n      isStart,\n    } = this.props;\n\n    // Check if input string is valid date\n    let isError = !moment(selectedString, 'DD/MM/YYYY', true).isValid();\n    // The date in date form\n    let selectedDate = null;\n\n    // Check if date is within date range\n    if (!isError) {\n      const parts = selectedString.split('/');\n      selectedDate = new Date(parts[2], parts[1] - 1, parts[0]);\n      // isError = isStart && selectedEndDate ? selectedDate > selectedEndDate : isError;\n      isError = !isStart && selectedStartDate ? selectedStartDate > selectedDate : isError;\n      isError = selectedDate < dateRangeStart || dateRangeEnd < selectedDate ? true : isError;\n    }\n\n    // Close the dropdown and set any errors\n    this.setState({\n      isOpened: false,\n    });\n\n    // Set null to selected start or end date if error\n    if (isError) {\n      if (isRange && !isStart) {\n        this.setState({\n          selectedEndDate: null,\n        });\n      } else {\n        this.setState({\n          selectedStartDate: null,\n        });\n      }\n\n      // Null strings and store value\n      this.setState({\n        selectedString: '',\n      });\n      change(name, null);\n\n      return;\n    }\n\n    this.setSelectedDate(selectedDate);\n  }\n\n  /**\n   * Render component\n   */\n  render() {\n    const {\n      isOpened,\n      height,\n      placeHolder,\n    } = this.state;\n\n    if (height) {\n      const {\n        name,\n        zIndex,\n        maxWidth,\n        isRange,\n        isStart,\n        desc,\n        extraInfo,\n        errorString,\n        formStore,\n        validateForm,\n      } = this.props;\n\n      const mainStyle = {\n        height,\n        zIndex,\n        maxWidth,\n      };\n\n      const dropDownOpenStyle = isOpened ? 'dropdown-container-opened' : 'dropdown-container-closed';\n      const isErrorStyle = errorString ? 'error' : '';\n      const rangeIcon = isStart ? DateIn : DateOut;\n      const rangIconStyle = isStart ? 'date-img-in' : 'date-img-out';\n\n      const refValue = formStore ? formStore[name] : null;\n\n      return (\n        <FormInputWrapper\n          desc={desc}\n          ref={node => (this.formParent = node)}\n          extraInfo={extraInfo}\n          errorString={errorString}\n          refValue={refValue}\n          validateForm={validateForm}\n        >\n          <div\n            className=\"dropdown datepicker\"\n            style={mainStyle}\n            ref={node => (this.wrapperRef = node)}\n            onBlur={event => this.handleBlur(event)}\n            onFocus={event => this.handleFocus(event)}\n          >\n            <div\n              className={`dropdown-container \n                          ${dropDownOpenStyle} \n                          ${isErrorStyle}\n                        `}\n              style={{ height }}\n              onKeyUp={() => {}}\n              role=\"button\"\n              tabIndex={-1}\n            >\n              <div\n                className=\"selected-container align-items-center\"\n                style={{ height }}\n              >\n                {\n                  isRange ?\n                    <img\n                      className={`date-img ${rangIconStyle}`}\n                      src={rangeIcon}\n                      alt=\"Date Range Icon\"\n                    />\n                  :\n                    null\n                }\n                <div className=\"selected-text text-style\">\n                  <Field\n                    name={name}\n                    ref={node => this.inputField = node}\n                    withRef\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={placeHolder}\n                    autoComplete=\"off\"\n                    onChange={event => this.handleOnInputChange(event)}\n                    onKeyPress={this.handleKeyPress}\n                    onMouseDown={(e) => {\n                      if (window.innerWidth <= 576) {\n                        e.preventDefault();\n                      }\n                      this.isClicked = true;\n                      this.handleSelectClick();\n                    }}\n                    tabIndex={0}\n                  />\n                </div>\n                {\n                  isRange ?\n                    null\n                  :\n                    <div\n                      role=\"button\"\n                      className=\"selected-arrow\"\n                      onMouseDown={() => { this.isClicked = true; this.handleSelectClick(); }}\n                      tabIndex={-1}\n                    >\n                      <img\n                        src={Arrow}\n                        alt=\"arrow.svg\"\n                        className={`selected-arrow-style ${isOpened ? 'angle-up' : 'angle-down'}`}\n                      />\n                    </div>\n                }\n              </div>\n            </div>\n          </div>\n        </FormInputWrapper>\n      );\n    }\n\n    return null;\n  }\n}\n\nDatePickerV2.defaultProps = {\n  maxWidth: '100%',\n  isStart: true,\n  isRange: false,\n  startDate: null,\n  endDate: null,\n  currDate: null,\n  placeholderString: placeholderStringDefault,\n  desc: null,\n  extraInfo: null,\n  errorString: null,\n  formStore: null,\n  validateForm: null,\n  isTargetWithinDateRangePicker: null,\n  endRef: null,\n};\n\nDatePickerV2.propTypes = {\n  formStore: PropTypes.object,\n  maxWidth: PropTypes.string,\n  size: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  zIndex: PropTypes.number.isRequired,\n  change: PropTypes.func.isRequired,\n  isStart: PropTypes.bool,\n  isRange: PropTypes.bool,\n  startDate: PropTypes.instanceOf(Date),\n  endDate: PropTypes.instanceOf(Date),\n  currDate: PropTypes.instanceOf(Date),\n  placeholderString: PropTypes.string,\n  desc: PropTypes.string,\n  extraInfo: PropTypes.object,\n  errorString: PropTypes.string,\n  validateForm: PropTypes.func,\n  dateInner: PropTypes.object.isRequired,\n  isTargetWithinDateRangePicker: PropTypes.func,\n  endRef: PropTypes.object,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  formStore: (getFormValues(ownProps.form)(state)),\n  dateInner: state.datepicker.datePickerInner,\n});\n\nexport default connect(mapStateToProps, null, null, { withRef: true })(DatePickerV2);\n","module.exports = __webpack_public_path__ + \"static/media/CashbackLogo.47f3e5e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/dateIn.c0ce64e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/dateOut.c0f774d4.svg\";","/**\n * CashbackBalance.js\n * Component that displays the user's cashback balance\n *\n * @version 0.0.1\n * @author [Wilson Phoo](wilson@policypal.com)\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CashbackLogo from 'assets/images/common/CashbackLogo.svg';\n\nimport './CashbackBalance.scss';\n\n/**\n * Custom Form Dropdown class\n */\nclass CashbackBalance extends Component {\n  render() {\n    const { cashbackBalance } = this.props;\n\n    return (\n      <div className=\"cashback-summary\">\n        <img src={CashbackLogo} alt=\"CashbackLogo.svg\" />\n        <p>${cashbackBalance}</p>\n      </div>\n    );\n  }\n}\n\nCashbackBalance.defaultProps = {\n};\n\nCashbackBalance.propTypes = {\n  cashbackBalance: PropTypes.string.isRequired,\n};\n\nexport default CashbackBalance;\n"],"sourceRoot":""}